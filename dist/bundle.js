/*! For license information please see bundle.js.LICENSE.txt */
!function(){var e={1983:function(e,t,n){"use strict";n(6266),n(990),n(911),n(4160),n(6197),n(6728),n(4039),n(3568),n(8051),n(8250),n(5434),n(4952),n(6337),n(5666)},6266:function(e,t,n){n(5767),n(8132),n(8388),n(7470),n(4882),n(1520),n(7476),n(9622),n(9375),n(3533),n(4672),n(4157),n(5095),n(9892),n(5115),n(9176),n(8838),n(6253),n(9730),n(6059),n(8377),n(1084),n(4299),n(1246),n(726),n(1901),n(5972),n(3403),n(2516),n(9371),n(6479),n(1736),n(1889),n(5177),n(6943),n(6503),n(6786),n(932),n(7526),n(1591),n(9073),n(347),n(579),n(4669),n(7710),n(5789),n(3514),n(9978),n(8472),n(6946),n(5068),n(413),n(191),n(8306),n(4564),n(9115),n(9539),n(6620),n(2850),n(823),n(7732),n(856),n(703),n(1539),n(5292),n(6629),n(3694),n(7648),n(7795),n(4531),n(3605),n(6780),n(9937),n(511),n(1822),n(9977),n(1031),n(6331),n(1560),n(774),n(522),n(8295),n(7842),n(110),n(75),n(4336),n(1802),n(8837),n(6773),n(5745),n(3057),n(3750),n(3369),n(9564),n(2e3),n(8977),n(2310),n(4899),n(1842),n(6997),n(3946),n(8269),n(6108),n(6774),n(1466),n(9357),n(6142),n(1876),n(851),n(8416),n(8184),n(147),n(9192),n(142),n(1786),n(5368),n(6964),n(2152),n(4821),n(9103),n(1303),n(3318),n(162),n(3834),n(1572),n(2139),n(685),n(5535),n(7347),n(3049),n(6633),n(8989),n(8270),n(4510),n(3984),n(5769),n(55),n(6014),e.exports=n(5645)},911:function(e,t,n){n(1268),e.exports=n(5645).Array.flatMap},990:function(e,t,n){n(2773),e.exports=n(5645).Array.includes},5434:function(e,t,n){n(3276),e.exports=n(5645).Object.entries},8051:function(e,t,n){n(8351),e.exports=n(5645).Object.getOwnPropertyDescriptors},8250:function(e,t,n){n(6409),e.exports=n(5645).Object.values},4952:function(e,t,n){"use strict";n(851),n(9865),e.exports=n(5645).Promise.finally},6197:function(e,t,n){n(2770),e.exports=n(5645).String.padEnd},4160:function(e,t,n){n(1784),e.exports=n(5645).String.padStart},4039:function(e,t,n){n(4325),e.exports=n(5645).String.trimRight},6728:function(e,t,n){n(5869),e.exports=n(5645).String.trimLeft},3568:function(e,t,n){n(9665),e.exports=n(8787).f("asyncIterator")},115:function(e,t,n){n(4579),e.exports=n(1327).global},5663:function(e){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},2159:function(e,t,n){var r=n(6727);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},1327:function(e){var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},9216:function(e,t,n){var r=n(5663);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},9666:function(e,t,n){e.exports=!n(7929)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},7467:function(e,t,n){var r=n(6727),o=n(3938).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},3856:function(e,t,n){var r=n(3938),o=n(1327),i=n(9216),u=n(1818),a=n(7069),s=function(e,t,n){var c,l,p,f=e&s.F,d=e&s.G,h=e&s.S,g=e&s.P,m=e&s.B,y=e&s.W,D=d?o:o[t]||(o[t]={}),v=D.prototype,E=d?r:h?r[t]:(r[t]||{}).prototype;for(c in d&&(n=t),n)(l=!f&&E&&void 0!==E[c])&&a(D,c)||(p=l?E[c]:n[c],D[c]=d&&"function"!=typeof E[c]?n[c]:m&&l?i(p,r):y&&E[c]==p?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(p):g&&"function"==typeof p?i(Function.call,p):p,g&&((D.virtual||(D.virtual={}))[c]=p,e&s.R&&v&&!v[c]&&u(v,c,p)))};s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},7929:function(e){e.exports=function(e){try{return!!e()}catch(e){return!0}}},3938:function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},7069:function(e){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},1818:function(e,t,n){var r=n(4743),o=n(3101);e.exports=n(9666)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},3758:function(e,t,n){e.exports=!n(9666)&&!n(7929)((function(){return 7!=Object.defineProperty(n(7467)("div"),"a",{get:function(){return 7}}).a}))},6727:function(e){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},4743:function(e,t,n){var r=n(2159),o=n(3758),i=n(3206),u=Object.defineProperty;t.f=n(9666)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},3101:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},3206:function(e,t,n){var r=n(6727);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},4579:function(e,t,n){var r=n(3856);r(r.G,{global:n(3938)})},4963:function(e){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},3365:function(e,t,n){var r=n(2032);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},7722:function(e,t,n){var r=n(6314)("unscopables"),o=Array.prototype;null==o[r]&&n(7728)(o,r,{}),e.exports=function(e){o[r][e]=!0}},6793:function(e,t,n){"use strict";var r=n(4496)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},3328:function(e){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},7007:function(e,t,n){var r=n(5286);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},5216:function(e,t,n){"use strict";var r=n(508),o=n(2337),i=n(875);e.exports=[].copyWithin||function(e,t){var n=r(this),u=i(n.length),a=o(e,u),s=o(t,u),c=arguments.length>2?arguments[2]:void 0,l=Math.min((void 0===c?u:o(c,u))-s,u-a),p=1;for(s<a&&a<s+l&&(p=-1,s+=l-1,a+=l-1);l-- >0;)s in n?n[a]=n[s]:delete n[a],a+=p,s+=p;return n}},6852:function(e,t,n){"use strict";var r=n(508),o=n(2337),i=n(875);e.exports=function(e){for(var t=r(this),n=i(t.length),u=arguments.length,a=o(u>1?arguments[1]:void 0,n),s=u>2?arguments[2]:void 0,c=void 0===s?n:o(s,n);c>a;)t[a++]=e;return t}},9315:function(e,t,n){var r=n(2110),o=n(875),i=n(2337);e.exports=function(e){return function(t,n,u){var a,s=r(t),c=o(s.length),l=i(u,c);if(e&&n!=n){for(;c>l;)if((a=s[l++])!=a)return!0}else for(;c>l;l++)if((e||l in s)&&s[l]===n)return e||l||0;return!e&&-1}}},50:function(e,t,n){var r=n(741),o=n(9797),i=n(508),u=n(875),a=n(6886);e.exports=function(e,t){var n=1==e,s=2==e,c=3==e,l=4==e,p=6==e,f=5==e||p,d=t||a;return function(t,a,h){for(var g,m,y=i(t),D=o(y),v=r(a,h,3),E=u(D.length),b=0,C=n?d(t,E):s?d(t,0):void 0;E>b;b++)if((f||b in D)&&(m=v(g=D[b],b,y),e))if(n)C[b]=m;else if(m)switch(e){case 3:return!0;case 5:return g;case 6:return b;case 2:C.push(g)}else if(l)return!1;return p?-1:c||l?l:C}}},7628:function(e,t,n){var r=n(4963),o=n(508),i=n(9797),u=n(875);e.exports=function(e,t,n,a,s){r(t);var c=o(e),l=i(c),p=u(c.length),f=s?p-1:0,d=s?-1:1;if(n<2)for(;;){if(f in l){a=l[f],f+=d;break}if(f+=d,s?f<0:p<=f)throw TypeError("Reduce of empty array with no initial value")}for(;s?f>=0:p>f;f+=d)f in l&&(a=t(a,l[f],f,c));return a}},2736:function(e,t,n){var r=n(5286),o=n(4302),i=n(6314)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},6886:function(e,t,n){var r=n(2736);e.exports=function(e,t){return new(r(e))(t)}},4398:function(e,t,n){"use strict";var r=n(4963),o=n(5286),i=n(7242),u=[].slice,a={},s=function(e,t,n){if(!(t in a)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";a[t]=Function("F,a","return new F("+r.join(",")+")")}return a[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=u.call(arguments,1),a=function(){var r=n.concat(u.call(arguments));return this instanceof a?s(t,r.length,r):i(t,r,e)};return o(t.prototype)&&(a.prototype=t.prototype),a}},1488:function(e,t,n){var r=n(2032),o=n(6314)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,u;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(u=r(t))&&"function"==typeof t.callee?"Arguments":u}},2032:function(e){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},9824:function(e,t,n){"use strict";var r=n(9275).f,o=n(2503),i=n(4408),u=n(741),a=n(3328),s=n(3531),c=n(2923),l=n(5436),p=n(2974),f=n(7057),d=n(4728).fastKey,h=n(1616),g=f?"_s":"size",m=function(e,t){var n,r=d(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var l=e((function(e,r){a(e,l,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[g]=0,null!=r&&s(r,n,e[c],e)}));return i(l.prototype,{clear:function(){for(var e=h(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[g]=0},delete:function(e){var n=h(this,t),r=m(n,e);if(r){var o=r.n,i=r.p;delete n._i[r.i],r.r=!0,i&&(i.n=o),o&&(o.p=i),n._f==r&&(n._f=o),n._l==r&&(n._l=i),n[g]--}return!!r},forEach:function(e){h(this,t);for(var n,r=u(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!m(h(this,t),e)}}),f&&r(l.prototype,"size",{get:function(){return h(this,t)[g]}}),l},def:function(e,t,n){var r,o,i=m(e,t);return i?i.v=n:(e._l=i={i:o=d(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=i),r&&(r.n=i),e[g]++,"F"!==o&&(e._i[o]=i)),e},getEntry:m,setStrong:function(e,t,n){c(e,t,(function(e,n){this._t=h(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this,t=e._k,n=e._l;n&&n.r;)n=n.p;return e._t&&(e._l=n=n?n.n:e._t._f)?l(0,"keys"==t?n.k:"values"==t?n.v:[n.k,n.v]):(e._t=void 0,l(1))}),n?"entries":"values",!n,!0),p(t)}}},3657:function(e,t,n){"use strict";var r=n(4408),o=n(4728).getWeak,i=n(7007),u=n(5286),a=n(3328),s=n(3531),c=n(50),l=n(9181),p=n(1616),f=c(5),d=c(6),h=0,g=function(e){return e._l||(e._l=new m)},m=function(){this.a=[]},y=function(e,t){return f(e.a,(function(e){return e[0]===t}))};m.prototype={get:function(e){var t=y(this,e);if(t)return t[1]},has:function(e){return!!y(this,e)},set:function(e,t){var n=y(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=d(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,i){var c=e((function(e,r){a(e,c,t,"_i"),e._t=t,e._i=h++,e._l=void 0,null!=r&&s(r,n,e[i],e)}));return r(c.prototype,{delete:function(e){if(!u(e))return!1;var n=o(e);return!0===n?g(p(this,t)).delete(e):n&&l(n,this._i)&&delete n[this._i]},has:function(e){if(!u(e))return!1;var n=o(e);return!0===n?g(p(this,t)).has(e):n&&l(n,this._i)}}),c},def:function(e,t,n){var r=o(i(t),!0);return!0===r?g(e).set(t,n):r[e._i]=n,e},ufstore:g}},5795:function(e,t,n){"use strict";var r=n(3816),o=n(2985),i=n(7234),u=n(4408),a=n(4728),s=n(3531),c=n(3328),l=n(5286),p=n(4253),f=n(7462),d=n(2943),h=n(266);e.exports=function(e,t,n,g,m,y){var D=r[e],v=D,E=m?"set":"add",b=v&&v.prototype,C={},A=function(e){var t=b[e];i(b,e,"delete"==e||"has"==e?function(e){return!(y&&!l(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return y&&!l(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof v&&(y||b.forEach&&!p((function(){(new v).entries().next()})))){var F=new v,x=F[E](y?{}:-0,1)!=F,S=p((function(){F.has(1)})),w=f((function(e){new v(e)})),T=!y&&p((function(){for(var e=new v,t=5;t--;)e[E](t,t);return!e.has(-0)}));w||((v=t((function(t,n){c(t,v,e);var r=h(new D,t,v);return null!=n&&s(n,m,r[E],r),r}))).prototype=b,b.constructor=v),(S||T)&&(A("delete"),A("has"),m&&A("get")),(T||x)&&A(E),y&&b.clear&&delete b.clear}else v=g.getConstructor(t,e,m,E),u(v.prototype,n),a.NEED=!0;return d(v,e),C[e]=v,o(o.G+o.W+o.F*(v!=D),C),y||g.setStrong(v,e,m),v}},5645:function(e){var t=e.exports={version:"2.6.12"};"number"==typeof __e&&(__e=t)},2811:function(e,t,n){"use strict";var r=n(9275),o=n(681);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},741:function(e,t,n){var r=n(4963);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},3537:function(e,t,n){"use strict";var r=n(4253),o=Date.prototype.getTime,i=Date.prototype.toISOString,u=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-50000000000001))}))||!r((function(){i.call(new Date(NaN))}))?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+u(e.getUTCMonth()+1)+"-"+u(e.getUTCDate())+"T"+u(e.getUTCHours())+":"+u(e.getUTCMinutes())+":"+u(e.getUTCSeconds())+"."+(n>99?n:"0"+u(n))+"Z"}:i},870:function(e,t,n){"use strict";var r=n(7007),o=n(1689),i="number";e.exports=function(e){if("string"!==e&&e!==i&&"default"!==e)throw TypeError("Incorrect hint");return o(r(this),e!=i)}},1355:function(e){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},7057:function(e,t,n){e.exports=!n(4253)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},2457:function(e,t,n){var r=n(5286),o=n(3816).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},4430:function(e){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},5541:function(e,t,n){var r=n(7184),o=n(4548),i=n(4682);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var u,a=n(e),s=i.f,c=0;a.length>c;)s.call(e,u=a[c++])&&t.push(u);return t}},2985:function(e,t,n){var r=n(3816),o=n(5645),i=n(7728),u=n(7234),a=n(741),s=function(e,t,n){var c,l,p,f,d=e&s.F,h=e&s.G,g=e&s.S,m=e&s.P,y=e&s.B,D=h?r:g?r[t]||(r[t]={}):(r[t]||{}).prototype,v=h?o:o[t]||(o[t]={}),E=v.prototype||(v.prototype={});for(c in h&&(n=t),n)p=((l=!d&&D&&void 0!==D[c])?D:n)[c],f=y&&l?a(p,r):m&&"function"==typeof p?a(Function.call,p):p,D&&u(D,c,p,e&s.U),v[c]!=p&&i(v,c,f),m&&E[c]!=p&&(E[c]=p)};r.core=o,s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},8852:function(e,t,n){var r=n(6314)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},4253:function(e){e.exports=function(e){try{return!!e()}catch(e){return!0}}},8082:function(e,t,n){"use strict";n(8269);var r=n(7234),o=n(7728),i=n(4253),u=n(1355),a=n(6314),s=n(1165),c=a("species"),l=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),p=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var f=a(e),d=!i((function(){var t={};return t[f]=function(){return 7},7!=""[e](t)})),h=d?!i((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[f](""),!t})):void 0;if(!d||!h||"replace"===e&&!l||"split"===e&&!p){var g=/./[f],m=n(u,f,""[e],(function(e,t,n,r,o){return t.exec===s?d&&!o?{done:!0,value:g.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),y=m[0],D=m[1];r(String.prototype,e,y),o(RegExp.prototype,f,2==t?function(e,t){return D.call(e,this,t)}:function(e){return D.call(e,this)})}}},3218:function(e,t,n){"use strict";var r=n(7007);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},3325:function(e,t,n){"use strict";var r=n(4302),o=n(5286),i=n(875),u=n(741),a=n(6314)("isConcatSpreadable");e.exports=function e(t,n,s,c,l,p,f,d){for(var h,g,m=l,y=0,D=!!f&&u(f,d,3);y<c;){if(y in s){if(h=D?D(s[y],y,n):s[y],g=!1,o(h)&&(g=void 0!==(g=h[a])?!!g:r(h)),g&&p>0)m=e(t,n,h,i(h.length),m,p-1)-1;else{if(m>=9007199254740991)throw TypeError();t[m]=h}m++}y++}return m}},3531:function(e,t,n){var r=n(741),o=n(8851),i=n(6555),u=n(7007),a=n(875),s=n(9002),c={},l={},p=e.exports=function(e,t,n,p,f){var d,h,g,m,y=f?function(){return e}:s(e),D=r(n,p,t?2:1),v=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(i(y)){for(d=a(e.length);d>v;v++)if((m=t?D(u(h=e[v])[0],h[1]):D(e[v]))===c||m===l)return m}else for(g=y.call(e);!(h=g.next()).done;)if((m=o(g,D,h.value,t))===c||m===l)return m};p.BREAK=c,p.RETURN=l},18:function(e,t,n){e.exports=n(3825)("native-function-to-string",Function.toString)},3816:function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},9181:function(e){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},7728:function(e,t,n){var r=n(9275),o=n(681);e.exports=n(7057)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},639:function(e,t,n){var r=n(3816).document;e.exports=r&&r.documentElement},1734:function(e,t,n){e.exports=!n(7057)&&!n(4253)((function(){return 7!=Object.defineProperty(n(2457)("div"),"a",{get:function(){return 7}}).a}))},266:function(e,t,n){var r=n(5286),o=n(7375).set;e.exports=function(e,t,n){var i,u=t.constructor;return u!==n&&"function"==typeof u&&(i=u.prototype)!==n.prototype&&r(i)&&o&&o(e,i),e}},7242:function(e){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},9797:function(e,t,n){var r=n(2032);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},6555:function(e,t,n){var r=n(2803),o=n(6314)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},4302:function(e,t,n){var r=n(2032);e.exports=Array.isArray||function(e){return"Array"==r(e)}},8367:function(e,t,n){var r=n(5286),o=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&o(e)===e}},5286:function(e){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},5364:function(e,t,n){var r=n(5286),o=n(2032),i=n(6314)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},8851:function(e,t,n){var r=n(7007);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},9988:function(e,t,n){"use strict";var r=n(2503),o=n(681),i=n(2943),u={};n(7728)(u,n(6314)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(u,{next:o(1,n)}),i(e,t+" Iterator")}},2923:function(e,t,n){"use strict";var r=n(4461),o=n(2985),i=n(7234),u=n(7728),a=n(2803),s=n(9988),c=n(2943),l=n(468),p=n(6314)("iterator"),f=!([].keys&&"next"in[].keys()),d="keys",h="values",g=function(){return this};e.exports=function(e,t,n,m,y,D,v){s(n,t,m);var E,b,C,A=function(e){if(!f&&e in w)return w[e];switch(e){case d:case h:return function(){return new n(this,e)}}return function(){return new n(this,e)}},F=t+" Iterator",x=y==h,S=!1,w=e.prototype,T=w[p]||w["@@iterator"]||y&&w[y],B=T||A(y),N=y?x?A("entries"):B:void 0,k="Array"==t&&w.entries||T;if(k&&(C=l(k.call(new e)))!==Object.prototype&&C.next&&(c(C,F,!0),r||"function"==typeof C[p]||u(C,p,g)),x&&T&&T.name!==h&&(S=!0,B=function(){return T.call(this)}),r&&!v||!f&&!S&&w[p]||u(w,p,B),a[t]=B,a[F]=g,y)if(E={values:x?B:A(h),keys:D?B:A(d),entries:N},v)for(b in E)b in w||i(w,b,E[b]);else o(o.P+o.F*(f||S),t,E);return E}},7462:function(e,t,n){var r=n(6314)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],u=i[r]();u.next=function(){return{done:n=!0}},i[r]=function(){return u},e(i)}catch(e){}return n}},5436:function(e){e.exports=function(e,t){return{value:t,done:!!e}}},2803:function(e){e.exports={}},4461:function(e){e.exports=!1},3086:function(e){var t=Math.expm1;e.exports=!t||t(10)>22025.465794806718||t(10)<22025.465794806718||-2e-17!=t(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:t},4934:function(e,t,n){var r=n(1801),o=Math.pow,i=o(2,-52),u=o(2,-23),a=o(2,127)*(2-u),s=o(2,-126);e.exports=Math.fround||function(e){var t,n,o=Math.abs(e),c=r(e);return o<s?c*(o/s/u+1/i-1/i)*s*u:(n=(t=(1+u/i)*o)-(t-o))>a||n!=n?c*(1/0):c*n}},6206:function(e){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},1801:function(e){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},4728:function(e,t,n){var r=n(3953)("meta"),o=n(5286),i=n(9181),u=n(9275).f,a=0,s=Object.isExtensible||function(){return!0},c=!n(4253)((function(){return s(Object.preventExtensions({}))})),l=function(e){u(e,r,{value:{i:"O"+ ++a,w:{}}})},p=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!s(e))return"F";if(!t)return"E";l(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!s(e))return!0;if(!t)return!1;l(e)}return e[r].w},onFreeze:function(e){return c&&p.NEED&&s(e)&&!i(e,r)&&l(e),e}}},4351:function(e,t,n){var r=n(3816),o=n(4193).set,i=r.MutationObserver||r.WebKitMutationObserver,u=r.process,a=r.Promise,s="process"==n(2032)(u);e.exports=function(){var e,t,n,c=function(){var r,o;for(s&&(r=u.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){u.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);n=function(){l.then(c)}}else n=function(){o.call(r,c)};else{var p=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),n=function(){f.data=p=!p}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},3499:function(e,t,n){"use strict";var r=n(4963);function o(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},5345:function(e,t,n){"use strict";var r=n(7057),o=n(7184),i=n(4548),u=n(4682),a=n(508),s=n(9797),c=Object.assign;e.exports=!c||n(4253)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r}))?function(e,t){for(var n=a(e),c=arguments.length,l=1,p=i.f,f=u.f;c>l;)for(var d,h=s(arguments[l++]),g=p?o(h).concat(p(h)):o(h),m=g.length,y=0;m>y;)d=g[y++],r&&!f.call(h,d)||(n[d]=h[d]);return n}:c},2503:function(e,t,n){var r=n(7007),o=n(5588),i=n(4430),u=n(9335)("IE_PROTO"),a=function(){},s=function(){var e,t=n(2457)("iframe"),r=i.length;for(t.style.display="none",n(639).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[i[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(a.prototype=r(e),n=new a,a.prototype=null,n[u]=e):n=s(),void 0===t?n:o(n,t)}},9275:function(e,t,n){var r=n(7007),o=n(1734),i=n(1689),u=Object.defineProperty;t.f=n(7057)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},5588:function(e,t,n){var r=n(9275),o=n(7007),i=n(7184);e.exports=n(7057)?Object.defineProperties:function(e,t){o(e);for(var n,u=i(t),a=u.length,s=0;a>s;)r.f(e,n=u[s++],t[n]);return e}},8693:function(e,t,n){var r=n(4682),o=n(681),i=n(2110),u=n(1689),a=n(9181),s=n(1734),c=Object.getOwnPropertyDescriptor;t.f=n(7057)?c:function(e,t){if(e=i(e),t=u(t,!0),s)try{return c(e,t)}catch(e){}if(a(e,t))return o(!r.f.call(e,t),e[t])}},9327:function(e,t,n){var r=n(2110),o=n(616).f,i={}.toString,u="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return u&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return u.slice()}}(e):o(r(e))}},616:function(e,t,n){var r=n(189),o=n(4430).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},4548:function(e,t){t.f=Object.getOwnPropertySymbols},468:function(e,t,n){var r=n(9181),o=n(508),i=n(9335)("IE_PROTO"),u=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},189:function(e,t,n){var r=n(9181),o=n(2110),i=n(9315)(!1),u=n(9335)("IE_PROTO");e.exports=function(e,t){var n,a=o(e),s=0,c=[];for(n in a)n!=u&&r(a,n)&&c.push(n);for(;t.length>s;)r(a,n=t[s++])&&(~i(c,n)||c.push(n));return c}},7184:function(e,t,n){var r=n(189),o=n(4430);e.exports=Object.keys||function(e){return r(e,o)}},4682:function(e,t){t.f={}.propertyIsEnumerable},3160:function(e,t,n){var r=n(2985),o=n(5645),i=n(4253);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],u={};u[e]=t(n),r(r.S+r.F*i((function(){n(1)})),"Object",u)}},1131:function(e,t,n){var r=n(7057),o=n(7184),i=n(2110),u=n(4682).f;e.exports=function(e){return function(t){for(var n,a=i(t),s=o(a),c=s.length,l=0,p=[];c>l;)n=s[l++],r&&!u.call(a,n)||p.push(e?[n,a[n]]:a[n]);return p}}},7643:function(e,t,n){var r=n(616),o=n(4548),i=n(7007),u=n(3816).Reflect;e.exports=u&&u.ownKeys||function(e){var t=r.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},7743:function(e,t,n){var r=n(3816).parseFloat,o=n(9599).trim;e.exports=1/r(n(4644)+"-0")!=-1/0?function(e){var t=o(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},5960:function(e,t,n){var r=n(3816).parseInt,o=n(9599).trim,i=n(4644),u=/^[-+]?0[xX]/;e.exports=8!==r(i+"08")||22!==r(i+"0x16")?function(e,t){var n=o(String(e),3);return r(n,t>>>0||(u.test(n)?16:10))}:r},188:function(e){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},94:function(e,t,n){var r=n(7007),o=n(5286),i=n(3499);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},681:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},4408:function(e,t,n){var r=n(7234);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},7234:function(e,t,n){var r=n(3816),o=n(7728),i=n(9181),u=n(3953)("src"),a=n(18),s="toString",c=(""+a).split(s);n(5645).inspectSource=function(e){return a.call(e)},(e.exports=function(e,t,n,a){var s="function"==typeof n;s&&(i(n,"name")||o(n,"name",t)),e[t]!==n&&(s&&(i(n,u)||o(n,u,e[t]?""+e[t]:c.join(String(t)))),e===r?e[t]=n:a?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,s,(function(){return"function"==typeof this&&this[u]||a.call(this)}))},7787:function(e,t,n){"use strict";var r=n(1488),o=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},1165:function(e,t,n){"use strict";var r,o,i=n(3218),u=RegExp.prototype.exec,a=String.prototype.replace,s=u,c=(r=/a/,o=/b*/g,u.call(r,"a"),u.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),l=void 0!==/()??/.exec("")[1];(c||l)&&(s=function(e){var t,n,r,o,s=this;return l&&(n=new RegExp("^"+s.source+"$(?!\\s)",i.call(s))),c&&(t=s.lastIndex),r=u.call(s,e),c&&r&&(s.lastIndex=s.global?r.index+r[0].length:t),l&&r&&r.length>1&&a.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=s},7195:function(e){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},7375:function(e,t,n){var r=n(5286),o=n(7007),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(741)(Function.call,n(8693).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},2974:function(e,t,n){"use strict";var r=n(3816),o=n(9275),i=n(7057),u=n(6314)("species");e.exports=function(e){var t=r[e];i&&t&&!t[u]&&o.f(t,u,{configurable:!0,get:function(){return this}})}},2943:function(e,t,n){var r=n(9275).f,o=n(9181),i=n(6314)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},9335:function(e,t,n){var r=n(3825)("keys"),o=n(3953);e.exports=function(e){return r[e]||(r[e]=o(e))}},3825:function(e,t,n){var r=n(5645),o=n(3816),i="__core-js_shared__",u=o[i]||(o[i]={});(e.exports=function(e,t){return u[e]||(u[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(4461)?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},8364:function(e,t,n){var r=n(7007),o=n(4963),i=n(6314)("species");e.exports=function(e,t){var n,u=r(e).constructor;return void 0===u||null==(n=r(u)[i])?t:o(n)}},7717:function(e,t,n){"use strict";var r=n(4253);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},4496:function(e,t,n){var r=n(1467),o=n(1355);e.exports=function(e){return function(t,n){var i,u,a=String(o(t)),s=r(n),c=a.length;return s<0||s>=c?e?"":void 0:(i=a.charCodeAt(s))<55296||i>56319||s+1===c||(u=a.charCodeAt(s+1))<56320||u>57343?e?a.charAt(s):i:e?a.slice(s,s+2):u-56320+(i-55296<<10)+65536}}},2094:function(e,t,n){var r=n(5364),o=n(1355);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(o(e))}},9395:function(e,t,n){var r=n(2985),o=n(4253),i=n(1355),u=/"/g,a=function(e,t,n,r){var o=String(i(e)),a="<"+t;return""!==n&&(a+=" "+n+'="'+String(r).replace(u,"&quot;")+'"'),a+">"+o+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(a),r(r.P+r.F*o((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},5442:function(e,t,n){var r=n(875),o=n(8595),i=n(1355);e.exports=function(e,t,n,u){var a=String(i(e)),s=a.length,c=void 0===n?" ":String(n),l=r(t);if(l<=s||""==c)return a;var p=l-s,f=o.call(c,Math.ceil(p/c.length));return f.length>p&&(f=f.slice(0,p)),u?f+a:a+f}},8595:function(e,t,n){"use strict";var r=n(1467),o=n(1355);e.exports=function(e){var t=String(o(this)),n="",i=r(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(n+=t);return n}},9599:function(e,t,n){var r=n(2985),o=n(1355),i=n(4253),u=n(4644),a="["+u+"]",s=RegExp("^"+a+a+"*"),c=RegExp(a+a+"*$"),l=function(e,t,n){var o={},a=i((function(){return!!u[e]()||"​"!="​"[e]()})),s=o[e]=a?t(p):u[e];n&&(o[n]=s),r(r.P+r.F*a,"String",o)},p=l.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(s,"")),2&t&&(e=e.replace(c,"")),e};e.exports=l},4644:function(e){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},4193:function(e,t,n){var r,o,i,u=n(741),a=n(7242),s=n(639),c=n(2457),l=n(3816),p=l.process,f=l.setImmediate,d=l.clearImmediate,h=l.MessageChannel,g=l.Dispatch,m=0,y={},D=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},v=function(e){D.call(e.data)};f&&d||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++m]=function(){a("function"==typeof e?e:Function(e),t)},r(m),m},d=function(e){delete y[e]},"process"==n(2032)(p)?r=function(e){p.nextTick(u(D,e,1))}:g&&g.now?r=function(e){g.now(u(D,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=v,r=u(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(r=function(e){l.postMessage(e+"","*")},l.addEventListener("message",v,!1)):r="onreadystatechange"in c("script")?function(e){s.appendChild(c("script")).onreadystatechange=function(){s.removeChild(this),D.call(e)}}:function(e){setTimeout(u(D,e,1),0)}),e.exports={set:f,clear:d}},2337:function(e,t,n){var r=n(1467),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},4843:function(e,t,n){var r=n(1467),o=n(875);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=o(t);if(t!==n)throw RangeError("Wrong length!");return n}},1467:function(e){var t=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:t)(e)}},2110:function(e,t,n){var r=n(9797),o=n(1355);e.exports=function(e){return r(o(e))}},875:function(e,t,n){var r=n(1467),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},508:function(e,t,n){var r=n(1355);e.exports=function(e){return Object(r(e))}},1689:function(e,t,n){var r=n(5286);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},8440:function(e,t,n){"use strict";if(n(7057)){var r=n(4461),o=n(3816),i=n(4253),u=n(2985),a=n(9383),s=n(1125),c=n(741),l=n(3328),p=n(681),f=n(7728),d=n(4408),h=n(1467),g=n(875),m=n(4843),y=n(2337),D=n(1689),v=n(9181),E=n(1488),b=n(5286),C=n(508),A=n(6555),F=n(2503),x=n(468),S=n(616).f,w=n(9002),T=n(3953),B=n(6314),N=n(50),k=n(9315),P=n(8364),O=n(6997),_=n(2803),I=n(7462),L=n(2974),M=n(6852),j=n(5216),R=n(9275),V=n(8693),q=R.f,$=V.f,W=o.RangeError,U=o.TypeError,J=o.Uint8Array,G="ArrayBuffer",z="SharedArrayBuffer",H="BYTES_PER_ELEMENT",X=Array.prototype,Y=s.ArrayBuffer,K=s.DataView,Q=N(0),Z=N(2),ee=N(3),te=N(4),ne=N(5),re=N(6),oe=k(!0),ie=k(!1),ue=O.values,ae=O.keys,se=O.entries,ce=X.lastIndexOf,le=X.reduce,pe=X.reduceRight,fe=X.join,de=X.sort,he=X.slice,ge=X.toString,me=X.toLocaleString,ye=B("iterator"),De=B("toStringTag"),ve=T("typed_constructor"),Ee=T("def_constructor"),be=a.CONSTR,Ce=a.TYPED,Ae=a.VIEW,Fe="Wrong length!",xe=N(1,(function(e,t){return Ne(P(e,e[Ee]),t)})),Se=i((function(){return 1===new J(new Uint16Array([1]).buffer)[0]})),we=!!J&&!!J.prototype.set&&i((function(){new J(1).set({})})),Te=function(e,t){var n=h(e);if(n<0||n%t)throw W("Wrong offset!");return n},Be=function(e){if(b(e)&&Ce in e)return e;throw U(e+" is not a typed array!")},Ne=function(e,t){if(!b(e)||!(ve in e))throw U("It is not a typed array constructor!");return new e(t)},ke=function(e,t){return Pe(P(e,e[Ee]),t)},Pe=function(e,t){for(var n=0,r=t.length,o=Ne(e,r);r>n;)o[n]=t[n++];return o},Oe=function(e,t,n){q(e,t,{get:function(){return this._d[n]}})},_e=function(e){var t,n,r,o,i,u,a=C(e),s=arguments.length,l=s>1?arguments[1]:void 0,p=void 0!==l,f=w(a);if(null!=f&&!A(f)){for(u=f.call(a),r=[],t=0;!(i=u.next()).done;t++)r.push(i.value);a=r}for(p&&s>2&&(l=c(l,arguments[2],2)),t=0,n=g(a.length),o=Ne(this,n);n>t;t++)o[t]=p?l(a[t],t):a[t];return o},Ie=function(){for(var e=0,t=arguments.length,n=Ne(this,t);t>e;)n[e]=arguments[e++];return n},Le=!!J&&i((function(){me.call(new J(1))})),Me=function(){return me.apply(Le?he.call(Be(this)):Be(this),arguments)},je={copyWithin:function(e,t){return j.call(Be(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return te(Be(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return M.apply(Be(this),arguments)},filter:function(e){return ke(this,Z(Be(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return ne(Be(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return re(Be(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Q(Be(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ie(Be(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return oe(Be(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return fe.apply(Be(this),arguments)},lastIndexOf:function(e){return ce.apply(Be(this),arguments)},map:function(e){return xe(Be(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(Be(this),arguments)},reduceRight:function(e){return pe.apply(Be(this),arguments)},reverse:function(){for(var e,t=this,n=Be(t).length,r=Math.floor(n/2),o=0;o<r;)e=t[o],t[o++]=t[--n],t[n]=e;return t},some:function(e){return ee(Be(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return de.call(Be(this),e)},subarray:function(e,t){var n=Be(this),r=n.length,o=y(e,r);return new(P(n,n[Ee]))(n.buffer,n.byteOffset+o*n.BYTES_PER_ELEMENT,g((void 0===t?r:y(t,r))-o))}},Re=function(e,t){return ke(this,he.call(Be(this),e,t))},Ve=function(e){Be(this);var t=Te(arguments[1],1),n=this.length,r=C(e),o=g(r.length),i=0;if(o+t>n)throw W(Fe);for(;i<o;)this[t+i]=r[i++]},qe={entries:function(){return se.call(Be(this))},keys:function(){return ae.call(Be(this))},values:function(){return ue.call(Be(this))}},$e=function(e,t){return b(e)&&e[Ce]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},We=function(e,t){return $e(e,t=D(t,!0))?p(2,e[t]):$(e,t)},Ue=function(e,t,n){return!($e(e,t=D(t,!0))&&b(n)&&v(n,"value"))||v(n,"get")||v(n,"set")||n.configurable||v(n,"writable")&&!n.writable||v(n,"enumerable")&&!n.enumerable?q(e,t,n):(e[t]=n.value,e)};be||(V.f=We,R.f=Ue),u(u.S+u.F*!be,"Object",{getOwnPropertyDescriptor:We,defineProperty:Ue}),i((function(){ge.call({})}))&&(ge=me=function(){return fe.call(this)});var Je=d({},je);d(Je,qe),f(Je,ye,qe.values),d(Je,{slice:Re,set:Ve,constructor:function(){},toString:ge,toLocaleString:Me}),Oe(Je,"buffer","b"),Oe(Je,"byteOffset","o"),Oe(Je,"byteLength","l"),Oe(Je,"length","e"),q(Je,De,{get:function(){return this[Ce]}}),e.exports=function(e,t,n,s){var c=e+((s=!!s)?"Clamped":"")+"Array",p="get"+e,d="set"+e,h=o[c],y=h||{},D=h&&x(h),v=!h||!a.ABV,C={},A=h&&h.prototype,w=function(e,n){q(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[p](n*t+r.o,Se)}(this,n)},set:function(e){return function(e,n,r){var o=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),o.v[d](n*t+o.o,r,Se)}(this,n,e)},enumerable:!0})};v?(h=n((function(e,n,r,o){l(e,h,c,"_d");var i,u,a,s,p=0,d=0;if(b(n)){if(!(n instanceof Y||(s=E(n))==G||s==z))return Ce in n?Pe(h,n):_e.call(h,n);i=n,d=Te(r,t);var y=n.byteLength;if(void 0===o){if(y%t)throw W(Fe);if((u=y-d)<0)throw W(Fe)}else if((u=g(o)*t)+d>y)throw W(Fe);a=u/t}else a=m(n),i=new Y(u=a*t);for(f(e,"_d",{b:i,o:d,l:u,e:a,v:new K(i)});p<a;)w(e,p++)})),A=h.prototype=F(Je),f(A,"constructor",h)):i((function(){h(1)}))&&i((function(){new h(-1)}))&&I((function(e){new h,new h(null),new h(1.5),new h(e)}),!0)||(h=n((function(e,n,r,o){var i;return l(e,h,c),b(n)?n instanceof Y||(i=E(n))==G||i==z?void 0!==o?new y(n,Te(r,t),o):void 0!==r?new y(n,Te(r,t)):new y(n):Ce in n?Pe(h,n):_e.call(h,n):new y(m(n))})),Q(D!==Function.prototype?S(y).concat(S(D)):S(y),(function(e){e in h||f(h,e,y[e])})),h.prototype=A,r||(A.constructor=h));var T=A[ye],B=!!T&&("values"==T.name||null==T.name),N=qe.values;f(h,ve,!0),f(A,Ce,c),f(A,Ae,!0),f(A,Ee,h),(s?new h(1)[De]==c:De in A)||q(A,De,{get:function(){return c}}),C[c]=h,u(u.G+u.W+u.F*(h!=y),C),u(u.S,c,{BYTES_PER_ELEMENT:t}),u(u.S+u.F*i((function(){y.of.call(h,1)})),c,{from:_e,of:Ie}),H in A||f(A,H,t),u(u.P,c,je),L(c),u(u.P+u.F*we,c,{set:Ve}),u(u.P+u.F*!B,c,qe),r||A.toString==ge||(A.toString=ge),u(u.P+u.F*i((function(){new h(1).slice()})),c,{slice:Re}),u(u.P+u.F*(i((function(){return[1,2].toLocaleString()!=new h([1,2]).toLocaleString()}))||!i((function(){A.toLocaleString.call([1,2])}))),c,{toLocaleString:Me}),_[c]=B?T:N,r||B||f(A,ye,N)}}else e.exports=function(){}},1125:function(e,t,n){"use strict";var r=n(3816),o=n(7057),i=n(4461),u=n(9383),a=n(7728),s=n(4408),c=n(4253),l=n(3328),p=n(1467),f=n(875),d=n(4843),h=n(616).f,g=n(9275).f,m=n(6852),y=n(2943),D="ArrayBuffer",v="DataView",E="Wrong index!",b=r.ArrayBuffer,C=r.DataView,A=r.Math,F=r.RangeError,x=r.Infinity,S=b,w=A.abs,T=A.pow,B=A.floor,N=A.log,k=A.LN2,P="buffer",O="byteLength",_="byteOffset",I=o?"_b":P,L=o?"_l":O,M=o?"_o":_;function j(e,t,n){var r,o,i,u=new Array(n),a=8*n-t-1,s=(1<<a)-1,c=s>>1,l=23===t?T(2,-24)-T(2,-77):0,p=0,f=e<0||0===e&&1/e<0?1:0;for((e=w(e))!=e||e===x?(o=e!=e?1:0,r=s):(r=B(N(e)/k),e*(i=T(2,-r))<1&&(r--,i*=2),(e+=r+c>=1?l/i:l*T(2,1-c))*i>=2&&(r++,i/=2),r+c>=s?(o=0,r=s):r+c>=1?(o=(e*i-1)*T(2,t),r+=c):(o=e*T(2,c-1)*T(2,t),r=0));t>=8;u[p++]=255&o,o/=256,t-=8);for(r=r<<t|o,a+=t;a>0;u[p++]=255&r,r/=256,a-=8);return u[--p]|=128*f,u}function R(e,t,n){var r,o=8*n-t-1,i=(1<<o)-1,u=i>>1,a=o-7,s=n-1,c=e[s--],l=127&c;for(c>>=7;a>0;l=256*l+e[s],s--,a-=8);for(r=l&(1<<-a)-1,l>>=-a,a+=t;a>0;r=256*r+e[s],s--,a-=8);if(0===l)l=1-u;else{if(l===i)return r?NaN:c?-x:x;r+=T(2,t),l-=u}return(c?-1:1)*r*T(2,l-t)}function V(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function q(e){return[255&e]}function $(e){return[255&e,e>>8&255]}function W(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function U(e){return j(e,52,8)}function J(e){return j(e,23,4)}function G(e,t,n){g(e.prototype,t,{get:function(){return this[n]}})}function z(e,t,n,r){var o=d(+n);if(o+t>e[L])throw F(E);var i=e[I]._b,u=o+e[M],a=i.slice(u,u+t);return r?a:a.reverse()}function H(e,t,n,r,o,i){var u=d(+n);if(u+t>e[L])throw F(E);for(var a=e[I]._b,s=u+e[M],c=r(+o),l=0;l<t;l++)a[s+l]=c[i?l:t-l-1]}if(u.ABV){if(!c((function(){b(1)}))||!c((function(){new b(-1)}))||c((function(){return new b,new b(1.5),new b(NaN),b.name!=D}))){for(var X,Y=(b=function(e){return l(this,b),new S(d(e))}).prototype=S.prototype,K=h(S),Q=0;K.length>Q;)(X=K[Q++])in b||a(b,X,S[X]);i||(Y.constructor=b)}var Z=new C(new b(2)),ee=C.prototype.setInt8;Z.setInt8(0,2147483648),Z.setInt8(1,2147483649),!Z.getInt8(0)&&Z.getInt8(1)||s(C.prototype,{setInt8:function(e,t){ee.call(this,e,t<<24>>24)},setUint8:function(e,t){ee.call(this,e,t<<24>>24)}},!0)}else b=function(e){l(this,b,D);var t=d(e);this._b=m.call(new Array(t),0),this[L]=t},C=function(e,t,n){l(this,C,v),l(e,b,v);var r=e[L],o=p(t);if(o<0||o>r)throw F("Wrong offset!");if(o+(n=void 0===n?r-o:f(n))>r)throw F("Wrong length!");this[I]=e,this[M]=o,this[L]=n},o&&(G(b,O,"_l"),G(C,P,"_b"),G(C,O,"_l"),G(C,_,"_o")),s(C.prototype,{getInt8:function(e){return z(this,1,e)[0]<<24>>24},getUint8:function(e){return z(this,1,e)[0]},getInt16:function(e){var t=z(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=z(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return V(z(this,4,e,arguments[1]))},getUint32:function(e){return V(z(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return R(z(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return R(z(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){H(this,1,e,q,t)},setUint8:function(e,t){H(this,1,e,q,t)},setInt16:function(e,t){H(this,2,e,$,t,arguments[2])},setUint16:function(e,t){H(this,2,e,$,t,arguments[2])},setInt32:function(e,t){H(this,4,e,W,t,arguments[2])},setUint32:function(e,t){H(this,4,e,W,t,arguments[2])},setFloat32:function(e,t){H(this,4,e,J,t,arguments[2])},setFloat64:function(e,t){H(this,8,e,U,t,arguments[2])}});y(b,D),y(C,v),a(C.prototype,u.VIEW,!0),t.ArrayBuffer=b,t.DataView=C},9383:function(e,t,n){for(var r,o=n(3816),i=n(7728),u=n(3953),a=u("typed_array"),s=u("view"),c=!(!o.ArrayBuffer||!o.DataView),l=c,p=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");p<9;)(r=o[f[p++]])?(i(r.prototype,a,!0),i(r.prototype,s,!0)):l=!1;e.exports={ABV:c,CONSTR:l,TYPED:a,VIEW:s}},3953:function(e){var t=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+n).toString(36))}},575:function(e,t,n){var r=n(3816).navigator;e.exports=r&&r.userAgent||""},1616:function(e,t,n){var r=n(5286);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},6074:function(e,t,n){var r=n(3816),o=n(5645),i=n(4461),u=n(8787),a=n(9275).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:u.f(e)})}},8787:function(e,t,n){t.f=n(6314)},6314:function(e,t,n){var r=n(3825)("wks"),o=n(3953),i=n(3816).Symbol,u="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=u&&i[e]||(u?i:o)("Symbol."+e))}).store=r},9002:function(e,t,n){var r=n(1488),o=n(6314)("iterator"),i=n(2803);e.exports=n(5645).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},2e3:function(e,t,n){var r=n(2985);r(r.P,"Array",{copyWithin:n(5216)}),n(7722)("copyWithin")},5745:function(e,t,n){"use strict";var r=n(2985),o=n(50)(4);r(r.P+r.F*!n(7717)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},8977:function(e,t,n){var r=n(2985);r(r.P,"Array",{fill:n(6852)}),n(7722)("fill")},8837:function(e,t,n){"use strict";var r=n(2985),o=n(50)(2);r(r.P+r.F*!n(7717)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},4899:function(e,t,n){"use strict";var r=n(2985),o=n(50)(6),i="findIndex",u=!0;i in[]&&Array(1)[i]((function(){u=!1})),r(r.P+r.F*u,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)(i)},2310:function(e,t,n){"use strict";var r=n(2985),o=n(50)(5),i="find",u=!0;i in[]&&Array(1).find((function(){u=!1})),r(r.P+r.F*u,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)(i)},4336:function(e,t,n){"use strict";var r=n(2985),o=n(50)(0),i=n(7717)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},522:function(e,t,n){"use strict";var r=n(741),o=n(2985),i=n(508),u=n(8851),a=n(6555),s=n(875),c=n(2811),l=n(9002);o(o.S+o.F*!n(7462)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,o,p,f=i(e),d="function"==typeof this?this:Array,h=arguments.length,g=h>1?arguments[1]:void 0,m=void 0!==g,y=0,D=l(f);if(m&&(g=r(g,h>2?arguments[2]:void 0,2)),null==D||d==Array&&a(D))for(n=new d(t=s(f.length));t>y;y++)c(n,y,m?g(f[y],y):f[y]);else for(p=D.call(f),n=new d;!(o=p.next()).done;y++)c(n,y,m?u(p,g,[o.value,y],!0):o.value);return n.length=y,n}})},3369:function(e,t,n){"use strict";var r=n(2985),o=n(9315)(!1),i=[].indexOf,u=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(u||!n(7717)(i)),"Array",{indexOf:function(e){return u?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},774:function(e,t,n){var r=n(2985);r(r.S,"Array",{isArray:n(4302)})},6997:function(e,t,n){"use strict";var r=n(7722),o=n(5436),i=n(2803),u=n(2110);e.exports=n(2923)(Array,"Array",(function(e,t){this._t=u(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},7842:function(e,t,n){"use strict";var r=n(2985),o=n(2110),i=[].join;r(r.P+r.F*(n(9797)!=Object||!n(7717)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},9564:function(e,t,n){"use strict";var r=n(2985),o=n(2110),i=n(1467),u=n(875),a=[].lastIndexOf,s=!!a&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(s||!n(7717)(a)),"Array",{lastIndexOf:function(e){if(s)return a.apply(this,arguments)||0;var t=o(this),n=u(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},1802:function(e,t,n){"use strict";var r=n(2985),o=n(50)(1);r(r.P+r.F*!n(7717)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},8295:function(e,t,n){"use strict";var r=n(2985),o=n(2811);r(r.S+r.F*n(4253)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},3750:function(e,t,n){"use strict";var r=n(2985),o=n(7628);r(r.P+r.F*!n(7717)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},3057:function(e,t,n){"use strict";var r=n(2985),o=n(7628);r(r.P+r.F*!n(7717)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},110:function(e,t,n){"use strict";var r=n(2985),o=n(639),i=n(2032),u=n(2337),a=n(875),s=[].slice;r(r.P+r.F*n(4253)((function(){o&&s.call(o)})),"Array",{slice:function(e,t){var n=a(this.length),r=i(this);if(t=void 0===t?n:t,"Array"==r)return s.call(this,e,t);for(var o=u(e,n),c=u(t,n),l=a(c-o),p=new Array(l),f=0;f<l;f++)p[f]="String"==r?this.charAt(o+f):this[o+f];return p}})},6773:function(e,t,n){"use strict";var r=n(2985),o=n(50)(3);r(r.P+r.F*!n(7717)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},75:function(e,t,n){"use strict";var r=n(2985),o=n(4963),i=n(508),u=n(4253),a=[].sort,s=[1,2,3];r(r.P+r.F*(u((function(){s.sort(void 0)}))||!u((function(){s.sort(null)}))||!n(7717)(a)),"Array",{sort:function(e){return void 0===e?a.call(i(this)):a.call(i(this),o(e))}})},1842:function(e,t,n){n(2974)("Array")},1822:function(e,t,n){var r=n(2985);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},1031:function(e,t,n){var r=n(2985),o=n(3537);r(r.P+r.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},9977:function(e,t,n){"use strict";var r=n(2985),o=n(508),i=n(1689);r(r.P+r.F*n(4253)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=o(this),n=i(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},1560:function(e,t,n){var r=n(6314)("toPrimitive"),o=Date.prototype;r in o||n(7728)(o,r,n(870))},6331:function(e,t,n){var r=Date.prototype,o="Invalid Date",i=r.toString,u=r.getTime;new Date(NaN)+""!=o&&n(7234)(r,"toString",(function(){var e=u.call(this);return e==e?i.call(this):o}))},9730:function(e,t,n){var r=n(2985);r(r.P,"Function",{bind:n(4398)})},8377:function(e,t,n){"use strict";var r=n(5286),o=n(468),i=n(6314)("hasInstance"),u=Function.prototype;i in u||n(9275).f(u,i,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},6059:function(e,t,n){var r=n(9275).f,o=Function.prototype,i=/^\s*function ([^ (]*)/,u="name";u in o||n(7057)&&r(o,u,{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},8416:function(e,t,n){"use strict";var r=n(9824),o=n(1616),i="Map";e.exports=n(5795)(i,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(o(this,i),e);return t&&t.v},set:function(e,t){return r.def(o(this,i),0===e?0:e,t)}},r,!0)},6503:function(e,t,n){var r=n(2985),o=n(6206),i=Math.sqrt,u=Math.acosh;r(r.S+r.F*!(u&&710==Math.floor(u(Number.MAX_VALUE))&&u(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},6786:function(e,t,n){var r=n(2985),o=Math.asinh;r(r.S+r.F*!(o&&1/o(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},932:function(e,t,n){var r=n(2985),o=Math.atanh;r(r.S+r.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},7526:function(e,t,n){var r=n(2985),o=n(1801);r(r.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},1591:function(e,t,n){var r=n(2985);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},9073:function(e,t,n){var r=n(2985),o=Math.exp;r(r.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},347:function(e,t,n){var r=n(2985),o=n(3086);r(r.S+r.F*(o!=Math.expm1),"Math",{expm1:o})},579:function(e,t,n){var r=n(2985);r(r.S,"Math",{fround:n(4934)})},4669:function(e,t,n){var r=n(2985),o=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,i=0,u=0,a=arguments.length,s=0;u<a;)s<(n=o(arguments[u++]))?(i=i*(r=s/n)*r+1,s=n):i+=n>0?(r=n/s)*r:n;return s===1/0?1/0:s*Math.sqrt(i)}})},7710:function(e,t,n){var r=n(2985),o=Math.imul;r(r.S+r.F*n(4253)((function(){return-5!=o(4294967295,5)||2!=o.length})),"Math",{imul:function(e,t){var n=65535,r=+e,o=+t,i=n&r,u=n&o;return 0|i*u+((n&r>>>16)*u+i*(n&o>>>16)<<16>>>0)}})},5789:function(e,t,n){var r=n(2985);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},3514:function(e,t,n){var r=n(2985);r(r.S,"Math",{log1p:n(6206)})},9978:function(e,t,n){var r=n(2985);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},8472:function(e,t,n){var r=n(2985);r(r.S,"Math",{sign:n(1801)})},6946:function(e,t,n){var r=n(2985),o=n(3086),i=Math.exp;r(r.S+r.F*n(4253)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},5068:function(e,t,n){var r=n(2985),o=n(3086),i=Math.exp;r(r.S,"Math",{tanh:function(e){var t=o(e=+e),n=o(-e);return t==1/0?1:n==1/0?-1:(t-n)/(i(e)+i(-e))}})},413:function(e,t,n){var r=n(2985);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},1246:function(e,t,n){"use strict";var r=n(3816),o=n(9181),i=n(2032),u=n(266),a=n(1689),s=n(4253),c=n(616).f,l=n(8693).f,p=n(9275).f,f=n(9599).trim,d="Number",h=r.Number,g=h,m=h.prototype,y=i(n(2503)(m))==d,D="trim"in String.prototype,v=function(e){var t=a(e,!1);if("string"==typeof t&&t.length>2){var n,r,o,i=(t=D?t.trim():f(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+t}for(var u,s=t.slice(2),c=0,l=s.length;c<l;c++)if((u=s.charCodeAt(c))<48||u>o)return NaN;return parseInt(s,r)}}return+t};if(!h(" 0o1")||!h("0b1")||h("+0x1")){h=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof h&&(y?s((function(){m.valueOf.call(n)})):i(n)!=d)?u(new g(v(t)),n,h):v(t)};for(var E,b=n(7057)?c(g):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),C=0;b.length>C;C++)o(g,E=b[C])&&!o(h,E)&&p(h,E,l(g,E));h.prototype=m,m.constructor=h,n(7234)(r,d,h)}},5972:function(e,t,n){var r=n(2985);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},3403:function(e,t,n){var r=n(2985),o=n(3816).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},2516:function(e,t,n){var r=n(2985);r(r.S,"Number",{isInteger:n(8367)})},9371:function(e,t,n){var r=n(2985);r(r.S,"Number",{isNaN:function(e){return e!=e}})},6479:function(e,t,n){var r=n(2985),o=n(8367),i=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},1736:function(e,t,n){var r=n(2985);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},1889:function(e,t,n){var r=n(2985);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},5177:function(e,t,n){var r=n(2985),o=n(7743);r(r.S+r.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},6943:function(e,t,n){var r=n(2985),o=n(5960);r(r.S+r.F*(Number.parseInt!=o),"Number",{parseInt:o})},726:function(e,t,n){"use strict";var r=n(2985),o=n(1467),i=n(3365),u=n(8595),a=1..toFixed,s=Math.floor,c=[0,0,0,0,0,0],l="Number.toFixed: incorrect invocation!",p="0",f=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*c[n],c[n]=r%1e7,r=s(r/1e7)},d=function(e){for(var t=6,n=0;--t>=0;)n+=c[t],c[t]=s(n/e),n=n%e*1e7},h=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var n=String(c[e]);t=""===t?n:t+u.call(p,7-n.length)+n}return t},g=function(e,t,n){return 0===t?n:t%2==1?g(e,t-1,n*e):g(e*e,t/2,n)};r(r.P+r.F*(!!a&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(4253)((function(){a.call({})}))),"Number",{toFixed:function(e){var t,n,r,a,s=i(this,l),c=o(e),m="",y=p;if(c<0||c>20)throw RangeError(l);if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(m="-",s=-s),s>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(s*g(2,69,1))-69)<0?s*g(2,-t,1):s/g(2,t,1),n*=4503599627370496,(t=52-t)>0){for(f(0,n),r=c;r>=7;)f(1e7,0),r-=7;for(f(g(10,r,1),0),r=t-1;r>=23;)d(1<<23),r-=23;d(1<<r),f(1,1),d(2),y=h()}else f(0,n),f(1<<-t,0),y=h()+u.call(p,c);return c>0?m+((a=y.length)<=c?"0."+u.call(p,c-a)+y:y.slice(0,a-c)+"."+y.slice(a-c)):m+y}})},1901:function(e,t,n){"use strict";var r=n(2985),o=n(4253),i=n(3365),u=1..toPrecision;r(r.P+r.F*(o((function(){return"1"!==u.call(1,void 0)}))||!o((function(){u.call({})}))),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?u.call(t):u.call(t,e)}})},5115:function(e,t,n){var r=n(2985);r(r.S+r.F,"Object",{assign:n(5345)})},8132:function(e,t,n){var r=n(2985);r(r.S,"Object",{create:n(2503)})},7470:function(e,t,n){var r=n(2985);r(r.S+r.F*!n(7057),"Object",{defineProperties:n(5588)})},8388:function(e,t,n){var r=n(2985);r(r.S+r.F*!n(7057),"Object",{defineProperty:n(9275).f})},9375:function(e,t,n){var r=n(5286),o=n(4728).onFreeze;n(3160)("freeze",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},4882:function(e,t,n){var r=n(2110),o=n(8693).f;n(3160)("getOwnPropertyDescriptor",(function(){return function(e,t){return o(r(e),t)}}))},9622:function(e,t,n){n(3160)("getOwnPropertyNames",(function(){return n(9327).f}))},1520:function(e,t,n){var r=n(508),o=n(468);n(3160)("getPrototypeOf",(function(){return function(e){return o(r(e))}}))},9892:function(e,t,n){var r=n(5286);n(3160)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},4157:function(e,t,n){var r=n(5286);n(3160)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},5095:function(e,t,n){var r=n(5286);n(3160)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},9176:function(e,t,n){var r=n(2985);r(r.S,"Object",{is:n(7195)})},7476:function(e,t,n){var r=n(508),o=n(7184);n(3160)("keys",(function(){return function(e){return o(r(e))}}))},4672:function(e,t,n){var r=n(5286),o=n(4728).onFreeze;n(3160)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},3533:function(e,t,n){var r=n(5286),o=n(4728).onFreeze;n(3160)("seal",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},8838:function(e,t,n){var r=n(2985);r(r.S,"Object",{setPrototypeOf:n(7375).set})},6253:function(e,t,n){"use strict";var r=n(1488),o={};o[n(6314)("toStringTag")]="z",o+""!="[object z]"&&n(7234)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},4299:function(e,t,n){var r=n(2985),o=n(7743);r(r.G+r.F*(parseFloat!=o),{parseFloat:o})},1084:function(e,t,n){var r=n(2985),o=n(5960);r(r.G+r.F*(parseInt!=o),{parseInt:o})},851:function(e,t,n){"use strict";var r,o,i,u,a=n(4461),s=n(3816),c=n(741),l=n(1488),p=n(2985),f=n(5286),d=n(4963),h=n(3328),g=n(3531),m=n(8364),y=n(4193).set,D=n(4351)(),v=n(3499),E=n(188),b=n(575),C=n(94),A="Promise",F=s.TypeError,x=s.process,S=x&&x.versions,w=S&&S.v8||"",T=s.Promise,B="process"==l(x),N=function(){},k=o=v.f,P=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(6314)("species")]=function(e){e(N,N)};return(B||"function"==typeof PromiseRejectionEvent)&&e.then(N)instanceof t&&0!==w.indexOf("6.6")&&-1===b.indexOf("Chrome/66")}catch(e){}}(),O=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},_=function(e,t){if(!e._n){e._n=!0;var n=e._c;D((function(){for(var r=e._v,o=1==e._s,i=0,u=function(t){var n,i,u,a=o?t.ok:t.fail,s=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&M(e),e._h=1),!0===a?n=r:(l&&l.enter(),n=a(r),l&&(l.exit(),u=!0)),n===t.promise?c(F("Promise-chain cycle")):(i=O(n))?i.call(n,s,c):s(n)):c(r)}catch(e){l&&!u&&l.exit(),c(e)}};n.length>i;)u(n[i++]);e._c=[],e._n=!1,t&&!e._h&&I(e)}))}},I=function(e){y.call(s,(function(){var t,n,r,o=e._v,i=L(e);if(i&&(t=E((function(){B?x.emit("unhandledRejection",o,e):(n=s.onunhandledrejection)?n({promise:e,reason:o}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",o)})),e._h=B||L(e)?2:1),e._a=void 0,i&&t.e)throw t.v}))},L=function(e){return 1!==e._h&&0===(e._a||e._c).length},M=function(e){y.call(s,(function(){var t;B?x.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})}))},j=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),_(t,!0))},R=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw F("Promise can't be resolved itself");(t=O(e))?D((function(){var r={_w:n,_d:!1};try{t.call(e,c(R,r,1),c(j,r,1))}catch(e){j.call(r,e)}})):(n._v=e,n._s=1,_(n,!1))}catch(e){j.call({_w:n,_d:!1},e)}}};P||(T=function(e){h(this,T,A,"_h"),d(e),r.call(this);try{e(c(R,this,1),c(j,this,1))}catch(e){j.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(4408)(T.prototype,{then:function(e,t){var n=k(m(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=B?x.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&_(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(R,e,1),this.reject=c(j,e,1)},v.f=k=function(e){return e===T||e===u?new i(e):o(e)}),p(p.G+p.W+p.F*!P,{Promise:T}),n(2943)(T,A),n(2974)(A),u=n(5645).Promise,p(p.S+p.F*!P,A,{reject:function(e){var t=k(this);return(0,t.reject)(e),t.promise}}),p(p.S+p.F*(a||!P),A,{resolve:function(e){return C(a&&this===u?T:this,e)}}),p(p.S+p.F*!(P&&n(7462)((function(e){T.all(e).catch(N)}))),A,{all:function(e){var t=this,n=k(t),r=n.resolve,o=n.reject,i=E((function(){var n=[],i=0,u=1;g(e,!1,(function(e){var a=i++,s=!1;n.push(void 0),u++,t.resolve(e).then((function(e){s||(s=!0,n[a]=e,--u||r(n))}),o)})),--u||r(n)}));return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=k(t),r=n.reject,o=E((function(){g(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return o.e&&r(o.v),n.promise}})},1572:function(e,t,n){var r=n(2985),o=n(4963),i=n(7007),u=(n(3816).Reflect||{}).apply,a=Function.apply;r(r.S+r.F*!n(4253)((function(){u((function(){}))})),"Reflect",{apply:function(e,t,n){var r=o(e),s=i(n);return u?u(r,t,s):a.call(r,t,s)}})},2139:function(e,t,n){var r=n(2985),o=n(2503),i=n(4963),u=n(7007),a=n(5286),s=n(4253),c=n(4398),l=(n(3816).Reflect||{}).construct,p=s((function(){function e(){}return!(l((function(){}),[],e)instanceof e)})),f=!s((function(){l((function(){}))}));r(r.S+r.F*(p||f),"Reflect",{construct:function(e,t){i(e),u(t);var n=arguments.length<3?e:i(arguments[2]);if(f&&!p)return l(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var s=n.prototype,d=o(a(s)?s:Object.prototype),h=Function.apply.call(e,d,t);return a(h)?h:d}})},685:function(e,t,n){var r=n(9275),o=n(2985),i=n(7007),u=n(1689);o(o.S+o.F*n(4253)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){i(e),t=u(t,!0),i(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},5535:function(e,t,n){var r=n(2985),o=n(8693).f,i=n(7007);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=o(i(e),t);return!(n&&!n.configurable)&&delete e[t]}})},7347:function(e,t,n){"use strict";var r=n(2985),o=n(7007),i=function(e){this._t=o(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(9988)(i,"Object",(function(){var e,t=this,n=t._k;do{if(t._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[t._i++])in t._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new i(e)}})},6633:function(e,t,n){var r=n(8693),o=n(2985),i=n(7007);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(i(e),t)}})},8989:function(e,t,n){var r=n(2985),o=n(468),i=n(7007);r(r.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},3049:function(e,t,n){var r=n(8693),o=n(468),i=n(9181),u=n(2985),a=n(5286),s=n(7007);u(u.S,"Reflect",{get:function e(t,n){var u,c,l=arguments.length<3?t:arguments[2];return s(t)===l?t[n]:(u=r.f(t,n))?i(u,"value")?u.value:void 0!==u.get?u.get.call(l):void 0:a(c=o(t))?e(c,n,l):void 0}})},8270:function(e,t,n){var r=n(2985);r(r.S,"Reflect",{has:function(e,t){return t in e}})},4510:function(e,t,n){var r=n(2985),o=n(7007),i=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},3984:function(e,t,n){var r=n(2985);r(r.S,"Reflect",{ownKeys:n(7643)})},5769:function(e,t,n){var r=n(2985),o=n(7007),i=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},6014:function(e,t,n){var r=n(2985),o=n(7375);o&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},55:function(e,t,n){var r=n(9275),o=n(8693),i=n(468),u=n(9181),a=n(2985),s=n(681),c=n(7007),l=n(5286);a(a.S,"Reflect",{set:function e(t,n,a){var p,f,d=arguments.length<4?t:arguments[3],h=o.f(c(t),n);if(!h){if(l(f=i(t)))return e(f,n,a,d);h=s(0)}if(u(h,"value")){if(!1===h.writable||!l(d))return!1;if(p=o.f(d,n)){if(p.get||p.set||!1===p.writable)return!1;p.value=a,r.f(d,n,p)}else r.f(d,n,s(0,a));return!0}return void 0!==h.set&&(h.set.call(d,a),!0)}})},3946:function(e,t,n){var r=n(3816),o=n(266),i=n(9275).f,u=n(616).f,a=n(5364),s=n(3218),c=r.RegExp,l=c,p=c.prototype,f=/a/g,d=/a/g,h=new c(f)!==f;if(n(7057)&&(!h||n(4253)((function(){return d[n(6314)("match")]=!1,c(f)!=f||c(d)==d||"/a/i"!=c(f,"i")})))){c=function(e,t){var n=this instanceof c,r=a(e),i=void 0===t;return!n&&r&&e.constructor===c&&i?e:o(h?new l(r&&!i?e.source:e,t):l((r=e instanceof c)?e.source:e,r&&i?s.call(e):t),n?this:p,c)};for(var g=function(e){e in c||i(c,e,{configurable:!0,get:function(){return l[e]},set:function(t){l[e]=t}})},m=u(l),y=0;m.length>y;)g(m[y++]);p.constructor=c,c.prototype=p,n(7234)(r,"RegExp",c)}n(2974)("RegExp")},8269:function(e,t,n){"use strict";var r=n(1165);n(2985)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},6774:function(e,t,n){n(7057)&&"g"!=/./g.flags&&n(9275).f(RegExp.prototype,"flags",{configurable:!0,get:n(3218)})},1466:function(e,t,n){"use strict";var r=n(7007),o=n(875),i=n(6793),u=n(7787);n(8082)("match",1,(function(e,t,n,a){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=a(n,e,this);if(t.done)return t.value;var s=r(e),c=String(this);if(!s.global)return u(s,c);var l=s.unicode;s.lastIndex=0;for(var p,f=[],d=0;null!==(p=u(s,c));){var h=String(p[0]);f[d]=h,""===h&&(s.lastIndex=i(c,o(s.lastIndex),l)),d++}return 0===d?null:f}]}))},9357:function(e,t,n){"use strict";var r=n(7007),o=n(508),i=n(875),u=n(1467),a=n(6793),s=n(7787),c=Math.max,l=Math.min,p=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g;n(8082)("replace",2,(function(e,t,n,h){return[function(r,o){var i=e(this),u=null==r?void 0:r[t];return void 0!==u?u.call(r,i,o):n.call(String(i),r,o)},function(e,t){var o=h(n,e,this,t);if(o.done)return o.value;var p=r(e),f=String(this),d="function"==typeof t;d||(t=String(t));var m=p.global;if(m){var y=p.unicode;p.lastIndex=0}for(var D=[];;){var v=s(p,f);if(null===v)break;if(D.push(v),!m)break;""===String(v[0])&&(p.lastIndex=a(f,i(p.lastIndex),y))}for(var E,b="",C=0,A=0;A<D.length;A++){v=D[A];for(var F=String(v[0]),x=c(l(u(v.index),f.length),0),S=[],w=1;w<v.length;w++)S.push(void 0===(E=v[w])?E:String(E));var T=v.groups;if(d){var B=[F].concat(S,x,f);void 0!==T&&B.push(T);var N=String(t.apply(void 0,B))}else N=g(F,f,x,S,T,t);x>=C&&(b+=f.slice(C,x)+N,C=x+F.length)}return b+f.slice(C)}];function g(e,t,r,i,u,a){var s=r+e.length,c=i.length,l=d;return void 0!==u&&(u=o(u),l=f),n.call(a,l,(function(n,o){var a;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":a=u[o.slice(1,-1)];break;default:var l=+o;if(0===l)return n;if(l>c){var f=p(l/10);return 0===f?n:f<=c?void 0===i[f-1]?o.charAt(1):i[f-1]+o.charAt(1):n}a=i[l-1]}return void 0===a?"":a}))}}))},6142:function(e,t,n){"use strict";var r=n(7007),o=n(7195),i=n(7787);n(8082)("search",1,(function(e,t,n,u){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=u(n,e,this);if(t.done)return t.value;var a=r(e),s=String(this),c=a.lastIndex;o(c,0)||(a.lastIndex=0);var l=i(a,s);return o(a.lastIndex,c)||(a.lastIndex=c),null===l?-1:l.index}]}))},1876:function(e,t,n){"use strict";var r=n(5364),o=n(7007),i=n(8364),u=n(6793),a=n(875),s=n(7787),c=n(1165),l=n(4253),p=Math.min,f=[].push,d=4294967295,h=!l((function(){RegExp(d,"y")}));n(8082)("split",2,(function(e,t,n,l){var g;return g="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,t){var o=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(o,e,t);for(var i,u,a,s=[],l=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),p=0,h=void 0===t?d:t>>>0,g=new RegExp(e.source,l+"g");(i=c.call(g,o))&&!((u=g.lastIndex)>p&&(s.push(o.slice(p,i.index)),i.length>1&&i.index<o.length&&f.apply(s,i.slice(1)),a=i[0].length,p=u,s.length>=h));)g.lastIndex===i.index&&g.lastIndex++;return p===o.length?!a&&g.test("")||s.push(""):s.push(o.slice(p)),s.length>h?s.slice(0,h):s}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var o=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):g.call(String(o),n,r)},function(e,t){var r=l(g,e,this,t,g!==n);if(r.done)return r.value;var c=o(e),f=String(this),m=i(c,RegExp),y=c.unicode,D=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(h?"y":"g"),v=new m(h?c:"^(?:"+c.source+")",D),E=void 0===t?d:t>>>0;if(0===E)return[];if(0===f.length)return null===s(v,f)?[f]:[];for(var b=0,C=0,A=[];C<f.length;){v.lastIndex=h?C:0;var F,x=s(v,h?f:f.slice(C));if(null===x||(F=p(a(v.lastIndex+(h?0:C)),f.length))===b)C=u(f,C,y);else{if(A.push(f.slice(b,C)),A.length===E)return A;for(var S=1;S<=x.length-1;S++)if(A.push(x[S]),A.length===E)return A;C=b=F}}return A.push(f.slice(b)),A}]}))},6108:function(e,t,n){"use strict";n(6774);var r=n(7007),o=n(3218),i=n(7057),u="toString",a=/./.toString,s=function(e){n(7234)(RegExp.prototype,u,e,!0)};n(4253)((function(){return"/a/b"!=a.call({source:"a",flags:"b"})}))?s((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)})):a.name!=u&&s((function(){return a.call(this)}))},8184:function(e,t,n){"use strict";var r=n(9824),o=n(1616);e.exports=n(5795)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"Set"),e=0===e?0:e,e)}},r)},856:function(e,t,n){"use strict";n(9395)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},703:function(e,t,n){"use strict";n(9395)("big",(function(e){return function(){return e(this,"big","","")}}))},1539:function(e,t,n){"use strict";n(9395)("blink",(function(e){return function(){return e(this,"blink","","")}}))},5292:function(e,t,n){"use strict";n(9395)("bold",(function(e){return function(){return e(this,"b","","")}}))},9539:function(e,t,n){"use strict";var r=n(2985),o=n(4496)(!1);r(r.P,"String",{codePointAt:function(e){return o(this,e)}})},6620:function(e,t,n){"use strict";var r=n(2985),o=n(875),i=n(2094),u="endsWith",a="".endsWith;r(r.P+r.F*n(8852)(u),"String",{endsWith:function(e){var t=i(this,e,u),n=arguments.length>1?arguments[1]:void 0,r=o(t.length),s=void 0===n?r:Math.min(o(n),r),c=String(e);return a?a.call(t,c,s):t.slice(s-c.length,s)===c}})},6629:function(e,t,n){"use strict";n(9395)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},3694:function(e,t,n){"use strict";n(9395)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},7648:function(e,t,n){"use strict";n(9395)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},191:function(e,t,n){var r=n(2985),o=n(2337),i=String.fromCharCode,u=String.fromCodePoint;r(r.S+r.F*(!!u&&1!=u.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,u=0;r>u;){if(t=+arguments[u++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},2850:function(e,t,n){"use strict";var r=n(2985),o=n(2094),i="includes";r(r.P+r.F*n(8852)(i),"String",{includes:function(e){return!!~o(this,e,i).indexOf(e,arguments.length>1?arguments[1]:void 0)}})},7795:function(e,t,n){"use strict";n(9395)("italics",(function(e){return function(){return e(this,"i","","")}}))},9115:function(e,t,n){"use strict";var r=n(4496)(!0);n(2923)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},4531:function(e,t,n){"use strict";n(9395)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},8306:function(e,t,n){var r=n(2985),o=n(2110),i=n(875);r(r.S,"String",{raw:function(e){for(var t=o(e.raw),n=i(t.length),r=arguments.length,u=[],a=0;n>a;)u.push(String(t[a++])),a<r&&u.push(String(arguments[a]));return u.join("")}})},823:function(e,t,n){var r=n(2985);r(r.P,"String",{repeat:n(8595)})},3605:function(e,t,n){"use strict";n(9395)("small",(function(e){return function(){return e(this,"small","","")}}))},7732:function(e,t,n){"use strict";var r=n(2985),o=n(875),i=n(2094),u="startsWith",a="".startsWith;r(r.P+r.F*n(8852)(u),"String",{startsWith:function(e){var t=i(this,e,u),n=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return a?a.call(t,r,n):t.slice(n,n+r.length)===r}})},6780:function(e,t,n){"use strict";n(9395)("strike",(function(e){return function(){return e(this,"strike","","")}}))},9937:function(e,t,n){"use strict";n(9395)("sub",(function(e){return function(){return e(this,"sub","","")}}))},511:function(e,t,n){"use strict";n(9395)("sup",(function(e){return function(){return e(this,"sup","","")}}))},4564:function(e,t,n){"use strict";n(9599)("trim",(function(e){return function(){return e(this,3)}}))},5767:function(e,t,n){"use strict";var r=n(3816),o=n(9181),i=n(7057),u=n(2985),a=n(7234),s=n(4728).KEY,c=n(4253),l=n(3825),p=n(2943),f=n(3953),d=n(6314),h=n(8787),g=n(6074),m=n(5541),y=n(4302),D=n(7007),v=n(5286),E=n(508),b=n(2110),C=n(1689),A=n(681),F=n(2503),x=n(9327),S=n(8693),w=n(4548),T=n(9275),B=n(7184),N=S.f,k=T.f,P=x.f,O=r.Symbol,_=r.JSON,I=_&&_.stringify,L=d("_hidden"),M=d("toPrimitive"),j={}.propertyIsEnumerable,R=l("symbol-registry"),V=l("symbols"),q=l("op-symbols"),$=Object.prototype,W="function"==typeof O&&!!w.f,U=r.QObject,J=!U||!U.prototype||!U.prototype.findChild,G=i&&c((function(){return 7!=F(k({},"a",{get:function(){return k(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=N($,t);r&&delete $[t],k(e,t,n),r&&e!==$&&k($,t,r)}:k,z=function(e){var t=V[e]=F(O.prototype);return t._k=e,t},H=W&&"symbol"==typeof O.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof O},X=function(e,t,n){return e===$&&X(q,t,n),D(e),t=C(t,!0),D(n),o(V,t)?(n.enumerable?(o(e,L)&&e[L][t]&&(e[L][t]=!1),n=F(n,{enumerable:A(0,!1)})):(o(e,L)||k(e,L,A(1,{})),e[L][t]=!0),G(e,t,n)):k(e,t,n)},Y=function(e,t){D(e);for(var n,r=m(t=b(t)),o=0,i=r.length;i>o;)X(e,n=r[o++],t[n]);return e},K=function(e){var t=j.call(this,e=C(e,!0));return!(this===$&&o(V,e)&&!o(q,e))&&(!(t||!o(this,e)||!o(V,e)||o(this,L)&&this[L][e])||t)},Q=function(e,t){if(e=b(e),t=C(t,!0),e!==$||!o(V,t)||o(q,t)){var n=N(e,t);return!n||!o(V,t)||o(e,L)&&e[L][t]||(n.enumerable=!0),n}},Z=function(e){for(var t,n=P(b(e)),r=[],i=0;n.length>i;)o(V,t=n[i++])||t==L||t==s||r.push(t);return r},ee=function(e){for(var t,n=e===$,r=P(n?q:b(e)),i=[],u=0;r.length>u;)!o(V,t=r[u++])||n&&!o($,t)||i.push(V[t]);return i};W||(a((O=function(){if(this instanceof O)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===$&&t.call(q,n),o(this,L)&&o(this[L],e)&&(this[L][e]=!1),G(this,e,A(1,n))};return i&&J&&G($,e,{configurable:!0,set:t}),z(e)}).prototype,"toString",(function(){return this._k})),S.f=Q,T.f=X,n(616).f=x.f=Z,n(4682).f=K,w.f=ee,i&&!n(4461)&&a($,"propertyIsEnumerable",K,!0),h.f=function(e){return z(d(e))}),u(u.G+u.W+u.F*!W,{Symbol:O});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)d(te[ne++]);for(var re=B(d.store),oe=0;re.length>oe;)g(re[oe++]);u(u.S+u.F*!W,"Symbol",{for:function(e){return o(R,e+="")?R[e]:R[e]=O(e)},keyFor:function(e){if(!H(e))throw TypeError(e+" is not a symbol!");for(var t in R)if(R[t]===e)return t},useSetter:function(){J=!0},useSimple:function(){J=!1}}),u(u.S+u.F*!W,"Object",{create:function(e,t){return void 0===t?F(e):Y(F(e),t)},defineProperty:X,defineProperties:Y,getOwnPropertyDescriptor:Q,getOwnPropertyNames:Z,getOwnPropertySymbols:ee});var ie=c((function(){w.f(1)}));u(u.S+u.F*ie,"Object",{getOwnPropertySymbols:function(e){return w.f(E(e))}}),_&&u(u.S+u.F*(!W||c((function(){var e=O();return"[null]"!=I([e])||"{}"!=I({a:e})||"{}"!=I(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(v(t)||void 0!==e)&&!H(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!H(t))return t}),r[1]=t,I.apply(_,r)}}),O.prototype[M]||n(7728)(O.prototype,M,O.prototype.valueOf),p(O,"Symbol"),p(Math,"Math",!0),p(r.JSON,"JSON",!0)},142:function(e,t,n){"use strict";var r=n(2985),o=n(9383),i=n(1125),u=n(7007),a=n(2337),s=n(875),c=n(5286),l=n(3816).ArrayBuffer,p=n(8364),f=i.ArrayBuffer,d=i.DataView,h=o.ABV&&l.isView,g=f.prototype.slice,m=o.VIEW,y="ArrayBuffer";r(r.G+r.W+r.F*(l!==f),{ArrayBuffer:f}),r(r.S+r.F*!o.CONSTR,y,{isView:function(e){return h&&h(e)||c(e)&&m in e}}),r(r.P+r.U+r.F*n(4253)((function(){return!new f(2).slice(1,void 0).byteLength})),y,{slice:function(e,t){if(void 0!==g&&void 0===t)return g.call(u(this),e);for(var n=u(this).byteLength,r=a(e,n),o=a(void 0===t?n:t,n),i=new(p(this,f))(s(o-r)),c=new d(this),l=new d(i),h=0;r<o;)l.setUint8(h++,c.getUint8(r++));return i}}),n(2974)(y)},1786:function(e,t,n){var r=n(2985);r(r.G+r.W+r.F*!n(9383).ABV,{DataView:n(1125).DataView})},162:function(e,t,n){n(8440)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},3834:function(e,t,n){n(8440)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},4821:function(e,t,n){n(8440)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},1303:function(e,t,n){n(8440)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},5368:function(e,t,n){n(8440)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},9103:function(e,t,n){n(8440)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},3318:function(e,t,n){n(8440)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},6964:function(e,t,n){n(8440)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},2152:function(e,t,n){n(8440)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},147:function(e,t,n){"use strict";var r,o=n(3816),i=n(50)(0),u=n(7234),a=n(4728),s=n(5345),c=n(3657),l=n(5286),p=n(1616),f=n(1616),d=!o.ActiveXObject&&"ActiveXObject"in o,h="WeakMap",g=a.getWeak,m=Object.isExtensible,y=c.ufstore,D=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(l(e)){var t=g(e);return!0===t?y(p(this,h)).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(p(this,h),e,t)}},E=e.exports=n(5795)(h,D,v,c,!0,!0);f&&d&&(s((r=c.getConstructor(D,h)).prototype,v),a.NEED=!0,i(["delete","has","get","set"],(function(e){var t=E.prototype,n=t[e];u(t,e,(function(t,o){if(l(t)&&!m(t)){this._f||(this._f=new r);var i=this._f[e](t,o);return"set"==e?this:i}return n.call(this,t,o)}))})))},9192:function(e,t,n){"use strict";var r=n(3657),o=n(1616),i="WeakSet";n(5795)(i,(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,i),e,!0)}},r,!1,!0)},1268:function(e,t,n){"use strict";var r=n(2985),o=n(3325),i=n(508),u=n(875),a=n(4963),s=n(6886);r(r.P,"Array",{flatMap:function(e){var t,n,r=i(this);return a(e),t=u(r.length),n=s(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(7722)("flatMap")},2773:function(e,t,n){"use strict";var r=n(2985),o=n(9315)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(7722)("includes")},3276:function(e,t,n){var r=n(2985),o=n(1131)(!0);r(r.S,"Object",{entries:function(e){return o(e)}})},8351:function(e,t,n){var r=n(2985),o=n(7643),i=n(2110),u=n(8693),a=n(2811);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),s=u.f,c=o(r),l={},p=0;c.length>p;)void 0!==(n=s(r,t=c[p++]))&&a(l,t,n);return l}})},6409:function(e,t,n){var r=n(2985),o=n(1131)(!1);r(r.S,"Object",{values:function(e){return o(e)}})},9865:function(e,t,n){"use strict";var r=n(2985),o=n(5645),i=n(3816),u=n(8364),a=n(94);r(r.P+r.R,"Promise",{finally:function(e){var t=u(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return a(t,e()).then((function(){return n}))}:e,n?function(n){return a(t,e()).then((function(){throw n}))}:e)}})},2770:function(e,t,n){"use strict";var r=n(2985),o=n(5442),i=n(575),u=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*u,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},1784:function(e,t,n){"use strict";var r=n(2985),o=n(5442),i=n(575),u=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*u,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},5869:function(e,t,n){"use strict";n(9599)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},4325:function(e,t,n){"use strict";n(9599)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},9665:function(e,t,n){n(6074)("asyncIterator")},1181:function(e,t,n){for(var r=n(6997),o=n(7184),i=n(7234),u=n(3816),a=n(7728),s=n(2803),c=n(6314),l=c("iterator"),p=c("toStringTag"),f=s.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=o(d),g=0;g<h.length;g++){var m,y=h[g],D=d[y],v=u[y],E=v&&v.prototype;if(E&&(E[l]||a(E,l,f),E[p]||a(E,p,y),s[y]=f,D))for(m in r)E[m]||i(E,m,r[m],!0)}},4633:function(e,t,n){var r=n(2985),o=n(4193);r(r.G+r.B,{setImmediate:o.set,clearImmediate:o.clear})},2564:function(e,t,n){var r=n(3816),o=n(2985),i=n(575),u=[].slice,a=/MSIE .\./.test(i),s=function(e){return function(t,n){var r=arguments.length>2,o=!!r&&u.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,n)}};o(o.G+o.B+o.F*a,{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},6337:function(e,t,n){n(2564),n(4633),n(1181),e.exports=n(5645)},3945:function(e,t,n){e.exports=function(){"use strict";function e(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}function t(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var r={name:"prettier",version:"2.2.1",description:"Prettier is an opinionated code formatter",bin:"./bin/prettier.js",repository:"prettier/prettier",homepage:"https://prettier.io",author:"James Long",license:"MIT",main:"./index.js",browser:"./standalone.js",unpkg:"./standalone.js",engines:{node:">=10.13.0"},files:["index.js","standalone.js","src","bin"],dependencies:{"@angular/compiler":"10.2.3","@babel/code-frame":"7.10.4","@babel/parser":"7.12.5","@glimmer/syntax":"0.66.0","@iarna/toml":"2.2.5","@typescript-eslint/typescript-estree":"4.8.1","angular-estree-parser":"2.2.1","angular-html-parser":"1.7.1",camelcase:"6.2.0",chalk:"4.1.0","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cjk-regex":"2.0.0",cosmiconfig:"7.0.0",dashify:"2.0.0",diff:"5.0.0",editorconfig:"0.15.3","editorconfig-to-prettier":"0.2.0","escape-string-regexp":"4.0.0",espree:"7.3.0",esutils:"2.0.3","fast-glob":"3.2.4","fast-json-stable-stringify":"2.1.0","find-parent-dir":"0.3.0","flow-parser":"0.138.0","get-stdin":"8.0.0",globby:"11.0.1",graphql:"15.4.0","html-element-attributes":"2.3.0","html-styles":"1.0.0","html-tag-names":"1.1.5","html-void-elements":"1.0.5",ignore:"4.0.6","jest-docblock":"26.0.0",json5:"2.1.3",leven:"3.1.0","lines-and-columns":"1.1.6","linguist-languages":"7.12.1",lodash:"4.17.20",mem:"8.0.0",meriyah:"3.1.6",minimatch:"3.0.4",minimist:"1.2.5","n-readlines":"1.0.1",outdent:"0.7.1","parse-srcset":"ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee","please-upgrade-node":"3.2.0","postcss-less":"3.1.4","postcss-media-query-parser":"0.2.3","postcss-scss":"2.1.1","postcss-selector-parser":"2.2.3","postcss-values-parser":"2.0.1","regexp-util":"1.2.2","remark-footnotes":"2.0.0","remark-math":"3.0.1","remark-parse":"8.0.3",resolve:"1.19.0",semver:"7.3.2","string-width":"4.2.0",typescript:"4.1.2","unicode-regex":"3.0.0",unified:"9.2.0",vnopts:"1.0.2","yaml-unist-parser":"1.3.1"},devDependencies:{"@babel/core":"7.12.3","@babel/preset-env":"7.12.1","@babel/types":"7.12.6","@glimmer/reference":"0.66.0","@rollup/plugin-alias":"3.1.1","@rollup/plugin-babel":"5.2.1","@rollup/plugin-commonjs":"16.0.0","@rollup/plugin-json":"4.1.0","@rollup/plugin-node-resolve":"10.0.0","@rollup/plugin-replace":"2.3.4","@types/estree":"0.0.45","@types/node":"14.14.0","@typescript-eslint/types":"4.8.1","babel-jest":"26.6.3","babel-loader":"8.2.1",benchmark:"2.1.4","builtin-modules":"3.1.0","cross-env":"7.0.2",cspell:"4.2.2",eslint:"7.13.0","eslint-config-prettier":"6.15.0","eslint-formatter-friendly":"7.0.0","eslint-plugin-import":"2.22.1","eslint-plugin-jest":"24.1.3","eslint-plugin-prettier-internal-rules":"file:scripts/tools/eslint-plugin-prettier-internal-rules","eslint-plugin-react":"7.21.5","eslint-plugin-unicorn":"23.0.0",execa:"4.1.0",jest:"26.6.3","jest-snapshot-serializer-ansi":"1.0.0","jest-snapshot-serializer-raw":"1.1.0","jest-watch-typeahead":"0.6.1","npm-run-all":"4.1.5","path-browserify":"1.0.1",prettier:"2.2.0",rimraf:"3.0.2",rollup:"2.33.3","rollup-plugin-node-globals":"1.4.0","rollup-plugin-terser":"7.0.2",shelljs:"0.8.4","snapshot-diff":"0.8.1","strip-ansi":"6.0.0","synchronous-promise":"2.0.15",tempy:"1.0.0","terser-webpack-plugin":"5.0.3",webpack:"5.5.1"},scripts:{prepublishOnly:'echo "Error: must publish from dist/" && exit 1',"prepare-release":"yarn && yarn build && yarn test:dist",test:"jest","test:dev-package":"cross-env INSTALL_PACKAGE=1 jest","test:dist":"cross-env NODE_ENV=production jest","test:dist-standalone":"cross-env NODE_ENV=production TEST_STANDALONE=1 jest","test:integration":"jest tests_integration","perf:repeat":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:repeat-inspect":"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:benchmark":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null",lint:"run-p lint:*","lint:typecheck":"tsc","lint:eslint":"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly","lint:changelog":"node ./scripts/lint-changelog.js","lint:prettier":'prettier . "!test*" --check',"lint:dist":'eslint --no-eslintrc --no-ignore --env=es6,browser --parser-options=ecmaVersion:2018 "dist/!(bin-prettier|index|third-party).js"',"lint:spellcheck":'cspell "**/*" ".github/**/*"',"lint:deps":"node ./scripts/check-deps.js",fix:"run-s fix:eslint fix:prettier","fix:eslint":"yarn lint:eslint --fix","fix:prettier":"yarn lint:prettier --write",build:"node --max-old-space-size=3072 ./scripts/build/build.js","build-docs":"node ./scripts/build-docs.js"}};function o(){}function i(e,t,n,r,o){for(var i=0,u=t.length,a=0,s=0;i<u;i++){var c=t[i];if(c.removed){if(c.value=e.join(r.slice(s,s+c.count)),s+=c.count,i&&t[i-1].added){var l=t[i-1];t[i-1]=t[i],t[i]=l}}else{if(!c.added&&o){var p=n.slice(a,a+c.count);p=p.map((function(e,t){var n=r[s+t];return n.length>e.length?n:e})),c.value=e.join(p)}else c.value=e.join(n.slice(a,a+c.count));a+=c.count,c.added||(s+=c.count)}}var f=t[u-1];return u>1&&"string"==typeof f.value&&(f.added||f.removed)&&e.equals("",f.value)&&(t[u-2].value+=f.value,t.pop()),t}function u(e){return{newPos:e.newPos,components:e.components.slice(0)}}o.prototype={diff:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.callback;"function"==typeof n&&(r=n,n={}),this.options=n;var o=this;function a(e){return r?(setTimeout((function(){r(void 0,e)}),0),!0):e}e=this.castInput(e),t=this.castInput(t),e=this.removeEmpty(this.tokenize(e));var s=(t=this.removeEmpty(this.tokenize(t))).length,c=e.length,l=1,p=s+c,f=[{newPos:-1,components:[]}],d=this.extractCommon(f[0],t,e,0);if(f[0].newPos+1>=s&&d+1>=c)return a([{value:this.join(t),count:t.length}]);function h(){for(var n=-1*l;n<=l;n+=2){var r=void 0,p=f[n-1],d=f[n+1],h=(d?d.newPos:0)-n;p&&(f[n-1]=void 0);var g=p&&p.newPos+1<s,m=d&&0<=h&&h<c;if(g||m){if(!g||m&&p.newPos<d.newPos?(r=u(d),o.pushComponent(r.components,void 0,!0)):((r=p).newPos++,o.pushComponent(r.components,!0,void 0)),h=o.extractCommon(r,t,e,n),r.newPos+1>=s&&h+1>=c)return a(i(o,r.components,t,e,o.useLongestToken));f[n]=r}else f[n]=void 0}l++}if(r)!function e(){setTimeout((function(){if(l>p)return r();h()||e()}),0)}();else for(;l<=p;){var g=h();if(g)return g}},pushComponent:function(e,t,n){var r=e[e.length-1];r&&r.added===t&&r.removed===n?e[e.length-1]={count:r.count+1,added:t,removed:n}:e.push({count:1,added:t,removed:n})},extractCommon:function(e,t,n,r){for(var o=t.length,i=n.length,u=e.newPos,a=u-r,s=0;u+1<o&&a+1<i&&this.equals(t[u+1],n[a+1]);)u++,a++,s++;return s&&e.components.push({count:s}),e.newPos=u,a},equals:function(e,t){return this.options.comparator?this.options.comparator(e,t):e===t||this.options.ignoreCase&&e.toLowerCase()===t.toLowerCase()},removeEmpty:function(e){for(var t=[],n=0;n<e.length;n++)e[n]&&t.push(e[n]);return t},castInput:function(e){return e},tokenize:function(e){return e.split("")},join:function(e){return e.join("")}};var a=new o;function s(e,t){if("function"==typeof e)t.callback=e;else if(e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var c=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/,l=/\S/,p=new o;p.equals=function(e,t){return this.options.ignoreCase&&(e=e.toLowerCase(),t=t.toLowerCase()),e===t||this.options.ignoreWhitespace&&!l.test(e)&&!l.test(t)},p.tokenize=function(e){for(var t=e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/),n=0;n<t.length-1;n++)!t[n+1]&&t[n+2]&&c.test(t[n])&&c.test(t[n+2])&&(t[n]+=t[n+2],t.splice(n+1,2),n--);return t};var f=new o;function d(e,t,n){return f.diff(e,t,n)}f.tokenize=function(e){var t=[],n=e.split(/(\n|\r\n)/);n[n.length-1]||n.pop();for(var r=0;r<n.length;r++){var o=n[r];r%2&&!this.options.newlineIsToken?t[t.length-1]+=o:(this.options.ignoreWhitespace&&(o=o.trim()),t.push(o))}return t};var h=new o;h.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};var g=new o;function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e){return function(e){if(Array.isArray(e))return D(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return D(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}g.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};var v=Object.prototype.toString,E=new o;function b(e,t,n,r,o){var i,u;for(t=t||[],n=n||[],r&&(e=r(o,e)),i=0;i<t.length;i+=1)if(t[i]===e)return n[i];if("[object Array]"===v.call(e)){for(t.push(e),u=new Array(e.length),n.push(u),i=0;i<e.length;i+=1)u[i]=b(e[i],t,n,r,o);return t.pop(),n.pop(),u}if(e&&e.toJSON&&(e=e.toJSON()),"object"===m(e)&&null!==e){t.push(e),u={},n.push(u);var a,s=[];for(a in e)e.hasOwnProperty(a)&&s.push(a);for(s.sort(),i=0;i<s.length;i+=1)u[a=s[i]]=b(e[a],t,n,r,a);t.pop(),n.pop()}else u=e;return u}E.useLongestToken=!0,E.tokenize=f.tokenize,E.castInput=function(e){var t=this.options,n=t.undefinedReplacement,r=t.stringifyReplacer,o=void 0===r?function(e,t){return void 0===t?n:t}:r;return"string"==typeof e?e:JSON.stringify(b(e,null,null,o),o,"  ")},E.equals=function(e,t){return o.prototype.equals.call(E,e.replace(/,([\r\n])/g,"$1"),t.replace(/,([\r\n])/g,"$1"))};var C=new o;function A(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.split(/\r\n|[\n\v\f\r\x85]/),r=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=[],i=0;function u(){var e={};for(o.push(e);i<n.length;){var r=n[i];if(/^(\-\-\-|\+\+\+|@@)\s/.test(r))break;var u=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(r);u&&(e.index=u[1]),i++}for(a(e),a(e),e.hunks=[];i<n.length;){var c=n[i];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(c))break;if(/^@@/.test(c))e.hunks.push(s());else{if(c&&t.strict)throw new Error("Unknown line "+(i+1)+" "+JSON.stringify(c));i++}}}function a(e){var t=/^(---|\+\+\+)\s+(.*)$/.exec(n[i]);if(t){var r="---"===t[1]?"old":"new",o=t[2].split("\t",2),u=o[0].replace(/\\\\/g,"\\");/^".*"$/.test(u)&&(u=u.substr(1,u.length-2)),e[r+"FileName"]=u,e[r+"Header"]=(o[1]||"").trim(),i++}}function s(){var e=i,o=n[i++].split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/),u={oldStart:+o[1],oldLines:void 0===o[2]?1:+o[2],newStart:+o[3],newLines:void 0===o[4]?1:+o[4],lines:[],linedelimiters:[]};0===u.oldLines&&(u.oldStart+=1),0===u.newLines&&(u.newStart+=1);for(var a=0,s=0;i<n.length&&!(0===n[i].indexOf("--- ")&&i+2<n.length&&0===n[i+1].indexOf("+++ ")&&0===n[i+2].indexOf("@@"));i++){var c=0==n[i].length&&i!=n.length-1?" ":n[i][0];if("+"!==c&&"-"!==c&&" "!==c&&"\\"!==c)break;u.lines.push(n[i]),u.linedelimiters.push(r[i]||"\n"),"+"===c?a++:"-"===c?s++:" "===c&&(a++,s++)}if(a||1!==u.newLines||(u.newLines=0),s||1!==u.oldLines||(u.oldLines=0),t.strict){if(a!==u.newLines)throw new Error("Added line count did not match for hunk at line "+(e+1));if(s!==u.oldLines)throw new Error("Removed line count did not match for hunk at line "+(e+1))}return u}for(;i<n.length;)u();return o}function F(e,t,n){var r=!0,o=!1,i=!1,u=1;return function a(){if(r&&!i){if(o?u++:r=!1,e+u<=n)return u;i=!0}if(!o)return i||(r=!0),t<=e-u?-u++:(o=!0,a())}}function x(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof t&&(t=A(t)),Array.isArray(t)){if(t.length>1)throw new Error("applyPatch only works with a single input.");t=t[0]}var r,o,i=e.split(/\r\n|[\n\v\f\r\x85]/),u=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],a=t.hunks,s=n.compareLine||function(e,t,n,r){return t===r},c=0,l=n.fuzzFactor||0,p=0,f=0;function d(e,t){for(var n=0;n<e.lines.length;n++){var r=e.lines[n],o=r.length>0?r[0]:" ",u=r.length>0?r.substr(1):r;if(" "===o||"-"===o){if(!s(t+1,i[t],o,u)&&++c>l)return!1;t++}}return!0}for(var h=0;h<a.length;h++){for(var g=a[h],m=i.length-g.oldLines,y=0,D=f+g.oldStart-1,v=F(D,p,m);void 0!==y;y=v())if(d(g,D+y)){g.offset=f+=y;break}if(void 0===y)return!1;p=g.offset+g.oldStart+g.oldLines}for(var E=0,b=0;b<a.length;b++){var C=a[b],x=C.oldStart+C.offset+E-1;E+=C.newLines-C.oldLines;for(var S=0;S<C.lines.length;S++){var w=C.lines[S],T=w.length>0?w[0]:" ",B=w.length>0?w.substr(1):w,N=C.linedelimiters[S];if(" "===T)x++;else if("-"===T)i.splice(x,1),u.splice(x,1);else if("+"===T)i.splice(x,0,B),u.splice(x,0,N),x++;else if("\\"===T){var k=C.lines[S-1]?C.lines[S-1][0]:null;"+"===k?r=!0:"-"===k&&(o=!0)}}}if(r)for(;!i[i.length-1];)i.pop(),u.pop();else o&&(i.push(""),u.push("\n"));for(var P=0;P<i.length-1;P++)i[P]=i[P]+u[P];return i.join("")}function S(e,t,n,r,o,i,u){u||(u={}),void 0===u.context&&(u.context=4);var a=d(n,r,u);function s(e){return e.map((function(e){return" "+e}))}a.push({value:"",lines:[]});for(var c=[],l=0,p=0,f=[],h=1,g=1,m=function(e){var t=a[e],o=t.lines||t.value.replace(/\n$/,"").split("\n");if(t.lines=o,t.added||t.removed){var i;if(!l){var d=a[e-1];l=h,p=g,d&&(f=u.context>0?s(d.lines.slice(-u.context)):[],l-=f.length,p-=f.length)}(i=f).push.apply(i,y(o.map((function(e){return(t.added?"+":"-")+e})))),t.added?g+=o.length:h+=o.length}else{if(l)if(o.length<=2*u.context&&e<a.length-2){var m;(m=f).push.apply(m,y(s(o)))}else{var D,v=Math.min(o.length,u.context);(D=f).push.apply(D,y(s(o.slice(0,v))));var E={oldStart:l,oldLines:h-l+v,newStart:p,newLines:g-p+v,lines:f};if(e>=a.length-2&&o.length<=u.context){var b=/\n$/.test(n),C=/\n$/.test(r),A=0==o.length&&f.length>E.oldLines;!b&&A&&n.length>0&&f.splice(E.oldLines,0,"\\ No newline at end of file"),(b||A)&&C||f.push("\\ No newline at end of file")}c.push(E),l=0,p=0,f=[]}h+=o.length,g+=o.length}},D=0;D<a.length;D++)m(D);return{oldFileName:e,newFileName:t,oldHeader:o,newHeader:i,hunks:c}}function w(e,t,n,r,o,i,u){return function(e){var t=[];e.oldFileName==e.newFileName&&t.push("Index: "+e.oldFileName),t.push("==================================================================="),t.push("--- "+e.oldFileName+(void 0===e.oldHeader?"":"\t"+e.oldHeader)),t.push("+++ "+e.newFileName+(void 0===e.newHeader?"":"\t"+e.newHeader));for(var n=0;n<e.hunks.length;n++){var r=e.hunks[n];0===r.oldLines&&(r.oldStart-=1),0===r.newLines&&(r.newStart-=1),t.push("@@ -"+r.oldStart+","+r.oldLines+" +"+r.newStart+","+r.newLines+" @@"),t.push.apply(t,r.lines)}return t.join("\n")+"\n"}(S(e,t,n,r,o,i,u))}function T(e,t){if(t.length>e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function B(e){var t=U(e.lines),n=t.oldLines,r=t.newLines;void 0!==n?e.oldLines=n:delete e.oldLines,void 0!==r?e.newLines=r:delete e.newLines}function N(e,t){if("string"==typeof e){if(/^@@/m.test(e)||/^Index:/m.test(e))return A(e)[0];if(!t)throw new Error("Must provide a base reference or pass in a patch");return S(void 0,void 0,t,e)}return e}function k(e){return e.newFileName&&e.newFileName!==e.oldFileName}function P(e,t,n){return t===n?t:(e.conflict=!0,{mine:t,theirs:n})}function O(e,t){return e.oldStart<t.oldStart&&e.oldStart+e.oldLines<t.oldStart}function _(e,t){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+t,newLines:e.newLines,lines:e.lines}}function I(e,t,n,r,o){var i={offset:t,lines:n,index:0},u={offset:r,lines:o,index:0};for(R(e,i,u),R(e,u,i);i.index<i.lines.length&&u.index<u.lines.length;){var a=i.lines[i.index],s=u.lines[u.index];if("-"!==a[0]&&"+"!==a[0]||"-"!==s[0]&&"+"!==s[0])if("+"===a[0]&&" "===s[0]){var c;(c=e.lines).push.apply(c,y(q(i)))}else if("+"===s[0]&&" "===a[0]){var l;(l=e.lines).push.apply(l,y(q(u)))}else"-"===a[0]&&" "===s[0]?M(e,i,u):"-"===s[0]&&" "===a[0]?M(e,u,i,!0):a===s?(e.lines.push(a),i.index++,u.index++):j(e,q(i),q(u));else L(e,i,u)}V(e,i),V(e,u),B(e)}function L(e,t,n){var r=q(t),o=q(n);if($(r)&&$(o)){var i,u;if(T(r,o)&&W(n,r,r.length-o.length))return void(i=e.lines).push.apply(i,y(r));if(T(o,r)&&W(t,o,o.length-r.length))return void(u=e.lines).push.apply(u,y(o))}else if(function(e,t){return e.length===t.length&&T(e,t)}(r,o)){var a;return void(a=e.lines).push.apply(a,y(r))}j(e,r,o)}function M(e,t,n,r){var o,i=q(t),u=function(e,t){for(var n=[],r=[],o=0,i=!1,u=!1;o<t.length&&e.index<e.lines.length;){var a=e.lines[e.index],s=t[o];if("+"===s[0])break;if(i=i||" "!==a[0],r.push(s),o++,"+"===a[0])for(u=!0;"+"===a[0];)n.push(a),a=e.lines[++e.index];s.substr(1)===a.substr(1)?(n.push(a),e.index++):u=!0}if("+"===(t[o]||"")[0]&&i&&(u=!0),u)return n;for(;o<t.length;)r.push(t[o++]);return{merged:r,changes:n}}(n,i);u.merged?(o=e.lines).push.apply(o,y(u.merged)):j(e,r?u:i,r?i:u)}function j(e,t,n){e.conflict=!0,e.lines.push({conflict:!0,mine:t,theirs:n})}function R(e,t,n){for(;t.offset<n.offset&&t.index<t.lines.length;){var r=t.lines[t.index++];e.lines.push(r),t.offset++}}function V(e,t){for(;t.index<t.lines.length;){var n=t.lines[t.index++];e.lines.push(n)}}function q(e){for(var t=[],n=e.lines[e.index][0];e.index<e.lines.length;){var r=e.lines[e.index];if("-"===n&&"+"===r[0]&&(n="+"),n!==r[0])break;t.push(r),e.index++}return t}function $(e){return e.reduce((function(e,t){return e&&"-"===t[0]}),!0)}function W(e,t,n){for(var r=0;r<n;r++){var o=t[t.length-n+r].substr(1);if(e.lines[e.index+r]!==" "+o)return!1}return e.index+=n,!0}function U(e){var t=0,n=0;return e.forEach((function(e){if("string"!=typeof e){var r=U(e.mine),o=U(e.theirs);void 0!==t&&(r.oldLines===o.oldLines?t+=r.oldLines:t=void 0),void 0!==n&&(r.newLines===o.newLines?n+=r.newLines:n=void 0)}else void 0===n||"+"!==e[0]&&" "!==e[0]||n++,void 0===t||"-"!==e[0]&&" "!==e[0]||t++})),{oldLines:t,newLines:n}}function J(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}C.tokenize=function(e){return e.slice()},C.join=C.removeEmpty=function(e){return e};var G=Object.freeze({__proto__:null,Diff:o,applyPatch:x,applyPatches:function(e,t){"string"==typeof e&&(e=A(e));var n=0;!function r(){var o=e[n++];if(!o)return t.complete();t.loadFile(o,(function(e,n){if(e)return t.complete(e);var i=x(n,o,t);t.patched(o,i,(function(e){if(e)return t.complete(e);r()}))}))}()},canonicalize:b,convertChangesToDMP:function(e){for(var t,n,r=[],o=0;o<e.length;o++)n=(t=e[o]).added?1:t.removed?-1:0,r.push([n,t.value]);return r},convertChangesToXML:function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];r.added?t.push("<ins>"):r.removed&&t.push("<del>"),t.push(J(r.value)),r.added?t.push("</ins>"):r.removed&&t.push("</del>")}return t.join("")},createPatch:function(e,t,n,r,o,i){return w(e,e,t,n,r,o,i)},createTwoFilesPatch:w,diffArrays:function(e,t,n){return C.diff(e,t,n)},diffChars:function(e,t,n){return a.diff(e,t,n)},diffCss:function(e,t,n){return g.diff(e,t,n)},diffJson:function(e,t,n){return E.diff(e,t,n)},diffLines:d,diffSentences:function(e,t,n){return h.diff(e,t,n)},diffTrimmedLines:function(e,t,n){var r=s(n,{ignoreWhitespace:!0});return f.diff(e,t,r)},diffWords:function(e,t,n){return n=s(n,{ignoreWhitespace:!0}),p.diff(e,t,n)},diffWordsWithSpace:function(e,t,n){return p.diff(e,t,n)},merge:function(e,t,n){e=N(e,n),t=N(t,n);var r={};(e.index||t.index)&&(r.index=e.index||t.index),(e.newFileName||t.newFileName)&&(k(e)?k(t)?(r.oldFileName=P(r,e.oldFileName,t.oldFileName),r.newFileName=P(r,e.newFileName,t.newFileName),r.oldHeader=P(r,e.oldHeader,t.oldHeader),r.newHeader=P(r,e.newHeader,t.newHeader)):(r.oldFileName=e.oldFileName,r.newFileName=e.newFileName,r.oldHeader=e.oldHeader,r.newHeader=e.newHeader):(r.oldFileName=t.oldFileName||e.oldFileName,r.newFileName=t.newFileName||e.newFileName,r.oldHeader=t.oldHeader||e.oldHeader,r.newHeader=t.newHeader||e.newHeader)),r.hunks=[];for(var o=0,i=0,u=0,a=0;o<e.hunks.length||i<t.hunks.length;){var s=e.hunks[o]||{oldStart:1/0},c=t.hunks[i]||{oldStart:1/0};if(O(s,c))r.hunks.push(_(s,u)),o++,a+=s.newLines-s.oldLines;else if(O(c,s))r.hunks.push(_(c,a)),i++,u+=c.newLines-c.oldLines;else{var l={oldStart:Math.min(s.oldStart,c.oldStart),oldLines:0,newStart:Math.min(s.newStart+u,c.oldStart+a),newLines:0,lines:[]};I(l,s.oldStart,s.lines,c.oldStart,c.lines),i++,o++,r.hunks.push(l)}}return r},parsePatch:A,structuredPatch:S});function z(e){return{type:"concat",parts:e}}function H(e){return{type:"indent",contents:e}}function X(e,t){return{type:"align",contents:t,n:e}}function Y(e,t){return{type:"group",id:(t=t||{}).id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}const K={type:"break-parent"},Q=z([{type:"line",hard:!0},K]),Z=z([{type:"line",hard:!0,literal:!0},K]);var ee={concat:z,join:function(e,t){const n=[];for(let r=0;r<t.length;r++)0!==r&&n.push(e),n.push(t[r]);return z(n)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:Q,literalline:Z,group:Y,conditionalGroup:function(e,t){return Y(e[0],Object.assign({},t,{expandedStates:e}))},fill:function(e){return{type:"fill",parts:e}},lineSuffix:function(e){return{type:"line-suffix",contents:e}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:{type:"cursor",placeholder:Symbol("cursor")},breakParent:K,ifBreak:function(e,t,n){return{type:"if-break",breakContents:e,flatContents:t,groupId:(n=n||{}).groupId}},trim:{type:"trim"},indent:H,align:X,addAlignmentToDoc:function(e,t,n){let r=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)r=H(r);r=X(t%n,r),r=X(-1/0,r)}return r},markAsRoot:function(e){return X({type:"root"},e)},dedentToRoot:function(e){return X(-1/0,e)},dedent:function(e){return X(-1,e)}};const te=e=>!Number.isNaN(e)&&e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141);var ne=te,re=te;ne.default=re;const oe=e=>{if("string"!=typeof(e=e.replace(/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g,"  "))||0===e.length)return 0;e=(e=>"string"==typeof e?e.replace((({onlyFirst:e=!1}={})=>{const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")})(),""):e)(e);let t=0;for(let n=0;n<e.length;n++){const r=e.codePointAt(n);r<=31||r>=127&&r<=159||r>=768&&r<=879||(r>65535&&n++,t+=ne(r)?2:1)}return t};var ie=oe,ue=oe;ie.default=ue;var ae=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")},se=e=>e[e.length-1],ce=void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function le(){throw new Error("setTimeout has not been defined")}function pe(){throw new Error("clearTimeout has not been defined")}var fe=le,de=pe;function he(e){if(fe===setTimeout)return setTimeout(e,0);if((fe===le||!fe)&&setTimeout)return fe=setTimeout,setTimeout(e,0);try{return fe(e,0)}catch(t){try{return fe.call(null,e,0)}catch(t){return fe.call(this,e,0)}}}"function"==typeof ce.setTimeout&&(fe=setTimeout),"function"==typeof ce.clearTimeout&&(de=clearTimeout);var ge,me=[],ye=!1,De=-1;function ve(){ye&&ge&&(ye=!1,ge.length?me=ge.concat(me):De=-1,me.length&&Ee())}function Ee(){if(!ye){var e=he(ve);ye=!0;for(var t=me.length;t;){for(ge=me,me=[];++De<t;)ge&&ge[De].run();De=-1,t=me.length}ge=null,ye=!1,function(e){if(de===clearTimeout)return clearTimeout(e);if((de===pe||!de)&&clearTimeout)return de=clearTimeout,clearTimeout(e);try{de(e)}catch(t){try{return de.call(null,e)}catch(t){return de.call(this,e)}}}(e)}}function be(e,t){this.fun=e,this.array=t}function Ce(){}be.prototype.run=function(){this.fun.apply(null,this.array)};var Ae=Ce,Fe=Ce,xe=Ce,Se=Ce,we=Ce,Te=Ce,Be=Ce,Ne=ce.performance||{},ke=Ne.now||Ne.mozNow||Ne.msNow||Ne.oNow||Ne.webkitNow||function(){return(new Date).getTime()},Pe=new Date,Oe={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];me.push(new be(e,t)),1!==me.length||ye||he(Ee)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Ae,addListener:Fe,once:xe,off:Se,removeListener:we,removeAllListeners:Te,emit:Be,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*ke.call(Ne),n=Math.floor(t),r=Math.floor(t%1*1e9);return e&&(n-=e[0],(r-=e[1])<0&&(n--,r+=1e9)),[n,r]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-Pe)/1e3}},_e="object"==typeof Oe&&Oe.env&&Oe.env.NODE_DEBUG&&/\bsemver\b/i.test(Oe.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{},Ie={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH:16},Le="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function Me(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}function je(e){return e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Re=Me((function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n}=Ie,r=(t=e.exports={}).re=[],o=t.src=[],i=t.t={};let u=0;const a=(e,t,n)=>{const a=u++;_e(a,t),i[e]=a,o[a]=t,r[a]=new RegExp(t,n?"g":void 0)};a("NUMERICIDENTIFIER","0|[1-9]\\d*"),a("NUMERICIDENTIFIERLOOSE","[0-9]+"),a("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),a("MAINVERSION","(".concat(o[i.NUMERICIDENTIFIER],")\\.")+"(".concat(o[i.NUMERICIDENTIFIER],")\\.")+"(".concat(o[i.NUMERICIDENTIFIER],")")),a("MAINVERSIONLOOSE","(".concat(o[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(o[i.NUMERICIDENTIFIERLOOSE],")\\.")+"(".concat(o[i.NUMERICIDENTIFIERLOOSE],")")),a("PRERELEASEIDENTIFIER","(?:".concat(o[i.NUMERICIDENTIFIER],"|").concat(o[i.NONNUMERICIDENTIFIER],")")),a("PRERELEASEIDENTIFIERLOOSE","(?:".concat(o[i.NUMERICIDENTIFIERLOOSE],"|").concat(o[i.NONNUMERICIDENTIFIER],")")),a("PRERELEASE","(?:-(".concat(o[i.PRERELEASEIDENTIFIER],"(?:\\.").concat(o[i.PRERELEASEIDENTIFIER],")*))")),a("PRERELEASELOOSE","(?:-?(".concat(o[i.PRERELEASEIDENTIFIERLOOSE],"(?:\\.").concat(o[i.PRERELEASEIDENTIFIERLOOSE],")*))")),a("BUILDIDENTIFIER","[0-9A-Za-z-]+"),a("BUILD","(?:\\+(".concat(o[i.BUILDIDENTIFIER],"(?:\\.").concat(o[i.BUILDIDENTIFIER],")*))")),a("FULLPLAIN","v?".concat(o[i.MAINVERSION]).concat(o[i.PRERELEASE],"?").concat(o[i.BUILD],"?")),a("FULL","^".concat(o[i.FULLPLAIN],"$")),a("LOOSEPLAIN","[v=\\s]*".concat(o[i.MAINVERSIONLOOSE]).concat(o[i.PRERELEASELOOSE],"?").concat(o[i.BUILD],"?")),a("LOOSE","^".concat(o[i.LOOSEPLAIN],"$")),a("GTLT","((?:<|>)?=?)"),a("XRANGEIDENTIFIERLOOSE","".concat(o[i.NUMERICIDENTIFIERLOOSE],"|x|X|\\*")),a("XRANGEIDENTIFIER","".concat(o[i.NUMERICIDENTIFIER],"|x|X|\\*")),a("XRANGEPLAIN","[v=\\s]*(".concat(o[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(o[i.XRANGEIDENTIFIER],")")+"(?:\\.(".concat(o[i.XRANGEIDENTIFIER],")")+"(?:".concat(o[i.PRERELEASE],")?").concat(o[i.BUILD],"?")+")?)?"),a("XRANGEPLAINLOOSE","[v=\\s]*(".concat(o[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(o[i.XRANGEIDENTIFIERLOOSE],")")+"(?:\\.(".concat(o[i.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(o[i.PRERELEASELOOSE],")?").concat(o[i.BUILD],"?")+")?)?"),a("XRANGE","^".concat(o[i.GTLT],"\\s*").concat(o[i.XRANGEPLAIN],"$")),a("XRANGELOOSE","^".concat(o[i.GTLT],"\\s*").concat(o[i.XRANGEPLAINLOOSE],"$")),a("COERCE","".concat("(^|[^\\d])(\\d{1,").concat(n,"})")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:\\.(\\d{1,".concat(n,"}))?")+"(?:$|[^\\d])"),a("COERCERTL",o[i.COERCE],!0),a("LONETILDE","(?:~>?)"),a("TILDETRIM","(\\s*)".concat(o[i.LONETILDE],"\\s+"),!0),t.tildeTrimReplace="$1~",a("TILDE","^".concat(o[i.LONETILDE]).concat(o[i.XRANGEPLAIN],"$")),a("TILDELOOSE","^".concat(o[i.LONETILDE]).concat(o[i.XRANGEPLAINLOOSE],"$")),a("LONECARET","(?:\\^)"),a("CARETTRIM","(\\s*)".concat(o[i.LONECARET],"\\s+"),!0),t.caretTrimReplace="$1^",a("CARET","^".concat(o[i.LONECARET]).concat(o[i.XRANGEPLAIN],"$")),a("CARETLOOSE","^".concat(o[i.LONECARET]).concat(o[i.XRANGEPLAINLOOSE],"$")),a("COMPARATORLOOSE","^".concat(o[i.GTLT],"\\s*(").concat(o[i.LOOSEPLAIN],")$|^$")),a("COMPARATOR","^".concat(o[i.GTLT],"\\s*(").concat(o[i.FULLPLAIN],")$|^$")),a("COMPARATORTRIM","(\\s*)".concat(o[i.GTLT],"\\s*(").concat(o[i.LOOSEPLAIN],"|").concat(o[i.XRANGEPLAIN],")"),!0),t.comparatorTrimReplace="$1$2$3",a("HYPHENRANGE","^\\s*(".concat(o[i.XRANGEPLAIN],")")+"\\s+-\\s+"+"(".concat(o[i.XRANGEPLAIN],")")+"\\s*$"),a("HYPHENRANGELOOSE","^\\s*(".concat(o[i.XRANGEPLAINLOOSE],")")+"\\s+-\\s+"+"(".concat(o[i.XRANGEPLAINLOOSE],")")+"\\s*$"),a("STAR","(<|>)?=?\\s*\\*"),a("GTE0","^\\s*>=\\s*0.0.0\\s*$"),a("GTE0PRE","^\\s*>=\\s*0.0.0-0\\s*$")}));const Ve=/^[0-9]+$/,qe=(e,t)=>{const n=Ve.test(e),r=Ve.test(t);return n&&r&&(e=+e,t=+t),e===t?0:n&&!r?-1:r&&!n?1:e<t?-1:1};var $e={compareIdentifiers:qe,rcompareIdentifiers:(e,t)=>qe(t,e)};const{MAX_LENGTH:We,MAX_SAFE_INTEGER:Ue}=Ie,{re:Je,t:Ge}=Re,{compareIdentifiers:ze}=$e;class He{constructor(e,t){if(t&&"object"==typeof t||(t={loose:!!t,includePrerelease:!1}),e instanceof He){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError("Invalid Version: ".concat(e));if(e.length>We)throw new TypeError("version is longer than ".concat(We," characters"));_e("SemVer",e,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const n=e.trim().match(t.loose?Je[Ge.LOOSE]:Je[Ge.FULL]);if(!n)throw new TypeError("Invalid Version: ".concat(e));if(this.raw=e,this.major=+n[1],this.minor=+n[2],this.patch=+n[3],this.major>Ue||this.major<0)throw new TypeError("Invalid major version");if(this.minor>Ue||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>Ue||this.patch<0)throw new TypeError("Invalid patch version");n[4]?this.prerelease=n[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<Ue)return t}return e})):this.prerelease=[],this.build=n[5]?n[5].split("."):[],this.format()}format(){return this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch),this.prerelease.length&&(this.version+="-".concat(this.prerelease.join("."))),this.version}toString(){return this.version}compare(e){if(_e("SemVer.compare",this.version,this.options,e),!(e instanceof He)){if("string"==typeof e&&e===this.version)return 0;e=new He(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof He||(e=new He(e,this.options)),ze(this.major,e.major)||ze(this.minor,e.minor)||ze(this.patch,e.patch)}comparePre(e){if(e instanceof He||(e=new He(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let t=0;do{const n=this.prerelease[t],r=e.prerelease[t];if(_e("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return ze(n,r)}while(++t)}compareBuild(e){e instanceof He||(e=new He(e,this.options));let t=0;do{const n=this.build[t],r=e.build[t];if(_e("prerelease compare",t,n,r),void 0===n&&void 0===r)return 0;if(void 0===r)return 1;if(void 0===n)return-1;if(n!==r)return ze(n,r)}while(++t)}inc(e,t){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t),this.inc("pre",t);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t),this.inc("pre",t);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}t&&(this.prerelease[0]===t?isNaN(this.prerelease[1])&&(this.prerelease=[t,0]):this.prerelease=[t,0]);break;default:throw new Error("invalid increment argument: ".concat(e))}return this.format(),this.raw=this.version,this}}var Xe=He,Ye=(e,t,n)=>new Xe(e,n).compare(new Xe(t,n)),Ke=Me((function(e,t){function n(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]}function r(){return"undefined"!=typeof WeakMap?new WeakMap:{add:n,delete:n,get:n,set:n,has:function(e){return!1}}}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.prototype.hasOwnProperty,i=function(e,t){return o.call(e,t)};function u(e,t){for(var n in t)i(t,n)&&(e[n]=t[n]);return e}var a=/^[ \t]*(?:\r\n|\r|\n)/,s=/(?:\r\n|\r|\n)[ \t]*$/,c=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,p=/^[ \t]*[\r\n][ \t\r\n]*$/;function f(e,t,n){var r=0,o=e[0].match(l);o&&(r=o[1].length);var i=new RegExp("(\\r\\n|\\r|\\n).{0,"+r+"}","g");t&&(e=e.slice(1));var u=n.newline,c=n.trimLeadingNewline,p=n.trimTrailingNewline,f="string"==typeof u,d=e.length;return e.map((function(e,t){return e=e.replace(i,"$1"),0===t&&c&&(e=e.replace(a,"")),t===d-1&&p&&(e=e.replace(s,"")),f&&(e=e.replace(/\r\n|\n|\r/g,(function(e){return u}))),e}))}function d(e,t){for(var n="",r=0,o=e.length;r<o;r++)n+=e[r],r<o-1&&(n+=t[r]);return n}function h(e){return i(e,"raw")&&i(e,"length")}var g=function e(t){var n=r(),o=r();return u((function r(i){for(var a=[],s=1;s<arguments.length;s++)a[s-1]=arguments[s];if(h(i)){var l=i,m=(a[0]===r||a[0]===g)&&p.test(l[0])&&c.test(l[1]),y=m?o:n,D=y.get(l);return D||(D=f(l,m,t),y.set(l,D)),0===a.length?D[0]:d(D,m?a.slice(1):a)}return e(u(u({},t),i||{}))}),{string:function(e){return f([e],!1,t)[0]}})}({trimLeadingNewline:!0,trimTrailingNewline:!0});t.outdent=g,t.default=g;try{e.exports=g,Object.defineProperty(g,"__esModule",{value:!0}),g.default=g,g.outdent=g}catch(e){}}));function Qe(){const e=t(["\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\n      in order for it to be formatted.\n    "]);return Qe=function(){return e},e}function Ze(){const e=t(["\n      Format code starting at a given character offset.\n      The range will extend backwards to the start of the first line containing the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return Ze=function(){return e},e}function et(){const e=t(["\n      Format code ending at a given character offset (exclusive).\n      The range will extend forwards to the end of the selected statement.\n      This option cannot be used with --cursor-offset.\n    "]);return et=function(){return e},e}function tt(){const e=t(["\n      Custom directory that contains prettier plugins in node_modules subdirectory.\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\n      Multiple values are accepted.\n    "]);return tt=function(){return e},e}function nt(){const e=t(["\n          Maintain existing\n          (mixed values within one file are normalised by looking at what's used after the first line)\n        "]);return nt=function(){return e},e}function rt(){const e=t(["\n      Print (to stderr) where a cursor at the given position would move to after formatting.\n      This option cannot be used with --range-start and --range-end.\n    "]);return rt=function(){return e},e}const{outdent:ot}=Ke,it="Config",ut="Editor",at="Other",st="Global",ct="Special",lt={cursorOffset:{since:"1.4.0",category:ct,type:"int",default:-1,range:{start:-1,end:1/0,step:1},description:ot(rt()),cliCategory:ut},endOfLine:{since:"1.15.0",category:st,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:ot(nt())}]},filepath:{since:"1.4.0",category:ct,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:at,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:ct,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:at},parser:{since:"0.0.10",category:st,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:e=>"string"==typeof e||"function"==typeof e,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:st,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin",cliCategory:it},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:st,description:ot(tt()),exception:e=>"string"==typeof e||"object"==typeof e,cliName:"plugin-search-dir",cliCategory:it},printWidth:{since:"0.0.0",category:st,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:1/0,step:1}},rangeEnd:{since:"1.4.0",category:ct,type:"int",default:1/0,range:{start:0,end:1/0,step:1},description:ot(et()),cliCategory:ut},rangeStart:{since:"1.4.0",category:ct,type:"int",default:0,range:{start:0,end:1/0,step:1},description:ot(Ze()),cliCategory:ut},requirePragma:{since:"1.7.0",category:ct,type:"boolean",default:!1,description:ot(Qe()),cliCategory:at},tabWidth:{type:"int",category:st,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:1/0,step:1}},useTabs:{since:"1.0.0",category:st,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:st,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}},pt=Ye,ft=(e,t,n)=>Ye(e,t,n)<0,dt=(e,t,n)=>Ye(e,t,n)>=0,ht=r.version,gt=lt;var mt={getSupportInfo:function({plugins:t=[],showUnreleased:n=!1,showDeprecated:r=!1,showInternal:o=!1}={}){const i=ht.split("-",1)[0],u=t.reduce(((e,t)=>e.concat(t.languages||[])),[]).filter(s),a=((e,t)=>Object.entries(e).map((([e,t])=>Object.assign({name:e},t))))(Object.assign({},...t.map((({options:e})=>e)),gt)).filter((e=>s(e)&&c(e))).sort(((e,t)=>e.name===t.name?0:e.name<t.name?-1:1)).map((function(t){return o?t:e(t,["cliName","cliCategory","cliDescription"])})).map((e=>{e=Object.assign({},e),Array.isArray(e.default)&&(e.default=1===e.default.length?e.default[0].value:e.default.filter(s).sort(((e,t)=>pt(t.since,e.since)))[0].value),Array.isArray(e.choices)&&(e.choices=e.choices.filter((e=>s(e)&&c(e))),"parser"===e.name&&function(e,t,n){const r=new Set(e.choices.map((e=>e.value)));for(const o of t)if(o.parsers)for(const t of o.parsers)if(!r.has(t)){r.add(t);const i=n.find((e=>e.parsers&&e.parsers[t]));let u=o.name;i&&i.name&&(u+=" (plugin: ".concat(i.name,")")),e.choices.push({value:t,description:u})}}(e,u,t));const n=t.filter((t=>t.defaultOptions&&void 0!==t.defaultOptions[e.name])).reduce(((t,n)=>(t[n.name]=n.defaultOptions[e.name],t)),{});return Object.assign({},e,{pluginDefaults:n})}));return{languages:u,options:a};function s(e){return n||!("since"in e)||e.since&&dt(i,e.since)}function c(e){return r||!("deprecated"in e)||e.deprecated&&ft(i,e.deprecated)}}};const{getSupportInfo:yt}=mt,Dt=/[^\x20-\x7F]/;function vt(e){return(t,n,r)=>{const o=r&&r.backwards;if(!1===n)return!1;const{length:i}=t;let u=n;for(;u>=0&&u<i;){const n=t.charAt(u);if(e instanceof RegExp){if(!e.test(n))return u}else if(!e.includes(n))return u;o?u--:u++}return(-1===u||u===i)&&u}}const Et=vt(/\s/),bt=vt(" \t"),Ct=vt(",; \t"),At=vt(/[^\n\r]/);function Ft(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t}function xt(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?At(e,t):t)}function St(e,t,n){const r=n&&n.backwards;if(!1===t)return!1;const o=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===o)return t-2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return t-1}else{if("\r"===o&&"\n"===e.charAt(t+1))return t+2;if("\n"===o||"\r"===o||"\u2028"===o||"\u2029"===o)return t+1}return t}function wt(e,t,n){const r=bt(e,(n=n||{}).backwards?t-1:t,n);return r!==St(e,r,n)}function Tt(e,t){let n=null,r=t;for(;r!==n;)n=r,r=Ct(e,r),r=Ft(e,r),r=bt(e,r);return r=xt(e,r),r=St(e,r),!1!==r&&wt(e,r)}function Bt(e,t){let n=null,r=t;for(;r!==n;)n=r,r=bt(e,r),r=Ft(e,r),r=xt(e,r),r=St(e,r);return r}function Nt(e,t,n){return Bt(e,n(t))}function kt(e,t,n){let r=0;for(let o=n=n||0;o<e.length;++o)"\t"===e[o]?r=r+t-r%t:r++;return r}function Pt(e,t){const n=e.slice(1,-1),r={quote:'"',regex:/"/g},o={quote:"'",regex:/'/g},i="'"===t?o:r,u=i===o?r:o;let a=i.quote;return(n.includes(i.quote)||n.includes(u.quote))&&(a=(n.match(i.regex)||[]).length>(n.match(u.regex)||[]).length?u.quote:i.quote),a}function Ot(e,t,n){const r='"'===t?"'":'"',o=e.replace(/\\([\S\s])|(["'])/g,((e,o,i)=>o===r?o:i===t?"\\"+i:i||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(o)?o:"\\"+o)));return t+o+t}function _t(e,t){(e.comments||(e.comments=[])).push(t),t.printed=!1,"JSXText"===e.type&&(t.printed=!0)}var It={inferParserByLanguage:function(e,t){const{languages:n}=yt({plugins:t.plugins}),r=n.find((({name:t})=>t.toLowerCase()===e))||n.find((({aliases:t})=>Array.isArray(t)&&t.includes(e)))||n.find((({extensions:t})=>Array.isArray(t)&&t.includes(".".concat(e))));return r&&r.parsers[0]},replaceEndOfLineWith:function(e,t){const n=[];for(const r of e.split("\n"))0!==n.length&&n.push(t),n.push(r);return n},getStringWidth:function(e){return e?Dt.test(e)?ie(e):e.length:0},getMaxContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(ae(t),")+"),"g"));return null===n?0:n.reduce(((e,n)=>Math.max(e,n.length/t.length)),0)},getMinNotPresentContinuousCount:function(e,t){const n=e.match(new RegExp("(".concat(ae(t),")+"),"g"));if(null===n)return 0;const r=new Map;let o=0;for(const e of n){const n=e.length/t.length;r.set(n,!0),n>o&&(o=n)}for(let e=1;e<o;e++)if(!r.get(e))return e;return o+1},getPenultimate:e=>e[e.length-2],getLast:se,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:Bt,getNextNonSpaceNonCommentCharacterIndex:Nt,getNextNonSpaceNonCommentCharacter:function(e,t,n){return e.charAt(Nt(e,t,n))},skip:vt,skipWhitespace:Et,skipSpaces:bt,skipToLineEnd:Ct,skipEverythingButNewLine:At,skipInlineComment:Ft,skipTrailingComment:xt,skipNewline:St,isNextLineEmptyAfterIndex:Tt,isNextLineEmpty:function(e,t,n){return Tt(e,n(t))},isPreviousLineEmpty:function(e,t,n){let r=n(t)-1;return r=bt(e,r,{backwards:!0}),r=St(e,r,{backwards:!0}),r=bt(e,r,{backwards:!0}),r!==St(e,r,{backwards:!0})},hasNewline:wt,hasNewlineInRange:function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1},hasSpaces:function(e,t,n){return bt(e,(n=n||{}).backwards?t-1:t,n)!==t},getAlignmentSize:kt,getIndentSize:function(e,t){const n=e.lastIndexOf("\n");return-1===n?0:kt(e.slice(n+1).match(/^[\t ]*/)[0],t)},getPreferredQuote:Pt,printString:function(e,t,n){const r=e.slice(1,-1),o=!r.includes('"')&&!r.includes("'"),i="json"===t.parser?'"':t.__isInHtmlAttribute?"'":Pt(e,t.singleQuote?"'":'"');return n?o?i+r+i:e:Ot(r,i,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.embeddedInHtml))},printNumber:function(e){return e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},isNodeIgnoreComment:function(e){return"prettier-ignore"===e.value.trim()},makeString:Ot,addLeadingComment:function(e,t){t.leading=!0,t.trailing=!1,_t(e,t)},addDanglingComment:function(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),_t(e,t)},addTrailingComment:function(e,t){t.leading=!1,t.trailing=!0,_t(e,t)},isFrontMatterNode:function(e){return e&&"front-matter"===e.type},getShebang:function(e){if(!e.startsWith("#!"))return"";const t=e.indexOf("\n");return-1===t?e:e.slice(0,t)}},Lt={guessEndOfLine:function(e){const t=e.indexOf("\r");return t>=0?"\n"===e.charAt(t+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function(e,t){let n;if("\n"===t)n=/\n/g;else if("\r"===t)n=/\r/g;else{if("\r\n"!==t)throw new Error('Unexpected "eol" '.concat(JSON.stringify(t),"."));n=/\r\n/g}const r=e.match(n);return r?r.length:0},normalizeEndOfLine:function(e){return e.replace(/\r\n?/g,"\n")}};const{getStringWidth:Mt}=It,{convertEndOfLineToChars:jt}=Lt,{concat:Rt,fill:Vt,cursor:qt}=ee;let $t;function Wt(e,t){return Jt(e,{type:"indent"},t)}function Ut(e,t,n){return t===-1/0?e.root||{value:"",length:0,queue:[]}:t<0?Jt(e,{type:"dedent"},n):t?"root"===t.type?Object.assign({},e,{root:e}):Jt(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n):e}function Jt(e,t,n){const r="dedent"===t.type?e.queue.slice(0,-1):e.queue.concat(t);let o="",i=0,u=0,a=0;for(const e of r)switch(e.type){case"indent":l(),n.useTabs?s(1):c(n.tabWidth);break;case"stringAlign":l(),o+=e.n,i+=e.n.length;break;case"numberAlign":u+=1,a+=e.n;break;default:throw new Error("Unexpected type '".concat(e.type,"'"))}return p(),Object.assign({},e,{value:o,length:i,queue:r});function s(e){o+="\t".repeat(e),i+=n.tabWidth*e}function c(e){o+=" ".repeat(e),i+=e}function l(){n.useTabs?(u>0&&s(u),f()):p()}function p(){a>0&&c(a),f()}function f(){u=0,a=0}}function Gt(e){if(0===e.length)return 0;let t=0;for(;e.length>0&&"string"==typeof e[e.length-1]&&e[e.length-1].match(/^[\t ]*$/);)t+=e.pop().length;if(e.length&&"string"==typeof e[e.length-1]){const n=e[e.length-1].replace(/[\t ]*$/,"");t+=e[e.length-1].length-n.length,e[e.length-1]=n}return t}function zt(e,t,n,r,o){let i=t.length;const u=[e],a=[];for(;n>=0;){if(0===u.length){if(0===i)return!0;u.push(t[i-1]),i--;continue}const[e,s,c]=u.pop();if("string"==typeof c)a.push(c),n-=Mt(c);else switch(c.type){case"concat":for(let t=c.parts.length-1;t>=0;t--)u.push([e,s,c.parts[t]]);break;case"indent":u.push([Wt(e,r),s,c.contents]);break;case"align":u.push([Ut(e,c.n,r),s,c.contents]);break;case"trim":n+=Gt(a);break;case"group":if(o&&c.break)return!1;u.push([e,c.break?1:s,c.contents]),c.id&&($t[c.id]=u[u.length-1][1]);break;case"fill":for(let t=c.parts.length-1;t>=0;t--)u.push([e,s,c.parts[t]]);break;case"if-break":{const t=c.groupId?$t[c.groupId]:s;1===t&&c.breakContents&&u.push([e,s,c.breakContents]),2===t&&c.flatContents&&u.push([e,s,c.flatContents]);break}case"line":switch(s){case 2:if(!c.hard){c.soft||(a.push(" "),n-=1);break}return!0;case 1:return!0}}}return!1}var Ht={printDocToString:function(e,t){$t={};const n=t.printWidth,r=jt(t.endOfLine);let o=0;const i=[[{value:"",length:0,queue:[]},1,e]],u=[];let a=!1,s=[];for(;0!==i.length;){const[e,c,l]=i.pop();if("string"==typeof l){const e="\n"!==r&&l.includes("\n")?l.replace(/\n/g,r):l;u.push(e),o+=Mt(e)}else switch(l.type){case"cursor":u.push(qt.placeholder);break;case"concat":for(let t=l.parts.length-1;t>=0;t--)i.push([e,c,l.parts[t]]);break;case"indent":i.push([Wt(e,t),c,l.contents]);break;case"align":i.push([Ut(e,l.n,t),c,l.contents]);break;case"trim":o-=Gt(u);break;case"group":switch(c){case 2:if(!a){i.push([e,l.break?1:2,l.contents]);break}case 1:{a=!1;const r=[e,2,l.contents],u=n-o;if(!l.break&&zt(r,i,u,t))i.push(r);else if(l.expandedStates){const n=l.expandedStates[l.expandedStates.length-1];if(l.break){i.push([e,1,n]);break}for(let r=1;r<l.expandedStates.length+1;r++){if(r>=l.expandedStates.length){i.push([e,1,n]);break}{const n=[e,2,l.expandedStates[r]];if(zt(n,i,u,t)){i.push(n);break}}}}else i.push([e,1,l.contents]);break}}l.id&&($t[l.id]=i[i.length-1][1]);break;case"fill":{const r=n-o,{parts:u}=l;if(0===u.length)break;const[a,s]=u,p=[e,2,a],f=[e,1,a],d=zt(p,[],r,t,!0);if(1===u.length){d?i.push(p):i.push(f);break}const h=[e,2,s],g=[e,1,s];if(2===u.length){d?(i.push(h),i.push(p)):(i.push(g),i.push(f));break}u.splice(0,2);const m=[e,c,Vt(u)],y=u[0];zt([e,2,Rt([a,s,y])],[],r,t,!0)?(i.push(m),i.push(h),i.push(p)):d?(i.push(m),i.push(g),i.push(p)):(i.push(m),i.push(g),i.push(f));break}case"if-break":{const t=l.groupId?$t[l.groupId]:c;1===t&&l.breakContents&&i.push([e,c,l.breakContents]),2===t&&l.flatContents&&i.push([e,c,l.flatContents]);break}case"line-suffix":s.push([e,c,l.contents]);break;case"line-suffix-boundary":s.length>0&&i.push([e,c,{type:"line",hard:!0}]);break;case"line":switch(c){case 2:if(!l.hard){l.soft||(u.push(" "),o+=1);break}a=!0;case 1:if(s.length){i.push([e,c,l]),i.push(...s.reverse()),s=[];break}l.literal?e.root?(u.push(r,e.root.value),o=e.root.length):(u.push(r),o=0):(o-=Gt(u),u.push(r+e.value),o=e.length)}}0===i.length&&s.length&&(i.push(...s.reverse()),s=[])}const c=u.indexOf(qt.placeholder);if(-1!==c){const e=u.indexOf(qt.placeholder,c+1),t=u.slice(0,c).join(""),n=u.slice(c+1,e).join("");return{formatted:t+n+u.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return{formatted:u.join("")}}};const{literalline:Xt,concat:Yt}=ee,Kt={};function Qt(e,t,n,r){const o=[e];for(;0!==o.length;){const e=o.pop();if(e!==Kt){if(n&&o.push(e,Kt),!t||!1!==t(e))if("concat"===e.type||"fill"===e.type)for(let t=e.parts.length-1;t>=0;--t)o.push(e.parts[t]);else if("if-break"===e.type)e.flatContents&&o.push(e.flatContents),e.breakContents&&o.push(e.breakContents);else if("group"===e.type&&e.expandedStates)if(r)for(let t=e.expandedStates.length-1;t>=0;--t)o.push(e.expandedStates[t]);else o.push(e.contents);else e.contents&&o.push(e.contents)}else n(o.pop())}}function Zt(e,t){if("concat"===e.type||"fill"===e.type){const n=e.parts.map((e=>Zt(e,t)));return t(Object.assign({},e,{parts:n}))}if("if-break"===e.type){const n=e.breakContents&&Zt(e.breakContents,t),r=e.flatContents&&Zt(e.flatContents,t);return t(Object.assign({},e,{breakContents:n,flatContents:r}))}if(e.contents){const n=Zt(e.contents,t);return t(Object.assign({},e,{contents:n}))}return t(e)}function en(e,t,n){let r=n,o=!1;return Qt(e,(function(e){const n=t(e);if(void 0!==n&&(o=!0,r=n),o)return!1})),r}function tn(e){return"string"!=typeof e&&("line"===e.type||void 0)}function nn(e){return!("group"!==e.type||!e.break)||!("line"!==e.type||!e.hard)||"break-parent"===e.type||void 0}function rn(e){if(e.length>0){const t=e[e.length-1];t.expandedStates||(t.break=!0)}return null}function on(e){return"line"!==e.type||e.hard?"if-break"===e.type?e.flatContents||"":e:e.soft?"":" "}function un(e){const t=[],n=e.filter(Boolean);for(;0!==n.length;){const e=n.shift();e&&("concat"!==e.type?0===t.length||"string"!=typeof t[t.length-1]||"string"!=typeof e?t.push(e):t[t.length-1]+=e:n.unshift(...e.parts))}return t}function an(e){if("concat"===e.type){const t=[];for(let n=0;n<e.parts.length;++n){const r=e.parts[n];if("string"!=typeof r&&"concat"===r.type)t.push(...an(r).parts);else{const e=an(r);""!==e&&t.push(e)}}return Object.assign({},e,{parts:t})}return"if-break"===e.type?Object.assign({},e,{breakContents:null!=e.breakContents?an(e.breakContents):null,flatContents:null!=e.flatContents?an(e.flatContents):null}):"group"===e.type?Object.assign({},e,{contents:an(e.contents),expandedStates:e.expandedStates?e.expandedStates.map(an):e.expandedStates}):e.contents?Object.assign({},e,{contents:an(e.contents)}):e}function sn(e){if("string"==typeof e)return JSON.stringify(e);if("line"===e.type)return e.literal?"literalline":e.hard?"hardline":e.soft?"softline":"line";if("break-parent"===e.type)return"breakParent";if("trim"===e.type)return"trim";if("concat"===e.type)return"["+e.parts.map(sn).join(", ")+"]";if("indent"===e.type)return"indent("+sn(e.contents)+")";if("align"===e.type)return e.n===-1/0?"dedentToRoot("+sn(e.contents)+")":e.n<0?"dedent("+sn(e.contents)+")":"root"===e.n.type?"markAsRoot("+sn(e.contents)+")":"align("+JSON.stringify(e.n)+", "+sn(e.contents)+")";if("if-break"===e.type)return"ifBreak("+sn(e.breakContents)+(e.flatContents?", "+sn(e.flatContents):"")+")";if("group"===e.type)return e.expandedStates?"conditionalGroup(["+e.expandedStates.map(sn).join(",")+"])":(e.break?"wrappedGroup":"group")+"("+sn(e.contents)+")";if("fill"===e.type)return"fill("+e.parts.map(sn).join(", ")+")";if("line-suffix"===e.type)return"lineSuffix("+sn(e.contents)+")";if("line-suffix-boundary"===e.type)return"lineSuffixBoundary";throw new Error("Unknown doc type "+e.type)}var cn={builders:ee,printer:Ht,utils:{isEmpty:function(e){return"string"==typeof e&&0===e.length},willBreak:function(e){return en(e,nn,!1)},isLineNext:function(e){return en(e,tn,!1)},traverseDoc:Qt,findInDoc:en,mapDoc:Zt,propagateBreaks:function(e){const t=new Set,n=[];Qt(e,(function(e){if("break-parent"===e.type&&rn(n),"group"===e.type){if(n.push(e),t.has(e))return!1;t.add(e)}}),(function(e){"group"===e.type&&n.pop().break&&rn(n)}),!0)},removeLines:function(e){return Zt(e,on)},stripTrailingHardline:function e(t,n=!1){if("concat"===t.type&&0!==t.parts.length){const r=n?function(e){let t,{parts:n}=e;for(let r=e.parts.length;r>0&&!t;r--)t=n[r-1];return"group"===t.type&&(n=t.contents.parts),n}(t):t.parts,o=r[r.length-1];if("concat"===o.type)return 2===o.parts.length&&o.parts[0].hard&&"break-parent"===o.parts[1].type?{type:"concat",parts:r.slice(0,-1)}:{type:"concat",parts:t.parts.slice(0,-1).concat(e(o))}}return t},normalizeParts:un,normalizeDoc:function(e){return Zt(e,(e=>e.parts?Object.assign({},e,{parts:un(e.parts)}):e))},replaceNewlinesWithLiterallines:function(e){return Zt(e,(e=>"string"==typeof e&&e.includes("\n")?Yt(e.split(/(\n)/g).map(((e,t)=>t%2==0?e:Xt))):e))}},debug:{printDocToDebug:e=>sn(an(e))}};const ln=()=>!1,pn=()=>"";var fn={existsSync:ln,readFileSync:pn},dn=Object.freeze({__proto__:null,existsSync:ln,readFileSync:pn,default:fn});function hn(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function gn(e,t){for(var n,r="",o=0,i=-1,u=0,a=0;a<=e.length;++a){if(a<e.length)n=e.charCodeAt(a);else{if(47===n)break;n=47}if(47===n){if(i===a-1||1===u);else if(i!==a-1&&2===u){if(r.length<2||2!==o||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var s=r.lastIndexOf("/");if(s!==r.length-1){-1===s?(r="",o=0):o=(r=r.slice(0,s)).length-1-r.lastIndexOf("/"),i=a,u=0;continue}}else if(2===r.length||1===r.length){r="",o=0,i=a,u=0;continue}t&&(r.length>0?r+="/..":r="..",o=2)}else r.length>0?r+="/"+e.slice(i+1,a):r=e.slice(i+1,a),o=a-i-1;i=a,u=0}else 46===n&&-1!==u?++u:u=-1}return r}var mn={resolve:function(){for(var e,t="",n=!1,r=arguments.length-1;r>=-1&&!n;r--){var o;r>=0?o=arguments[r]:(void 0===e&&(e=Oe.cwd()),o=e),hn(o),0!==o.length&&(t=o+"/"+t,n=47===o.charCodeAt(0))}return t=gn(t,!n),n?t.length>0?"/"+t:"/":t.length>0?t:"."},normalize:function(e){if(hn(e),0===e.length)return".";var t=47===e.charCodeAt(0),n=47===e.charCodeAt(e.length-1);return 0!==(e=gn(e,!t)).length||t||(e="."),e.length>0&&n&&(e+="/"),t?"/"+e:e},isAbsolute:function(e){return hn(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,t=0;t<arguments.length;++t){var n=arguments[t];hn(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":mn.normalize(e)},relative:function(e,t){if(hn(e),hn(t),e===t)return"";if((e=mn.resolve(e))===(t=mn.resolve(t)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var r=e.length,o=r-n,i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var u=t.length-i,a=o<u?o:u,s=-1,c=0;c<=a;++c){if(c===a){if(u>a){if(47===t.charCodeAt(i+c))return t.slice(i+c+1);if(0===c)return t.slice(i+c)}else o>a&&(47===e.charCodeAt(n+c)?s=c:0===c&&(s=0));break}var l=e.charCodeAt(n+c);if(l!==t.charCodeAt(i+c))break;47===l&&(s=c)}var p="";for(c=n+s+1;c<=r;++c)c!==r&&47!==e.charCodeAt(c)||(0===p.length?p+="..":p+="/..");return p.length>0?p+t.slice(i+s):(i+=s,47===t.charCodeAt(i)&&++i,t.slice(i))},_makeLong:function(e){return e},dirname:function(e){if(hn(e),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,o=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!o){r=i;break}}else o=!1;return-1===r?n?"/":".":n&&1===r?"//":e.slice(0,r)},basename:function(e,t){if(void 0!==t&&"string"!=typeof t)throw new TypeError('"ext" argument must be a string');hn(e);var n,r=0,o=-1,i=!0;if(void 0!==t&&t.length>0&&t.length<=e.length){if(t.length===e.length&&t===e)return"";var u=t.length-1,a=-1;for(n=e.length-1;n>=0;--n){var s=e.charCodeAt(n);if(47===s){if(!i){r=n+1;break}}else-1===a&&(i=!1,a=n+1),u>=0&&(s===t.charCodeAt(u)?-1==--u&&(o=n):(u=-1,o=a))}return r===o?o=a:-1===o&&(o=e.length),e.slice(r,o)}for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!i){r=n+1;break}}else-1===o&&(i=!1,o=n+1);return-1===o?"":e.slice(r,o)},extname:function(e){hn(e);for(var t=-1,n=0,r=-1,o=!0,i=0,u=e.length-1;u>=0;--u){var a=e.charCodeAt(u);if(47!==a)-1===r&&(o=!1,r=u+1),46===a?-1===t?t=u:1!==i&&(i=1):-1!==t&&(i=-1);else if(!o){n=u+1;break}}return-1===t||-1===r||0===i||1===i&&t===r-1&&t===n+1?"":e.slice(t,r)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var n=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+r:n+"/"+r:r}(0,e)},parse:function(e){hn(e);var t={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return t;var n,r=e.charCodeAt(0),o=47===r;o?(t.root="/",n=1):n=0;for(var i=-1,u=0,a=-1,s=!0,c=e.length-1,l=0;c>=n;--c)if(47!==(r=e.charCodeAt(c)))-1===a&&(s=!1,a=c+1),46===r?-1===i?i=c:1!==l&&(l=1):-1!==i&&(l=-1);else if(!s){u=c+1;break}return-1===i||-1===a||0===l||1===l&&i===a-1&&i===u+1?-1!==a&&(t.base=t.name=0===u&&o?e.slice(1,a):e.slice(u,a)):(0===u&&o?(t.name=e.slice(1,i),t.base=e.slice(1,a)):(t.name=e.slice(u,i),t.base=e.slice(u,a)),t.ext=e.slice(i,a)),u>0?t.dir=e.slice(0,u-1):o&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};mn.posix=mn;var yn=mn,Dn=Object.freeze(Object.assign(Object.create(null),yn,{default:yn,__moduleExports:yn})),vn=[],En=[],bn="undefined"!=typeof Uint8Array?Uint8Array:Array,Cn=!1;function An(){Cn=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,n=e.length;t<n;++t)vn[t]=e[t],En[e.charCodeAt(t)]=t;En["-".charCodeAt(0)]=62,En["_".charCodeAt(0)]=63}function Fn(e,t,n){for(var r,o,i=[],u=t;u<n;u+=3)r=(e[u]<<16)+(e[u+1]<<8)+e[u+2],i.push(vn[(o=r)>>18&63]+vn[o>>12&63]+vn[o>>6&63]+vn[63&o]);return i.join("")}function xn(e){var t;Cn||An();for(var n=e.length,r=n%3,o="",i=[],u=16383,a=0,s=n-r;a<s;a+=u)i.push(Fn(e,a,a+u>s?s:a+u));return 1===r?(t=e[n-1],o+=vn[t>>2],o+=vn[t<<4&63],o+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],o+=vn[t>>10],o+=vn[t>>4&63],o+=vn[t<<2&63],o+="="),i.push(o),i.join("")}function Sn(e,t,n,r,o){var i,u,a=8*o-r-1,s=(1<<a)-1,c=s>>1,l=-7,p=n?o-1:0,f=n?-1:1,d=e[t+p];for(p+=f,i=d&(1<<-l)-1,d>>=-l,l+=a;l>0;i=256*i+e[t+p],p+=f,l-=8);for(u=i&(1<<-l)-1,i>>=-l,l+=r;l>0;u=256*u+e[t+p],p+=f,l-=8);if(0===i)i=1-c;else{if(i===s)return u?NaN:1/0*(d?-1:1);u+=Math.pow(2,r),i-=c}return(d?-1:1)*u*Math.pow(2,i-r)}function wn(e,t,n,r,o,i){var u,a,s,c=8*i-o-1,l=(1<<c)-1,p=l>>1,f=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:i-1,h=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,u=l):(u=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-u))<1&&(u--,s*=2),(t+=u+p>=1?f/s:f*Math.pow(2,1-p))*s>=2&&(u++,s/=2),u+p>=l?(a=0,u=l):u+p>=1?(a=(t*s-1)*Math.pow(2,o),u+=p):(a=t*Math.pow(2,p-1)*Math.pow(2,o),u=0));o>=8;e[n+d]=255&a,d+=h,a/=256,o-=8);for(u=u<<o|a,c+=o;c>0;e[n+d]=255&u,d+=h,u/=256,c-=8);e[n+d-h]|=128*g}var Tn={}.toString,Bn=Array.isArray||function(e){return"[object Array]"==Tn.call(e)};function Nn(){return Pn.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function kn(e,t){if(Nn()<t)throw new RangeError("Invalid typed array length");return Pn.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=Pn.prototype:(null===e&&(e=new Pn(t)),e.length=t),e}function Pn(e,t,n){if(!(Pn.TYPED_ARRAY_SUPPORT||this instanceof Pn))return new Pn(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return In(this,e)}return On(this,e,t,n)}function On(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),Pn.TYPED_ARRAY_SUPPORT?(e=t).__proto__=Pn.prototype:e=Ln(e,t),e}(e,t,n,r):"string"==typeof t?function(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!Pn.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|Rn(t,n),o=(e=kn(e,r)).write(t,n);return o!==r&&(e=e.slice(0,o)),e}(e,t,n):function(e,t){if(jn(t)){var n=0|Mn(t.length);return 0===(e=kn(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?kn(e,0):Ln(e,t);if("Buffer"===t.type&&Bn(t.data))return Ln(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function _n(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function In(e,t){if(_n(t),e=kn(e,t<0?0:0|Mn(t)),!Pn.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function Ln(e,t){var n=t.length<0?0:0|Mn(t.length);e=kn(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function Mn(e){if(e>=Nn())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Nn().toString(16)+" bytes");return 0|e}function jn(e){return!(null==e||!e._isBuffer)}function Rn(e,t){if(jn(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return fr(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return dr(e).length;default:if(r)return fr(e).length;t=(""+t).toLowerCase(),r=!0}}function Vn(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return tr(this,t,n);case"utf8":case"utf-8":return Kn(this,t,n);case"ascii":return Zn(this,t,n);case"latin1":case"binary":return er(this,t,n);case"base64":return Yn(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return nr(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function qn(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function $n(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=Pn.from(t,r)),jn(t))return 0===t.length?-1:Wn(e,t,n,r,o);if("number"==typeof t)return t&=255,Pn.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):Wn(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function Wn(e,t,n,r,o){var i,u=1,a=e.length,s=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;u=2,a/=2,s/=2,n/=2}function c(e,t){return 1===u?e[t]:e.readUInt16BE(t*u)}if(o){var l=-1;for(i=n;i<a;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===s)return l*u}else-1!==l&&(i-=i-l),l=-1}else for(n+s>a&&(n=a-s),i=n;i>=0;i--){for(var p=!0,f=0;f<s;f++)if(c(e,i+f)!==c(t,f)){p=!1;break}if(p)return i}return-1}function Un(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");r>i/2&&(r=i/2);for(var u=0;u<r;++u){var a=parseInt(t.substr(2*u,2),16);if(isNaN(a))return u;e[n+u]=a}return u}function Jn(e,t,n,r){return hr(fr(t,e.length-n),e,n,r)}function Gn(e,t,n,r){return hr(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function zn(e,t,n,r){return Gn(e,t,n,r)}function Hn(e,t,n,r){return hr(dr(t),e,n,r)}function Xn(e,t,n,r){return hr(function(e,t){for(var n,r,o,i=[],u=0;u<e.length&&!((t-=2)<0);++u)r=(n=e.charCodeAt(u))>>8,o=n%256,i.push(o),i.push(r);return i}(t,e.length-n),e,n,r)}function Yn(e,t,n){return 0===t&&n===e.length?xn(e):xn(e.slice(t,n))}function Kn(e,t,n){n=Math.min(e.length,n);for(var r=[],o=t;o<n;){var i,u,a,s,c=e[o],l=null,p=c>239?4:c>223?3:c>191?2:1;if(o+p<=n)switch(p){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(s=(31&c)<<6|63&i)>127&&(l=s);break;case 3:i=e[o+1],u=e[o+2],128==(192&i)&&128==(192&u)&&(s=(15&c)<<12|(63&i)<<6|63&u)>2047&&(s<55296||s>57343)&&(l=s);break;case 4:i=e[o+1],u=e[o+2],a=e[o+3],128==(192&i)&&128==(192&u)&&128==(192&a)&&(s=(15&c)<<18|(63&i)<<12|(63&u)<<6|63&a)>65535&&s<1114112&&(l=s)}null===l?(l=65533,p=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),o+=p}return function(e){var t=e.length;if(t<=Qn)return String.fromCharCode.apply(String,e);for(var n="",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=Qn));return n}(r)}Pn.TYPED_ARRAY_SUPPORT=void 0===ce.TYPED_ARRAY_SUPPORT||ce.TYPED_ARRAY_SUPPORT,Pn.poolSize=8192,Pn._augment=function(e){return e.__proto__=Pn.prototype,e},Pn.from=function(e,t,n){return On(null,e,t,n)},Pn.TYPED_ARRAY_SUPPORT&&(Pn.prototype.__proto__=Uint8Array.prototype,Pn.__proto__=Uint8Array),Pn.alloc=function(e,t,n){return function(e,t,n,r){return _n(t),t<=0?kn(e,t):void 0!==n?"string"==typeof r?kn(e,t).fill(n,r):kn(e,t).fill(n):kn(e,t)}(null,e,t,n)},Pn.allocUnsafe=function(e){return In(null,e)},Pn.allocUnsafeSlow=function(e){return In(null,e)},Pn.isBuffer=function(e){return null!=e&&(!!e._isBuffer||gr(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&gr(e.slice(0,0))}(e))},Pn.compare=function(e,t){if(!jn(e)||!jn(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,o=0,i=Math.min(n,r);o<i;++o)if(e[o]!==t[o]){n=e[o],r=t[o];break}return n<r?-1:r<n?1:0},Pn.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Pn.concat=function(e,t){if(!Bn(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Pn.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=Pn.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var i=e[n];if(!jn(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,o),o+=i.length}return r},Pn.byteLength=Rn,Pn.prototype._isBuffer=!0,Pn.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)qn(this,t,t+1);return this},Pn.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)qn(this,t,t+3),qn(this,t+1,t+2);return this},Pn.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)qn(this,t,t+7),qn(this,t+1,t+6),qn(this,t+2,t+5),qn(this,t+3,t+4);return this},Pn.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Kn(this,0,e):Vn.apply(this,arguments)},Pn.prototype.equals=function(e){if(!jn(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Pn.compare(this,e)},Pn.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},Pn.prototype.compare=function(e,t,n,r,o){if(!jn(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(r>>>=0),u=(n>>>=0)-(t>>>=0),a=Math.min(i,u),s=this.slice(r,o),c=e.slice(t,n),l=0;l<a;++l)if(s[l]!==c[l]){i=s[l],u=c[l];break}return i<u?-1:u<i?1:0},Pn.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},Pn.prototype.indexOf=function(e,t,n){return $n(this,e,t,n,!0)},Pn.prototype.lastIndexOf=function(e,t,n){return $n(this,e,t,n,!1)},Pn.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return Un(this,e,t,n);case"utf8":case"utf-8":return Jn(this,e,t,n);case"ascii":return Gn(this,e,t,n);case"latin1":case"binary":return zn(this,e,t,n);case"base64":return Hn(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Xn(this,e,t,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},Pn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Qn=4096;function Zn(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(127&e[o]);return r}function er(e,t,n){var r="";n=Math.min(e.length,n);for(var o=t;o<n;++o)r+=String.fromCharCode(e[o]);return r}function tr(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=pr(e[i]);return o}function nr(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function rr(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function or(e,t,n,r,o,i){if(!jn(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function ir(e,t,n,r){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-n,2);o<i;++o)e[n+o]=(t&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function ur(e,t,n,r){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-n,4);o<i;++o)e[n+o]=t>>>8*(r?o:3-o)&255}function ar(e,t,n,r,o,i){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function sr(e,t,n,r,o){return o||ar(e,0,n,4),wn(e,t,n,r,23,4),n+4}function cr(e,t,n,r,o){return o||ar(e,0,n,8),wn(e,t,n,r,52,8),n+8}Pn.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),Pn.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=Pn.prototype;else{var o=t-e;n=new Pn(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e]}return n},Pn.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},Pn.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},Pn.prototype.readUInt8=function(e,t){return t||rr(e,1,this.length),this[e]},Pn.prototype.readUInt16LE=function(e,t){return t||rr(e,2,this.length),this[e]|this[e+1]<<8},Pn.prototype.readUInt16BE=function(e,t){return t||rr(e,2,this.length),this[e]<<8|this[e+1]},Pn.prototype.readUInt32LE=function(e,t){return t||rr(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Pn.prototype.readUInt32BE=function(e,t){return t||rr(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Pn.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},Pn.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||rr(e,t,this.length);for(var r=t,o=1,i=this[e+--r];r>0&&(o*=256);)i+=this[e+--r]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},Pn.prototype.readInt8=function(e,t){return t||rr(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Pn.prototype.readInt16LE=function(e,t){t||rr(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt16BE=function(e,t){t||rr(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt32LE=function(e,t){return t||rr(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Pn.prototype.readInt32BE=function(e,t){return t||rr(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Pn.prototype.readFloatLE=function(e,t){return t||rr(e,4,this.length),Sn(this,e,!0,23,4)},Pn.prototype.readFloatBE=function(e,t){return t||rr(e,4,this.length),Sn(this,e,!1,23,4)},Pn.prototype.readDoubleLE=function(e,t){return t||rr(e,8,this.length),Sn(this,e,!0,52,8)},Pn.prototype.readDoubleBE=function(e,t){return t||rr(e,8,this.length),Sn(this,e,!1,52,8)},Pn.prototype.writeUIntLE=function(e,t,n,r){e=+e,t|=0,n|=0,r||or(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},Pn.prototype.writeUIntBE=function(e,t,n,r){e=+e,t|=0,n|=0,r||or(this,e,t,n,Math.pow(2,8*n)-1,0);var o=n-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+n},Pn.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,1,255,0),Pn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},Pn.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,2,65535,0),Pn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):ir(this,e,t,!0),t+2},Pn.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,2,65535,0),Pn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):ir(this,e,t,!1),t+2},Pn.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,4,4294967295,0),Pn.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):ur(this,e,t,!0),t+4},Pn.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,4,4294967295,0),Pn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ur(this,e,t,!1),t+4},Pn.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);or(this,e,t,n,o-1,-o)}var i=0,u=1,a=0;for(this[t]=255&e;++i<n&&(u*=256);)e<0&&0===a&&0!==this[t+i-1]&&(a=1),this[t+i]=(e/u>>0)-a&255;return t+n},Pn.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);or(this,e,t,n,o-1,-o)}var i=n-1,u=1,a=0;for(this[t+i]=255&e;--i>=0&&(u*=256);)e<0&&0===a&&0!==this[t+i+1]&&(a=1),this[t+i]=(e/u>>0)-a&255;return t+n},Pn.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,1,127,-128),Pn.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},Pn.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,2,32767,-32768),Pn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):ir(this,e,t,!0),t+2},Pn.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,2,32767,-32768),Pn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):ir(this,e,t,!1),t+2},Pn.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,4,2147483647,-2147483648),Pn.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):ur(this,e,t,!0),t+4},Pn.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||or(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),Pn.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):ur(this,e,t,!1),t+4},Pn.prototype.writeFloatLE=function(e,t,n){return sr(this,e,t,!0,n)},Pn.prototype.writeFloatBE=function(e,t,n){return sr(this,e,t,!1,n)},Pn.prototype.writeDoubleLE=function(e,t,n){return cr(this,e,t,!0,n)},Pn.prototype.writeDoubleBE=function(e,t,n){return cr(this,e,t,!1,n)},Pn.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var o,i=r-n;if(this===e&&n<t&&t<r)for(o=i-1;o>=0;--o)e[o+t]=this[o+n];else if(i<1e3||!Pn.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+i),t);return i},Pn.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Pn.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var u=jn(e)?e:fr(new Pn(e,r).toString()),a=u.length;for(i=0;i<n-t;++i)this[i+t]=u[i%a]}return this};var lr=/[^+\/0-9A-Za-z-_]/g;function pr(e){return e<16?"0"+e.toString(16):e.toString(16)}function fr(e,t){var n;t=t||1/0;for(var r=e.length,o=null,i=[],u=0;u<r;++u){if((n=e.charCodeAt(u))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(u+1===r){(t-=3)>-1&&i.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&i.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;i.push(n)}else if(n<2048){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function dr(e){return function(e){var t,n,r,o,i,u;Cn||An();var a=e.length;if(a%4>0)throw new Error("Invalid string. Length must be a multiple of 4");i="="===e[a-2]?2:"="===e[a-1]?1:0,u=new bn(3*a/4-i),r=i>0?a-4:a;var s=0;for(t=0,n=0;t<r;t+=4,n+=3)o=En[e.charCodeAt(t)]<<18|En[e.charCodeAt(t+1)]<<12|En[e.charCodeAt(t+2)]<<6|En[e.charCodeAt(t+3)],u[s++]=o>>16&255,u[s++]=o>>8&255,u[s++]=255&o;return 2===i?(o=En[e.charCodeAt(t)]<<2|En[e.charCodeAt(t+1)]>>4,u[s++]=255&o):1===i&&(o=En[e.charCodeAt(t)]<<10|En[e.charCodeAt(t+1)]<<4|En[e.charCodeAt(t+2)]>>2,u[s++]=o>>8&255,u[s++]=255&o),u}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(lr,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function hr(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}function gr(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var mr=je(dn);class yr extends Error{}class Dr extends Error{}class vr extends Error{}var Er={ConfigError:yr,DebugError:Dr,UndefinedParserError:vr},br=function(e,t){return(br=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},Cr=function(){return(Cr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function Ar(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Fr(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),u=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)u.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return u}function xr(e){return this instanceof xr?(this.v=e,this):new xr(e)}var Sr=Object.freeze({__proto__:null,__extends:function(e,t){function n(){this.constructor=e}br(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)},get __assign(){return Cr},__rest:function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n},__decorate:function(e,t,n,r){var o,i=arguments.length,u=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(u=(i<3?o(u):i>3?o(t,n,u):o(t,n))||u);return i>3&&u&&Object.defineProperty(t,n,u),u},__param:function(e,t){return function(n,r){t(n,r,e)}},__metadata:function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__awaiter:function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function u(e){try{s(r.next(e))}catch(e){i(e)}}function a(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(u,a)}s((r=r.apply(e,t||[])).next())}))},__generator:function(e,t){var n,r,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,r=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!((o=(o=u.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=t.call(e,u)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},__createBinding:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]},__exportStar:function(e,t){for(var n in e)"default"===n||t.hasOwnProperty(n)||(t[n]=e[n])},__values:Ar,__read:Fr,__spread:function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(Fr(arguments[t]));return e},__spreadArrays:function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],u=0,a=i.length;u<a;u++,o++)r[o]=i[u];return r},__await:xr,__asyncGenerator:function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,o=n.apply(e,t||[]),i=[];return r={},u("next"),u("throw"),u("return"),r[Symbol.asyncIterator]=function(){return this},r;function u(e){o[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||a(e,t)}))})}function a(e,t){try{(n=o[e](t)).value instanceof xr?Promise.resolve(n.value.v).then(s,c):l(i[0][2],n)}catch(e){l(i[0][3],e)}var n}function s(e){a("next",e)}function c(e){a("throw",e)}function l(e,t){e(t),i.shift(),i.length&&a(i[0][0],i[0][1])}},__asyncDelegator:function(e){var t,n;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,o){t[r]=e[r]?function(t){return(n=!n)?{value:xr(e[r](t)),done:"return"===r}:o?o(t):t}:o}},__asyncValues:function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=Ar(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,o,(t=e[n](t)).done,t.value)}))}}},__makeTemplateObject:function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},__importStar:function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},__importDefault:function(e){return e&&e.__esModule?e:{default:e}},__classPrivateFieldGet:function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},__classPrivateFieldSet:function(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,n),n}}),wr=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.apiDescriptor={key:e=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e)?e:JSON.stringify(e),value(e){if(null===e||"object"!=typeof e)return JSON.stringify(e);if(Array.isArray(e))return"[".concat(e.map((e=>t.apiDescriptor.value(e))).join(", "),"]");const n=Object.keys(e);return 0===n.length?"{}":"{ ".concat(n.map((n=>"".concat(t.apiDescriptor.key(n),": ").concat(t.apiDescriptor.value(e[n])))).join(", ")," }")},pair:({key:e,value:n})=>t.apiDescriptor.value({[e]:n})}})),Tr=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(wr,t)})),Br=/[|\\{}()[\]^$+*?.]/g,Nr=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(Br,"\\$&")},kr={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Pr=Me((function(e){var t={};for(var n in kr)kr.hasOwnProperty(n)&&(t[kr[n]]=n);var r=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var o in r)if(r.hasOwnProperty(o)){if(!("channels"in r[o]))throw new Error("missing channels property: "+o);if(!("labels"in r[o]))throw new Error("missing channel labels property: "+o);if(r[o].labels.length!==r[o].channels)throw new Error("channel and label counts mismatch: "+o);var i=r[o].channels,u=r[o].labels;delete r[o].channels,delete r[o].labels,Object.defineProperty(r[o],"channels",{value:i}),Object.defineProperty(r[o],"labels",{value:u})}r.rgb.hsl=function(e){var t,n,r=e[0]/255,o=e[1]/255,i=e[2]/255,u=Math.min(r,o,i),a=Math.max(r,o,i),s=a-u;return a===u?t=0:r===a?t=(o-i)/s:o===a?t=2+(i-r)/s:i===a&&(t=4+(r-o)/s),(t=Math.min(60*t,360))<0&&(t+=360),n=(u+a)/2,[t,100*(a===u?0:n<=.5?s/(a+u):s/(2-a-u)),100*n]},r.rgb.hsv=function(e){var t,n,r,o,i,u=e[0]/255,a=e[1]/255,s=e[2]/255,c=Math.max(u,a,s),l=c-Math.min(u,a,s),p=function(e){return(c-e)/6/l+.5};return 0===l?o=i=0:(i=l/c,t=p(u),n=p(a),r=p(s),u===c?o=r-n:a===c?o=1/3+t-r:s===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},r.rgb.hwb=function(e){var t=e[0],n=e[1],o=e[2];return[r.rgb.hsl(e)[0],1/255*Math.min(t,Math.min(n,o))*100,100*(o=1-1/255*Math.max(t,Math.max(n,o)))]},r.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-o)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},r.rgb.keyword=function(e){var n=t[e];if(n)return n;var r,o,i,u=1/0;for(var a in kr)if(kr.hasOwnProperty(a)){var s=(o=e,i=kr[a],Math.pow(o[0]-i[0],2)+Math.pow(o[1]-i[1],2)+Math.pow(o[2]-i[2],2));s<u&&(u=s,r=a)}return r},r.keyword.rgb=function(e){return kr[e]},r.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},r.rgb.lab=function(e){var t=r.rgb.xyz(e),n=t[0],o=t[1],i=t[2];return o/=100,i/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116)-16,500*(n-o),200*(o-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},r.hsl.rgb=function(e){var t,n,r,o,i,u=e[0]/360,a=e[1]/100,s=e[2]/100;if(0===a)return[i=255*s,i,i];t=2*s-(n=s<.5?s*(1+a):s+a-s*a),o=[0,0,0];for(var c=0;c<3;c++)(r=u+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[c]=255*i;return o},r.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,o=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,o*=i<=1?i:2-i,[t,100*(0===r?2*o/(i+o):2*n/(r+n)),(r+n)/2*100]},r.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,o=Math.floor(t)%6,i=t-Math.floor(t),u=255*r*(1-n),a=255*r*(1-n*i),s=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return[r,s,u];case 1:return[a,r,u];case 2:return[u,r,s];case 3:return[u,a,r];case 4:return[s,u,r];case 5:return[r,u,a]}},r.hsv.hsl=function(e){var t,n,r,o=e[0],i=e[1]/100,u=e[2]/100,a=Math.max(u,.01);return r=(2-i)*u,n=i*a,[o,100*(n=(n/=(t=(2-i)*a)<=1?t:2-t)||0),100*(r/=2)]},r.hwb.rgb=function(e){var t,n,r,o,i,u,a,s=e[0]/360,c=e[1]/100,l=e[2]/100,p=c+l;switch(p>1&&(c/=p,l/=p),r=6*s-(t=Math.floor(6*s)),0!=(1&t)&&(r=1-r),o=c+r*((n=1-l)-c),t){default:case 6:case 0:i=n,u=o,a=c;break;case 1:i=o,u=n,a=c;break;case 2:i=c,u=n,a=o;break;case 3:i=c,u=o,a=n;break;case 4:i=o,u=c,a=n;break;case 5:i=n,u=c,a=o}return[255*i,255*u,255*a]},r.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},r.xyz.rgb=function(e){var t,n,r,o=e[0]/100,i=e[1]/100,u=e[2]/100;return n=-.9689*o+1.8758*i+.0415*u,r=.0557*o+-.204*i+1.057*u,t=(t=3.2406*o+-1.5372*i+-.4986*u)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},r.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},r.lab.xyz=function(e){var t,n,r,o=e[0];t=e[1]/500+(n=(o+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),u=Math.pow(t,3),a=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=u>.008856?u:(t-16/116)/7.787,r=a>.008856?a:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},r.lab.lch=function(e){var t,n=e[0],r=e[1],o=e[2];return(t=360*Math.atan2(o,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+o*o),t]},r.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},r.rgb.ansi16=function(e){var t=e[0],n=e[1],o=e[2],i=1 in arguments?arguments[1]:r.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var u=30+(Math.round(o/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===i&&(u+=60),u},r.hsv.ansi16=function(e){return r.rgb.ansi16(r.hsv.rgb(e),e[2])},r.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},r.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},r.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},r.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},r.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},r.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255,i=Math.max(Math.max(n,r),o),u=Math.min(Math.min(n,r),o),a=i-u;return t=a<=0?0:i===n?(r-o)/a%6:i===r?2+(o-n)/a:4+(n-r)/a+4,t/=6,[360*(t%=1),100*a,100*(a<1?u/(1-a):0)]},r.hsl.hcg=function(e){var t,n=e[1]/100,r=e[2]/100,o=0;return(t=r<.5?2*n*r:2*n*(1-r))<1&&(o=(r-.5*t)/(1-t)),[e[0],100*t,100*o]},r.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},r.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var o,i=[0,0,0],u=t%1*6,a=u%1,s=1-a;switch(Math.floor(u)){case 0:i[0]=1,i[1]=a,i[2]=0;break;case 1:i[0]=s,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=a;break;case 3:i[0]=0,i[1]=s,i[2]=1;break;case 4:i[0]=a,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=s}return o=(1-n)*r,[255*(n*i[0]+o),255*(n*i[1]+o),255*(n*i[2]+o)]},r.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},r.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},r.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},r.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},r.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},r.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},r.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},r.gray.hsl=r.gray.hsv=function(e){return[0,0,e[0]]},r.gray.hwb=function(e){return[0,100,e[0]]},r.gray.cmyk=function(e){return[0,0,0,e[0]]},r.gray.lab=function(e){return[e[0],0,0]},r.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},r.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));function Or(e,t){return function(n){return t(e(n))}}function _r(e,t){for(var n=[t[e].parent,e],r=Pr[t[e].parent][e],o=t[e].parent;t[o].parent;)n.unshift(t[o].parent),r=Or(Pr[t[o].parent][o],r),o=t[o].parent;return r.conversion=n,r}var Ir={};Object.keys(Pr).forEach((function(e){Ir[e]={},Object.defineProperty(Ir[e],"channels",{value:Pr[e].channels}),Object.defineProperty(Ir[e],"labels",{value:Pr[e].labels});var t=function(e){for(var t=function(e){var t=function(){for(var e={},t=Object.keys(Pr),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),o=Object.keys(Pr[r]),i=o.length,u=0;u<i;u++){var a=o[u],s=t[a];-1===s.distance&&(s.distance=t[r].distance+1,s.parent=r,n.unshift(a))}return t}(e),n={},r=Object.keys(t),o=r.length,i=0;i<o;i++){var u=r[i];null!==t[u].parent&&(n[u]=_r(u,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];Ir[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,o=0;o<r;o++)n[o]=Math.round(n[o]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),Ir[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var Lr=Ir,Mr=Me((function(e){const t=(e,t)=>function(){const n=e.apply(Lr,arguments);return"[".concat(n+t,"m")},n=(e,t)=>function(){const n=e.apply(Lr,arguments);return"[".concat(38+t,";5;").concat(n,"m")},r=(e,t)=>function(){const n=e.apply(Lr,arguments);return"[".concat(38+t,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,o={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};o.color.grey=o.color.gray;for(const t of Object.keys(o)){const n=o[t];for(const t of Object.keys(n)){const r=n[t];o[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=o[t],e.set(r[0],r[1])}Object.defineProperty(o,t,{value:n,enumerable:!1}),Object.defineProperty(o,"codes",{value:e,enumerable:!1})}const i=e=>e,u=(e,t,n)=>[e,t,n];o.color.close="[39m",o.bgColor.close="[49m",o.color.ansi={ansi:t(i,0)},o.color.ansi256={ansi256:n(i,0)},o.color.ansi16m={rgb:r(u,0)},o.bgColor.ansi={ansi:t(i,10)},o.bgColor.ansi256={ansi256:n(i,10)},o.bgColor.ansi16m={rgb:r(u,10)};for(let e of Object.keys(Lr)){if("object"!=typeof Lr[e])continue;const i=Lr[e];"ansi16"===e&&(e="ansi"),"ansi16"in i&&(o.color.ansi[e]=t(i.ansi16,0),o.bgColor.ansi[e]=t(i.ansi16,10)),"ansi256"in i&&(o.color.ansi256[e]=n(i.ansi256,0),o.bgColor.ansi256[e]=n(i.ansi256,10)),"rgb"in i&&(o.color.ansi16m[e]=r(i.rgb,0),o.bgColor.ansi16m[e]=r(i.rgb,10))}return o}})})),jr=(e,t)=>{t=t||Oe.argv;const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),o=t.indexOf("--");return-1!==r&&(-1===o||r<o)},Rr=je(Object.freeze({__proto__:null,default:{EOL:"\n",platform:()=>"browser",cpus:()=>[{model:"Prettier"}]}}));const Vr=Oe.env;let qr;function $r(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===qr)return 0;if(jr("color=16m")||jr("color=full")||jr("color=truecolor"))return 3;if(jr("color=256"))return 2;if(e&&!e.isTTY&&!0!==qr)return 0;const t=qr?1:0;if("win32"===Oe.platform){const e=Rr.release().split(".");return Number(Oe.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in Vr)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in Vr))||"codeship"===Vr.CI_NAME?1:t;if("TEAMCITY_VERSION"in Vr)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Vr.TEAMCITY_VERSION)?1:0;if("truecolor"===Vr.COLORTERM)return 3;if("TERM_PROGRAM"in Vr){const e=parseInt((Vr.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(Vr.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(Vr.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(Vr.TERM)||"COLORTERM"in Vr?1:(Vr.TERM,t)}(e))}jr("no-color")||jr("no-colors")||jr("color=false")?qr=!1:(jr("color")||jr("colors")||jr("color=true")||jr("color=always"))&&(qr=!0),"FORCE_COLOR"in Vr&&(qr=0===Vr.FORCE_COLOR.length||0!==parseInt(Vr.FORCE_COLOR,10));var Wr={supportsColor:$r,stdout:$r(Oe.stdout),stderr:$r(Oe.stderr)};const Ur=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,Jr=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Gr=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,zr=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Hr=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Xr(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Hr.get(e)||e}function Yr(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r)if(isNaN(t)){if(!(o=t.match(Gr)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(zr,((e,t,n)=>t?Xr(t):n)))}else n.push(Number(t));return n}function Kr(e){Jr.lastIndex=0;const t=[];let n;for(;null!==(n=Jr.exec(e));){const e=n[1];if(n[2]){const r=Yr(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function Qr(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e]}return r}var Zr=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(Ur,((t,i,u,a,s,c)=>{if(i)o.push(Xr(i));else if(a){const t=o.join("");o=[],r.push(0===n.length?t:Qr(e,n)(t)),n.push({inverse:u,styles:Kr(a)})}else if(s){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Qr(e,n)(o.join(""))),o=[],n.pop()}else o.push(c)})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")},eo=Me((function(e){const t=Wr.stdout,n="win32"===Oe.platform&&!(Oe.env.TERM||"").toLowerCase().startsWith("xterm"),r=["ansi","ansi","ansi256","ansi16m"],o=new Set(["gray"]),i=Object.create(null);function u(e,n){n=n||{};const r=t?t.level:0;e.level=void 0===n.level?r:n.level,e.enabled="enabled"in n?n.enabled:e.level>0}function a(e){if(!this||!(this instanceof a)||this.template){const t={};return u(t,e),t.template=function(){const e=[].slice.call(arguments);return p.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,a.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=a,t.template}u(this,e)}n&&(Mr.blue.open="[94m");for(const e of Object.keys(Mr))Mr[e].closeRe=new RegExp(Nr(Mr[e].close),"g"),i[e]={get(){const t=Mr[e];return c.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};i.visible={get(){return c.call(this,this._styles||[],!0,"visible")}},Mr.color.closeRe=new RegExp(Nr(Mr.color.close),"g");for(const e of Object.keys(Mr.color.ansi))o.has(e)||(i[e]={get(){const t=this.level;return function(){const n={open:Mr.color[r[t]][e].apply(null,arguments),close:Mr.color.close,closeRe:Mr.color.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});Mr.bgColor.closeRe=new RegExp(Nr(Mr.bgColor.close),"g");for(const e of Object.keys(Mr.bgColor.ansi))o.has(e)||(i["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const n={open:Mr.bgColor[r[t]][e].apply(null,arguments),close:Mr.bgColor.close,closeRe:Mr.bgColor.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});const s=Object.defineProperties((()=>{}),i);function c(e,t,n){const r=function(){return l.apply(r,arguments)};r._styles=e,r._empty=t;const o=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>o.level,set(e){o.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>o.enabled,set(e){o.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=s,r}function l(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return"";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const o=Mr.dim.open;n&&this.hasGrey&&(Mr.dim.open="");for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return Mr.dim.open=o,r}function p(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return Zr(e,r.join(""))}Object.defineProperties(a.prototype,i),e.exports=a(),e.exports.supportsColor=t,e.exports.default=e.exports})),to=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.commonDeprecatedHandler=(e,t,{descriptor:n})=>{const r=["".concat(eo.default.yellow("string"==typeof e?n.key(e):n.pair(e))," is deprecated")];return t&&r.push("we now treat it as ".concat(eo.default.blue("string"==typeof t?n.key(t):n.pair(t)))),r.join("; ")+"."}})),no=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(to,t)})),ro=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.commonInvalidHandler=(e,t,n)=>["Invalid ".concat(eo.default.red(n.descriptor.key(e))," value."),"Expected ".concat(eo.default.blue(n.schemas[e].expected(n)),","),"but received ".concat(eo.default.red(n.descriptor.value(t)),".")].join(" ")})),oo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(ro,t)})),io=[],uo=[],ao=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.levenUnknownHandler=(e,t,{descriptor:n,logger:r,schemas:o})=>{const i=["Ignored unknown option ".concat(eo.default.yellow(n.pair({key:e,value:t})),".")],u=Object.keys(o).sort().find((t=>function(e,t){if(e===t)return 0;var n=e;e.length>t.length&&(e=t,t=n);var r=e.length,o=t.length;if(0===r)return o;if(0===o)return r;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-o);)r--,o--;if(0===r)return o;for(var i,u,a,s,c=0;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(o-=c,0==(r-=c))return o;for(var l=0,p=0;l<r;)uo[c+l]=e.charCodeAt(c+l),io[l]=++l;for(;p<o;)for(i=t.charCodeAt(c+p),a=p++,u=p,l=0;l<r;l++)s=i===uo[c+l]?a:a+1,a=io[l],u=io[l]=a>u?s>u?u+1:s:s>a?a+1:s;return u}(e,t)<3));u&&i.push("Did you mean ".concat(eo.default.blue(n.key(u)),"?")),r.warn(i.join(" "))}})),so=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(ao,t)})),co=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(no,t),Sr.__exportStar(oo,t),Sr.__exportStar(so,t)})),lo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=["default","expected","validate","deprecated","forward","redirect","overlap","preprocess","postprocess"];function r(e,t){const r=new e(t),u=Object.create(r);for(const e of n)e in t&&(u[e]=i(t[e],r,o.prototype[e].length));return u}t.createSchema=r;class o{constructor(e){this.name=e.name}static create(e){return r(this,e)}default(e){}expected(e){return"nothing"}validate(e,t){return!1}deprecated(e,t){return!1}forward(e,t){}redirect(e,t){}overlap(e,t,n){return e}preprocess(e,t){return e}postprocess(e,t){return e}}function i(e,t,n){return"function"==typeof e?(...r)=>e(...r.slice(0,n-1),t,...r.slice(n-1)):()=>e}t.Schema=o})),po=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{constructor(e){super(e),this._sourceName=e.sourceName}expected(e){return e.schemas[this._sourceName].expected(e)}validate(e,t){return t.schemas[this._sourceName].validate(e,t)}redirect(e,t){return this._sourceName}}t.AliasSchema=n})),fo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{expected(){return"anything"}validate(){return!0}}t.AnySchema=n})),ho=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{constructor(e){var{valueSchema:t,name:n=t.name}=e,r=Sr.__rest(e,["valueSchema","name"]);super(Object.assign({},r,{name:n})),this._valueSchema=t}expected(e){return"an array of ".concat(this._valueSchema.expected(e))}validate(e,t){if(!Array.isArray(e))return!1;const n=[];for(const r of e){const e=t.normalizeValidateResult(this._valueSchema.validate(r,t),r);!0!==e&&n.push(e.value)}return 0===n.length||{value:n}}deprecated(e,t){const n=[];for(const r of e){const e=t.normalizeDeprecatedResult(this._valueSchema.deprecated(r,t),r);!1!==e&&n.push(...e.map((({value:e})=>({value:[e]}))))}return n}forward(e,t){const n=[];for(const o of e){const e=t.normalizeForwardResult(this._valueSchema.forward(o,t),o);n.push(...e.map(r))}return n}redirect(e,t){const n=[],o=[];for(const i of e){const e=t.normalizeRedirectResult(this._valueSchema.redirect(i,t),i);"remain"in e&&n.push(e.remain),o.push(...e.redirect.map(r))}return 0===n.length?{redirect:o}:{redirect:o,remain:n}}overlap(e,t){return e.concat(t)}}function r({from:e,to:t}){return{from:[e],to:t}}t.ArraySchema=n})),go=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{expected(){return"true or false"}validate(e){return"boolean"==typeof e}}t.BooleanSchema=n})),mo=Me((function(e,t){function n(e,t){return"string"==typeof e||"key"in e?{from:t,to:e}:"from"in e?{from:e.from,to:e.to}:{from:t,to:e.to}}function r(e,t){return void 0===e?[]:Array.isArray(e)?e.map((e=>n(e,t))):[n(e,t)]}Object.defineProperty(t,"__esModule",{value:!0}),t.recordFromArray=function(e,t){const n=Object.create(null);for(const r of e){const e=r[t];if(n[e])throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n[e]=r}return n},t.mapFromArray=function(e,t){const n=new Map;for(const r of e){const e=r[t];if(n.has(e))throw new Error("Duplicate ".concat(t," ").concat(JSON.stringify(e)));n.set(e,r)}return n},t.createAutoChecklist=function(){const e=Object.create(null);return t=>{const n=JSON.stringify(t);return!!e[n]||(e[n]=!0,!1)}},t.partition=function(e,t){const n=[],r=[];for(const o of e)t(o)?n.push(o):r.push(o);return[n,r]},t.isInt=function(e){return e===Math.floor(e)},t.comparePrimitive=function(e,t){if(e===t)return 0;const n=typeof e,r=typeof t,o=["undefined","object","boolean","number","string"];return n!==r?o.indexOf(n)-o.indexOf(r):"string"!==n?Number(e)-Number(t):e.localeCompare(t)},t.normalizeDefaultResult=function(e){return void 0===e?{}:e},t.normalizeValidateResult=function(e,t){return!0===e||(!1===e?{value:t}:e)},t.normalizeDeprecatedResult=function(e,t,n=!1){return!1!==e&&(!0===e?!!n||[{value:t}]:"value"in e?[e]:0!==e.length&&e)},t.normalizeTransferResult=n,t.normalizeForwardResult=r,t.normalizeRedirectResult=function(e,t){const n=r("object"==typeof e&&"redirect"in e?e.redirect:e,t);return 0===n.length?{remain:t,redirect:n}:"object"==typeof e&&"remain"in e?{remain:e.remain,redirect:n}:{redirect:n}}})),yo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{constructor(e){super(e),this._choices=mo.mapFromArray(e.choices.map((e=>e&&"object"==typeof e?e:{value:e})),"value")}expected({descriptor:e}){const t=Array.from(this._choices.keys()).map((e=>this._choices.get(e))).filter((e=>!e.deprecated)).map((e=>e.value)).sort(mo.comparePrimitive).map(e.value),n=t.slice(0,-2),r=t.slice(-2);return n.concat(r.join(" or ")).join(", ")}validate(e){return this._choices.has(e)}deprecated(e){const t=this._choices.get(e);return!(!t||!t.deprecated)&&{value:e}}forward(e){const t=this._choices.get(e);return t?t.forward:void 0}redirect(e){const t=this._choices.get(e);return t?t.redirect:void 0}}t.ChoiceSchema=n})),Do=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{expected(){return"a number"}validate(e,t){return"number"==typeof e}}t.NumberSchema=n})),vo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends Do.NumberSchema{expected(){return"an integer"}validate(e,t){return!0===t.normalizeValidateResult(super.validate(e,t),e)&&mo.isInt(e)}}t.IntegerSchema=n})),Eo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n extends lo.Schema{expected(){return"a string"}validate(e){return"string"==typeof e}}t.StringSchema=n})),bo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(po,t),Sr.__exportStar(fo,t),Sr.__exportStar(ho,t),Sr.__exportStar(go,t),Sr.__exportStar(yo,t),Sr.__exportStar(vo,t),Sr.__exportStar(Do,t),Sr.__exportStar(Eo,t)})),Co=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultDescriptor=wr.apiDescriptor,t.defaultUnknownHandler=ao.levenUnknownHandler,t.defaultInvalidHandler=oo.commonInvalidHandler,t.defaultDeprecatedHandler=to.commonDeprecatedHandler})),Ao=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.normalize=(e,t,r)=>new n(t,r).normalize(e);class n{constructor(e,t){const{logger:n=console,descriptor:r=Co.defaultDescriptor,unknown:o=Co.defaultUnknownHandler,invalid:i=Co.defaultInvalidHandler,deprecated:u=Co.defaultDeprecatedHandler}=t||{};this._utils={descriptor:r,logger:n||{warn:()=>{}},schemas:mo.recordFromArray(e,"name"),normalizeDefaultResult:mo.normalizeDefaultResult,normalizeDeprecatedResult:mo.normalizeDeprecatedResult,normalizeForwardResult:mo.normalizeForwardResult,normalizeRedirectResult:mo.normalizeRedirectResult,normalizeValidateResult:mo.normalizeValidateResult},this._unknownHandler=o,this._invalidHandler=i,this._deprecatedHandler=u,this.cleanHistory()}cleanHistory(){this._hasDeprecationWarned=mo.createAutoChecklist()}normalize(e){const t={},n=[e],r=()=>{for(;0!==n.length;){const e=n.shift(),r=this._applyNormalization(e,t);n.push(...r)}};r();for(const e of Object.keys(this._utils.schemas)){const r=this._utils.schemas[e];if(!(e in t)){const t=mo.normalizeDefaultResult(r.default(this._utils));"value"in t&&n.push({[e]:t.value})}}r();for(const e of Object.keys(this._utils.schemas)){const n=this._utils.schemas[e];e in t&&(t[e]=n.postprocess(t[e],this._utils))}return t}_applyNormalization(e,t){const n=[],[r,o]=mo.partition(Object.keys(e),(e=>e in this._utils.schemas));for(const o of r){const r=this._utils.schemas[o],i=r.preprocess(e[o],this._utils),u=mo.normalizeValidateResult(r.validate(i,this._utils),i);if(!0!==u){const{value:e}=u,t=this._invalidHandler(o,e,this._utils);throw"string"==typeof t?new Error(t):t}const a=({from:e,to:t})=>{n.push("string"==typeof t?{[t]:e}:{[t.key]:t.value})},s=({value:e,redirectTo:t})=>{const n=mo.normalizeDeprecatedResult(r.deprecated(e,this._utils),i,!0);if(!1!==n)if(!0===n)this._hasDeprecationWarned(o)||this._utils.logger.warn(this._deprecatedHandler(o,t,this._utils));else for(const{value:e}of n){const n={key:o,value:e};if(!this._hasDeprecationWarned(n)){const r="string"==typeof t?{key:t,value:e}:t;this._utils.logger.warn(this._deprecatedHandler(n,r,this._utils))}}};mo.normalizeForwardResult(r.forward(i,this._utils),i).forEach(a);const c=mo.normalizeRedirectResult(r.redirect(i,this._utils),i);if(c.redirect.forEach(a),"remain"in c){const e=c.remain;t[o]=o in t?r.overlap(t[o],e,this._utils):e,s({value:e})}for(const{from:e,to:t}of c.redirect)s({value:e,redirectTo:t})}for(const r of o){const o=e[r],i=this._unknownHandler(r,o,this._utils);if(i)for(const e of Object.keys(i)){const r={[e]:i[e]};e in this._utils.schemas?n.push(r):Object.assign(t,r)}}return n}}t.Normalizer=n})),Fo=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Sr.__exportStar(Tr,t),Sr.__exportStar(co,t),Sr.__exportStar(bo,t),Sr.__exportStar(Ao,t),Sr.__exportStar(lo,t)}));const xo=[],So=[],wo=(e,t)=>{if(e===t)return 0;const n=e;e.length>t.length&&(e=t,t=n);let r=e.length,o=t.length;for(;r>0&&e.charCodeAt(~-r)===t.charCodeAt(~-o);)r--,o--;let i,u,a,s,c=0;for(;c<r&&e.charCodeAt(c)===t.charCodeAt(c);)c++;if(r-=c,o-=c,0===r)return o;let l=0,p=0;for(;l<r;)So[l]=e.charCodeAt(c+l),xo[l]=++l;for(;p<o;)for(i=t.charCodeAt(c+p),a=p++,u=p,l=0;l<r;l++)s=i===So[l]?a:a+1,a=xo[l],u=xo[l]=a>u?s>u?u+1:s:s>a?a+1:s;return u};var To=wo,Bo=wo;To.default=Bo;var No={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const ko={};for(const e of Object.keys(No))ko[No[e]]=e;const Po={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var Oo=Po;for(const e of Object.keys(Po)){if(!("channels"in Po[e]))throw new Error("missing channels property: "+e);if(!("labels"in Po[e]))throw new Error("missing channel labels property: "+e);if(Po[e].labels.length!==Po[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:t,labels:n}=Po[e];delete Po[e].channels,delete Po[e].labels,Object.defineProperty(Po[e],"channels",{value:t}),Object.defineProperty(Po[e],"labels",{value:n})}function _o(e,t){return function(n){return t(e(n))}}function Io(e,t){const n=[t[e].parent,e];let r=Oo[t[e].parent][e],o=t[e].parent;for(;t[o].parent;)n.unshift(t[o].parent),r=_o(Oo[t[o].parent][o],r),o=t[o].parent;return r.conversion=n,r}Po.rgb.hsl=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.min(t,n,r),i=Math.max(t,n,r),u=i-o;let a,s;i===o?a=0:t===i?a=(n-r)/u:n===i?a=2+(r-t)/u:r===i&&(a=4+(t-n)/u),a=Math.min(60*a,360),a<0&&(a+=360);const c=(o+i)/2;return s=i===o?0:c<=.5?u/(i+o):u/(2-i-o),[a,100*s,100*c]},Po.rgb.hsv=function(e){let t,n,r,o,i;const u=e[0]/255,a=e[1]/255,s=e[2]/255,c=Math.max(u,a,s),l=c-Math.min(u,a,s),p=function(e){return(c-e)/6/l+.5};return 0===l?(o=0,i=0):(i=l/c,t=p(u),n=p(a),r=p(s),u===c?o=r-n:a===c?o=1/3+t-r:s===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},Po.rgb.hwb=function(e){const t=e[0],n=e[1];let r=e[2];const o=Po.rgb.hsl(e)[0],i=1/255*Math.min(t,Math.min(n,r));return r=1-1/255*Math.max(t,Math.max(n,r)),[o,100*i,100*r]},Po.rgb.cmyk=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.min(1-t,1-n,1-r);return[100*((1-t-o)/(1-o)||0),100*((1-n-o)/(1-o)||0),100*((1-r-o)/(1-o)||0),100*o]},Po.rgb.keyword=function(e){const t=ko[e];if(t)return t;let n,r=1/0;for(const t of Object.keys(No)){const u=(i=No[t],((o=e)[0]-i[0])**2+(o[1]-i[1])**2+(o[2]-i[2])**2);u<r&&(r=u,n=t)}var o,i;return n},Po.keyword.rgb=function(e){return No[e]},Po.rgb.xyz=function(e){let t=e[0]/255,n=e[1]/255,r=e[2]/255;return t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,n=n>.04045?((n+.055)/1.055)**2.4:n/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,[100*(.4124*t+.3576*n+.1805*r),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},Po.rgb.lab=function(e){const t=Po.rgb.xyz(e);let n=t[0],r=t[1],o=t[2];return n/=95.047,r/=100,o/=108.883,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,o=o>.008856?o**(1/3):7.787*o+16/116,[116*r-16,500*(n-r),200*(r-o)]},Po.hsl.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;let o,i,u;if(0===n)return u=255*r,[u,u,u];o=r<.5?r*(1+n):r+n-r*n;const a=2*r-o,s=[0,0,0];for(let e=0;e<3;e++)i=t+1/3*-(e-1),i<0&&i++,i>1&&i--,u=6*i<1?a+6*(o-a)*i:2*i<1?o:3*i<2?a+(o-a)*(2/3-i)*6:a,s[e]=255*u;return s},Po.hsl.hsv=function(e){const t=e[0];let n=e[1]/100,r=e[2]/100,o=n;const i=Math.max(r,.01);return r*=2,n*=r<=1?r:2-r,o*=i<=1?i:2-i,[t,100*(0===r?2*o/(i+o):2*n/(r+n)),(r+n)/2*100]},Po.hsv.rgb=function(e){const t=e[0]/60,n=e[1]/100;let r=e[2]/100;const o=Math.floor(t)%6,i=t-Math.floor(t),u=255*r*(1-n),a=255*r*(1-n*i),s=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return[r,s,u];case 1:return[a,r,u];case 2:return[u,r,s];case 3:return[u,a,r];case 4:return[s,u,r];case 5:return[r,u,a]}},Po.hsv.hsl=function(e){const t=e[0],n=e[1]/100,r=e[2]/100,o=Math.max(r,.01);let i,u;u=(2-n)*r;const a=(2-n)*o;return i=n*o,i/=a<=1?a:2-a,i=i||0,u/=2,[t,100*i,100*u]},Po.hwb.rgb=function(e){const t=e[0]/360;let n=e[1]/100,r=e[2]/100;const o=n+r;let i;o>1&&(n/=o,r/=o);const u=Math.floor(6*t),a=1-r;i=6*t-u,0!=(1&u)&&(i=1-i);const s=n+i*(a-n);let c,l,p;switch(u){default:case 6:case 0:c=a,l=s,p=n;break;case 1:c=s,l=a,p=n;break;case 2:c=n,l=a,p=s;break;case 3:c=n,l=s,p=a;break;case 4:c=s,l=n,p=a;break;case 5:c=a,l=n,p=s}return[255*c,255*l,255*p]},Po.cmyk.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},Po.xyz.rgb=function(e){const t=e[0]/100,n=e[1]/100,r=e[2]/100;let o,i,u;return o=3.2406*t+-1.5372*n+-.4986*r,i=-.9689*t+1.8758*n+.0415*r,u=.0557*t+-.204*n+1.057*r,o=o>.0031308?1.055*o**(1/2.4)-.055:12.92*o,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,u=u>.0031308?1.055*u**(1/2.4)-.055:12.92*u,o=Math.min(Math.max(0,o),1),i=Math.min(Math.max(0,i),1),u=Math.min(Math.max(0,u),1),[255*o,255*i,255*u]},Po.xyz.lab=function(e){let t=e[0],n=e[1],r=e[2];return t/=95.047,n/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,[116*n-16,500*(t-n),200*(n-r)]},Po.lab.xyz=function(e){let t,n,r;n=(e[0]+16)/116,t=e[1]/500+n,r=n-e[2]/200;const o=n**3,i=t**3,u=r**3;return n=o>.008856?o:(n-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,r=u>.008856?u:(r-16/116)/7.787,t*=95.047,n*=100,r*=108.883,[t,n,r]},Po.lab.lch=function(e){const t=e[0],n=e[1],r=e[2];let o;return o=360*Math.atan2(r,n)/2/Math.PI,o<0&&(o+=360),[t,Math.sqrt(n*n+r*r),o]},Po.lch.lab=function(e){const t=e[0],n=e[1],r=e[2]/360*2*Math.PI;return[t,n*Math.cos(r),n*Math.sin(r)]},Po.rgb.ansi16=function(e,t=null){const[n,r,o]=e;let i=null===t?Po.rgb.hsv(e)[2]:t;if(i=Math.round(i/50),0===i)return 30;let u=30+(Math.round(o/255)<<2|Math.round(r/255)<<1|Math.round(n/255));return 2===i&&(u+=60),u},Po.hsv.ansi16=function(e){return Po.rgb.ansi16(Po.hsv.rgb(e),e[2])},Po.rgb.ansi256=function(e){const t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},Po.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},Po.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return[t,t,t]}let t;return e-=16,[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},Po.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},Po.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let n=t[0];3===t[0].length&&(n=n.split("").map((e=>e+e)).join(""));const r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},Po.rgb.hcg=function(e){const t=e[0]/255,n=e[1]/255,r=e[2]/255,o=Math.max(Math.max(t,n),r),i=Math.min(Math.min(t,n),r),u=o-i;let a,s;return a=u<1?i/(1-u):0,s=u<=0?0:o===t?(n-r)/u%6:o===n?2+(r-t)/u:4+(t-n)/u,s/=6,s%=1,[360*s,100*u,100*a]},Po.hsl.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=n<.5?2*t*n:2*t*(1-n);let o=0;return r<1&&(o=(n-.5*r)/(1-r)),[e[0],100*r,100*o]},Po.hsv.hcg=function(e){const t=e[1]/100,n=e[2]/100,r=t*n;let o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},Po.hcg.rgb=function(e){const t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];const o=[0,0,0],i=t%1*6,u=i%1,a=1-u;let s=0;switch(Math.floor(i)){case 0:o[0]=1,o[1]=u,o[2]=0;break;case 1:o[0]=a,o[1]=1,o[2]=0;break;case 2:o[0]=0,o[1]=1,o[2]=u;break;case 3:o[0]=0,o[1]=a,o[2]=1;break;case 4:o[0]=u,o[1]=0,o[2]=1;break;default:o[0]=1,o[1]=0,o[2]=a}return s=(1-n)*r,[255*(n*o[0]+s),255*(n*o[1]+s),255*(n*o[2]+s)]},Po.hcg.hsv=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);let r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},Po.hcg.hsl=function(e){const t=e[1]/100,n=e[2]/100*(1-t)+.5*t;let r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},Po.hcg.hwb=function(e){const t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},Po.hwb.hcg=function(e){const t=e[1]/100,n=1-e[2]/100,r=n-t;let o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},Po.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},Po.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},Po.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},Po.gray.hsl=function(e){return[0,0,e[0]]},Po.gray.hsv=Po.gray.hsl,Po.gray.hwb=function(e){return[0,100,e[0]]},Po.gray.cmyk=function(e){return[0,0,0,e[0]]},Po.gray.lab=function(e){return[e[0],0,0]},Po.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},Po.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]};const Lo={};Object.keys(Oo).forEach((e=>{Lo[e]={},Object.defineProperty(Lo[e],"channels",{value:Oo[e].channels}),Object.defineProperty(Lo[e],"labels",{value:Oo[e].labels});const t=function(e){const t=function(e){const t=function(){const e={},t=Object.keys(Oo);for(let n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;){const e=n.pop(),r=Object.keys(Oo[e]);for(let o=r.length,i=0;i<o;i++){const o=r[i],u=t[o];-1===u.distance&&(u.distance=t[e].distance+1,u.parent=e,n.unshift(o))}}return t}(e),n={},r=Object.keys(t);for(let e=r.length,o=0;o<e;o++){const e=r[o];null!==t[e].parent&&(n[e]=Io(e,t))}return n}(e);Object.keys(t).forEach((n=>{const r=t[n];Lo[e][n]=function(e){const t=function(...t){const n=t[0];if(null==n)return n;n.length>1&&(t=n);const r=e(t);if("object"==typeof r)for(let e=r.length,t=0;t<e;t++)r[t]=Math.round(r[t]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(r),Lo[e][n].raw=function(e){const t=function(...t){const n=t[0];return null==n?n:(n.length>1&&(t=n),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var Mo=Lo,jo=Me((function(e){const t=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(r+t,"m")},n=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(38+t,";5;").concat(r,"m")},r=(e,t)=>(...n)=>{const r=e(...n);return"[".concat(38+t,";2;").concat(r[0],";").concat(r[1],";").concat(r[2],"m")},o=e=>e,i=(e,t,n)=>[e,t,n],u=(e,t,n)=>{Object.defineProperty(e,t,{get:()=>{const r=n();return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0}),r},enumerable:!0,configurable:!0})};let a;const s=(e,t,n,r)=>{void 0===a&&(a=Mo);const o=r?10:0,i={};for(const[r,u]of Object.entries(a)){const a="ansi16"===r?"ansi":r;r===t?i[a]=e(n,o):"object"==typeof u&&(i[a]=e(u[t],o))}return i};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,a={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};a.color.gray=a.color.blackBright,a.bgColor.bgGray=a.bgColor.bgBlackBright,a.color.grey=a.color.blackBright,a.bgColor.bgGrey=a.bgColor.bgBlackBright;for(const[t,n]of Object.entries(a)){for(const[t,r]of Object.entries(n))a[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=a[t],e.set(r[0],r[1]);Object.defineProperty(a,t,{value:n,enumerable:!1})}return Object.defineProperty(a,"codes",{value:e,enumerable:!1}),a.color.close="[39m",a.bgColor.close="[49m",u(a.color,"ansi",(()=>s(t,"ansi16",o,!1))),u(a.color,"ansi256",(()=>s(n,"ansi256",o,!1))),u(a.color,"ansi16m",(()=>s(r,"rgb",i,!1))),u(a.bgColor,"ansi",(()=>s(t,"ansi16",o,!0))),u(a.bgColor,"ansi256",(()=>s(n,"ansi256",o,!0))),u(a.bgColor,"ansi16m",(()=>s(r,"rgb",i,!0))),a}})})),Ro=(e,t=Oe.argv)=>{const n=e.startsWith("-")?"":1===e.length?"-":"--",r=t.indexOf(n+e),o=t.indexOf("--");return-1!==r&&(-1===o||r<o)},Vo=je(Object.freeze({__proto__:null,default:{isatty:()=>!1}}));const{env:qo}=Oe;let $o;function Wo(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function Uo(e,t){if(0===$o)return 0;if(Ro("color=16m")||Ro("color=full")||Ro("color=truecolor"))return 3;if(Ro("color=256"))return 2;if(e&&!t&&void 0===$o)return 0;const n=$o||0;if("dumb"===qo.TERM)return n;if("win32"===Oe.platform){const e=Rr.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in qo)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in qo))||"codeship"===qo.CI_NAME?1:n;if("TEAMCITY_VERSION"in qo)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(qo.TEAMCITY_VERSION)?1:0;if("GITHUB_ACTIONS"in qo)return 1;if("truecolor"===qo.COLORTERM)return 3;if("TERM_PROGRAM"in qo){const e=parseInt((qo.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(qo.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(qo.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(qo.TERM)||"COLORTERM"in qo?1:n}Ro("no-color")||Ro("no-colors")||Ro("color=false")||Ro("color=never")?$o=0:(Ro("color")||Ro("colors")||Ro("color=true")||Ro("color=always"))&&($o=1),"FORCE_COLOR"in qo&&($o="true"===qo.FORCE_COLOR?1:"false"===qo.FORCE_COLOR?0:0===qo.FORCE_COLOR.length?1:Math.min(parseInt(qo.FORCE_COLOR,10),3));var Jo={supportsColor:function(e){return Wo(Uo(e,e&&e.isTTY))},stdout:Wo(Uo(!0,Vo.isatty(1))),stderr:Wo(Uo(!0,Vo.isatty(2)))};const Go=/(?:\\(u(?:[a-f\d]{4}|\{[a-f\d]{1,6}\})|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,zo=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Ho=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,Xo=/\\(u(?:[a-f\d]{4}|{[a-f\d]{1,6}})|x[a-f\d]{2}|.)|([^\\])/gi,Yo=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function Ko(e){const t="u"===e[0],n="{"===e[1];return t&&!n&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):t&&n?String.fromCodePoint(parseInt(e.slice(2,-1),16)):Yo.get(e)||e}function Qo(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r){const r=Number(t);if(Number.isNaN(r)){if(!(o=t.match(Ho)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(Xo,((e,t,n)=>t?Ko(t):n)))}else n.push(r)}return n}function Zo(e){zo.lastIndex=0;const t=[];let n;for(;null!==(n=zo.exec(e));){const e=n[1];if(n[2]){const r=Qo(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function ei(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const[e,t]of Object.entries(n))if(Array.isArray(t)){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=t.length>0?r[e](...t):r[e]}return r}var ti=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(Go,((t,i,u,a,s,c)=>{if(i)o.push(Ko(i));else if(a){const t=o.join("");o=[],r.push(0===n.length?t:ei(e,n)(t)),n.push({inverse:u,styles:Zo(a)})}else if(s){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(ei(e,n)(o.join(""))),o=[],n.pop()}else o.push(c)})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")};const{stdout:ni,stderr:ri}=Jo,{stringReplaceAll:oi,stringEncaseCRLFWithFirstIndex:ii}={stringReplaceAll:(e,t,n)=>{let r=e.indexOf(t);if(-1===r)return e;const o=t.length;let i=0,u="";do{u+=e.substr(i,r-i)+t+n,i=r+o,r=e.indexOf(t,i)}while(-1!==r);return u+=e.substr(i),u},stringEncaseCRLFWithFirstIndex:(e,t,n,r)=>{let o=0,i="";do{const u="\r"===e[r-1];i+=e.substr(o,(u?r-1:r)-o)+t+(u?"\r\n":"\n")+n,o=r+1,r=e.indexOf("\n",o)}while(-1!==r);return i+=e.substr(o),i}},{isArray:ui}=Array,ai=["ansi","ansi","ansi256","ansi16m"],si=Object.create(null);class ci{constructor(e){return li(e)}}const li=e=>{const t={};return((e,t={})=>{if(t.level&&!(Number.isInteger(t.level)&&t.level>=0&&t.level<=3))throw new Error("The `level` option should be an integer from 0 to 3");const n=ni?ni.level:0;e.level=void 0===t.level?n:t.level})(t,e),t.template=(...e)=>Di(t.template,...e),Object.setPrototypeOf(t,pi.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},t.template.Instance=ci,t.template};function pi(e){return li(e)}for(const[e,t]of Object.entries(jo))si[e]={get(){const n=gi(this,hi(t.open,t.close,this._styler),this._isEmpty);return Object.defineProperty(this,e,{value:n}),n}};si.visible={get(){const e=gi(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:e}),e}};const fi=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(const e of fi)si[e]={get(){const{level:t}=this;return function(...n){const r=hi(jo.color[ai[t]][e](...n),jo.color.close,this._styler);return gi(this,r,this._isEmpty)}}};for(const e of fi)si["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const{level:t}=this;return function(...n){const r=hi(jo.bgColor[ai[t]][e](...n),jo.bgColor.close,this._styler);return gi(this,r,this._isEmpty)}}};const di=Object.defineProperties((()=>{}),Object.assign({},si,{level:{enumerable:!0,get(){return this._generator.level},set(e){this._generator.level=e}}})),hi=(e,t,n)=>{let r,o;return void 0===n?(r=e,o=t):(r=n.openAll+e,o=t+n.closeAll),{open:e,close:t,openAll:r,closeAll:o,parent:n}},gi=(e,t,n)=>{const r=(...e)=>ui(e[0])&&ui(e[0].raw)?mi(r,Di(r,...e)):mi(r,1===e.length?""+e[0]:e.join(" "));return Object.setPrototypeOf(r,di),r._generator=e,r._styler=t,r._isEmpty=n,r},mi=(e,t)=>{if(e.level<=0||!t)return e._isEmpty?"":t;let n=e._styler;if(void 0===n)return t;const{openAll:r,closeAll:o}=n;if(-1!==t.indexOf(""))for(;void 0!==n;)t=oi(t,n.close,n.open),n=n.parent;const i=t.indexOf("\n");return-1!==i&&(t=ii(t,o,r,i)),r+t+o};let yi;const Di=(e,...t)=>{const[n]=t;if(!ui(n)||!ui(n.raw))return t.join(" ");const r=t.slice(1),o=[n.raw[0]];for(let e=1;e<n.length;e++)o.push(String(r[e-1]).replace(/[{}\\]/g,"\\$&"),String(n.raw[e]));return void 0===yi&&(yi=ti),yi(e,o.join(""))};Object.defineProperties(pi.prototype,si);const vi=pi();vi.supportsColor=ni,vi.stderr=pi({level:ri?ri.level:0}),vi.stderr.supportsColor=ri;var Ei=vi,bi=function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e},Ci="object"==typeof Le&&Le&&Le.Object===Object&&Le,Ai="object"==typeof self&&self&&self.Object===Object&&self,Fi=(Ci||Ai||Function("return this")()).Symbol,xi=Object.prototype,Si=xi.hasOwnProperty,wi=xi.toString,Ti=Fi?Fi.toStringTag:void 0,Bi=Object.prototype.toString,Ni=Fi?Fi.toStringTag:void 0,ki=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Ni&&Ni in Object(e)?function(e){var t=Si.call(e,Ti),n=e[Ti];try{e[Ti]=void 0;var r=!0}catch(e){}var o=wi.call(e);return r&&(t?e[Ti]=n:delete e[Ti]),o}(e):function(e){return Bi.call(e)}(e)},Pi=function(e){return null!=e&&"object"==typeof e},Oi=function(e){return Pi(e)&&"[object Arguments]"==ki(e)},_i=Object.prototype,Ii=_i.hasOwnProperty,Li=_i.propertyIsEnumerable,Mi=Oi(function(){return arguments}())?Oi:function(e){return Pi(e)&&Ii.call(e,"callee")&&!Li.call(e,"callee")},ji=Array.isArray,Ri=Fi?Fi.isConcatSpreadable:void 0,Vi=function(e){return ji(e)||Mi(e)||!!(Ri&&e&&e[Ri])},qi=function e(t,n,r,o,i){var u=-1,a=t.length;for(r||(r=Vi),i||(i=[]);++u<a;){var s=t[u];n>0&&r(s)?n>1?e(s,n-1,r,o,i):bi(i,s):o||(i[i.length]=s)}return i},$i=function(e){return null!=e&&e.length?qi(e,1):[]};const Wi={key:e=>1===e.length?"-".concat(e):"--".concat(e),value:e=>Fo.apiDescriptor.value(e),pair:({key:e,value:t})=>!1===t?"--no-".concat(e):!0===t?Wi.key(e):""===t?"".concat(Wi.key(e)," without an argument"):"".concat(Wi.key(e),"=").concat(t)};class Ui extends Fo.ChoiceSchema{constructor({name:e,flags:t}){super({name:e,choices:t}),this._flags=t.slice().sort()}preprocess(e,t){if("string"==typeof e&&0!==e.length&&!this._flags.includes(e)){const n=this._flags.find((t=>To(t,e)<3));if(n)return t.logger.warn(["Unknown flag ".concat(Ei.yellow(t.descriptor.value(e)),","),"did you mean ".concat(Ei.blue(t.descriptor.value(n)),"?")].join(" ")),n}return e}expected(){return"a flag"}}let Ji;function Gi(t,n,{logger:r,isCLI:o=!1,passThrough:i=!1}={}){const u=i?Array.isArray(i)?(e,t)=>i.includes(e)?{[e]:t}:void 0:(e,t)=>({[e]:t}):(t,n,r)=>{const o=e(r.schemas,["_"]);return Fo.levenUnknownHandler(t,n,Object.assign({},r,{schemas:o}))},a=o?Wi:Fo.apiDescriptor,s=function(e,{isCLI:t}){const n=[];t&&n.push(Fo.AnySchema.create({name:"_"}));for(const r of e)n.push(zi(r,{isCLI:t,optionInfos:e})),r.alias&&t&&n.push(Fo.AliasSchema.create({name:r.alias,sourceName:r.name}));return n}(n,{isCLI:o}),c=new Fo.Normalizer(s,{logger:r,unknown:u,descriptor:a}),l=!1!==r;l&&Ji&&(c._hasDeprecationWarned=Ji);const p=c.normalize(t);return l&&(Ji=c._hasDeprecationWarned),p}function zi(e,{isCLI:t,optionInfos:n}){let r;const o={name:e.name},i={};switch(e.type){case"int":r=Fo.IntegerSchema,t&&(o.preprocess=e=>Number(e));break;case"string":r=Fo.StringSchema;break;case"choice":r=Fo.ChoiceSchema,o.choices=e.choices.map((t=>"object"==typeof t&&t.redirect?Object.assign({},t,{redirect:{to:{key:e.name,value:t.redirect}}}):t));break;case"boolean":r=Fo.BooleanSchema;break;case"flag":r=Ui,o.flags=$i(n.map((e=>[e.alias,e.description&&e.name,e.oppositeDescription&&"no-".concat(e.name)].filter(Boolean))));break;case"path":r=Fo.StringSchema;break;default:throw new Error("Unexpected type ".concat(e.type))}if(e.exception?o.validate=(t,n,r)=>e.exception(t)||n.validate(t,r):o.validate=(e,t,n)=>void 0===e||t.validate(e,n),e.redirect&&(i.redirect=t=>t?{to:{key:e.redirect.option,value:e.redirect.value}}:void 0),e.deprecated&&(i.deprecated=!0),t&&!e.array){const e=o.preprocess||(e=>e);o.preprocess=(t,n,r)=>n.preprocess(e(Array.isArray(t)?t[t.length-1]:t),r)}return e.array?Fo.ArraySchema.create(Object.assign({},t?{preprocess:e=>[].concat(e)}:{},i,{valueSchema:r.create(o)})):r.create(Object.assign({},o,i))}var Hi=function(e,t,n){return Gi(e,t,n)};function Xi(e,t){const{ignoreDecorators:n}=t||{};if(!n){const t=e.declaration&&e.declaration.decorators||e.decorators;if(t&&t.length>0)return Xi(t[0])}return e.range?e.range[0]:e.start}function Yi(e){const t=e.range?e.range[1]:e.end;return e.typeAnnotation?Math.max(t,Yi(e.typeAnnotation)):t}function Ki(e,t){return Xi(e)===Xi(t)}var Qi={locStart:Xi,locEnd:Yi,composeLoc:function(e,t=e){const n=Xi(e);return[n,"number"==typeof t?n+t:Yi(t)]},hasSameLocStart:Ki,hasSameLoc:function(e,t){return Ki(e,t)&&function(e,t){return Yi(e)===Yi(t)}(e,t)}},Zi=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}})),eu=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=c,t.isIdentifierChar=l,t.isIdentifierName=function(e){let t=!0;for(let n=0,r=Array.from(e);n<r.length;n++){const e=r[n].codePointAt(0);if(t){if(!c(e))return!1;t=!1}else if(!l(e))return!1}return!t};let n="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",r="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";const o=new RegExp("["+n+"]"),i=new RegExp("["+n+r+"]");n=r=null;const u=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],a=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function s(e,t){let n=65536;for(let r=0,o=t.length;r<o;r+=2){if(n+=t[r],n>e)return!1;if(n+=t[r+1],n>=e)return!0}return!1}function c(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&o.test(String.fromCharCode(e)):s(e,u)))}function l(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):s(e,u)||s(e,a))))}})),tu=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=i,t.isStrictReservedWord=u,t.isStrictBindOnlyReservedWord=a,t.isStrictBindReservedWord=function(e,t){return u(e,t)||a(e)},t.isKeyword=function(e){return n.has(e)};const n=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),r=new Set(["implements","interface","let","package","private","protected","public","static","yield"]),o=new Set(["eval","arguments"]);function i(e,t){return t&&"await"===e||"enum"===e}function u(e,t){return i(e,t)||r.has(e)}function a(e){return o.has(e)}})),nu=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return eu.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return eu.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return eu.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return tu.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return tu.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return tu.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return tu.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return tu.isKeyword}})})),ru=/[|\\{}()[\]^$+*?.]/g,ou=function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(ru,"\\$&")},iu={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},uu=Me((function(e){var t={};for(var n in iu)iu.hasOwnProperty(n)&&(t[iu[n]]=n);var r=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var o in r)if(r.hasOwnProperty(o)){if(!("channels"in r[o]))throw new Error("missing channels property: "+o);if(!("labels"in r[o]))throw new Error("missing channel labels property: "+o);if(r[o].labels.length!==r[o].channels)throw new Error("channel and label counts mismatch: "+o);var i=r[o].channels,u=r[o].labels;delete r[o].channels,delete r[o].labels,Object.defineProperty(r[o],"channels",{value:i}),Object.defineProperty(r[o],"labels",{value:u})}r.rgb.hsl=function(e){var t,n,r=e[0]/255,o=e[1]/255,i=e[2]/255,u=Math.min(r,o,i),a=Math.max(r,o,i),s=a-u;return a===u?t=0:r===a?t=(o-i)/s:o===a?t=2+(i-r)/s:i===a&&(t=4+(r-o)/s),(t=Math.min(60*t,360))<0&&(t+=360),n=(u+a)/2,[t,100*(a===u?0:n<=.5?s/(a+u):s/(2-a-u)),100*n]},r.rgb.hsv=function(e){var t,n,r,o,i,u=e[0]/255,a=e[1]/255,s=e[2]/255,c=Math.max(u,a,s),l=c-Math.min(u,a,s),p=function(e){return(c-e)/6/l+.5};return 0===l?o=i=0:(i=l/c,t=p(u),n=p(a),r=p(s),u===c?o=r-n:a===c?o=1/3+t-r:s===c&&(o=2/3+n-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*i,100*c]},r.rgb.hwb=function(e){var t=e[0],n=e[1],o=e[2];return[r.rgb.hsl(e)[0],1/255*Math.min(t,Math.min(n,o))*100,100*(o=1-1/255*Math.max(t,Math.max(n,o)))]},r.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-o)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},r.rgb.keyword=function(e){var n=t[e];if(n)return n;var r,o,i,u=1/0;for(var a in iu)if(iu.hasOwnProperty(a)){var s=(o=e,i=iu[a],Math.pow(o[0]-i[0],2)+Math.pow(o[1]-i[1],2)+Math.pow(o[2]-i[2],2));s<u&&(u=s,r=a)}return r},r.keyword.rgb=function(e){return iu[e]},r.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},r.rgb.lab=function(e){var t=r.rgb.xyz(e),n=t[0],o=t[1],i=t[2];return o/=100,i/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116)-16,500*(n-o),200*(o-(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116))]},r.hsl.rgb=function(e){var t,n,r,o,i,u=e[0]/360,a=e[1]/100,s=e[2]/100;if(0===a)return[i=255*s,i,i];t=2*s-(n=s<.5?s*(1+a):s+a-s*a),o=[0,0,0];for(var c=0;c<3;c++)(r=u+1/3*-(c-1))<0&&r++,r>1&&r--,i=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,o[c]=255*i;return o},r.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,o=n,i=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,o*=i<=1?i:2-i,[t,100*(0===r?2*o/(i+o):2*n/(r+n)),(r+n)/2*100]},r.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,o=Math.floor(t)%6,i=t-Math.floor(t),u=255*r*(1-n),a=255*r*(1-n*i),s=255*r*(1-n*(1-i));switch(r*=255,o){case 0:return[r,s,u];case 1:return[a,r,u];case 2:return[u,r,s];case 3:return[u,a,r];case 4:return[s,u,r];case 5:return[r,u,a]}},r.hsv.hsl=function(e){var t,n,r,o=e[0],i=e[1]/100,u=e[2]/100,a=Math.max(u,.01);return r=(2-i)*u,n=i*a,[o,100*(n=(n/=(t=(2-i)*a)<=1?t:2-t)||0),100*(r/=2)]},r.hwb.rgb=function(e){var t,n,r,o,i,u,a,s=e[0]/360,c=e[1]/100,l=e[2]/100,p=c+l;switch(p>1&&(c/=p,l/=p),r=6*s-(t=Math.floor(6*s)),0!=(1&t)&&(r=1-r),o=c+r*((n=1-l)-c),t){default:case 6:case 0:i=n,u=o,a=c;break;case 1:i=o,u=n,a=c;break;case 2:i=c,u=n,a=o;break;case 3:i=c,u=o,a=n;break;case 4:i=o,u=c,a=n;break;case 5:i=n,u=c,a=o}return[255*i,255*u,255*a]},r.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},r.xyz.rgb=function(e){var t,n,r,o=e[0]/100,i=e[1]/100,u=e[2]/100;return n=-.9689*o+1.8758*i+.0415*u,r=.0557*o+-.204*i+1.057*u,t=(t=3.2406*o+-1.5372*i+-.4986*u)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},r.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},r.lab.xyz=function(e){var t,n,r,o=e[0];t=e[1]/500+(n=(o+16)/116),r=n-e[2]/200;var i=Math.pow(n,3),u=Math.pow(t,3),a=Math.pow(r,3);return n=i>.008856?i:(n-16/116)/7.787,t=u>.008856?u:(t-16/116)/7.787,r=a>.008856?a:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},r.lab.lch=function(e){var t,n=e[0],r=e[1],o=e[2];return(t=360*Math.atan2(o,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+o*o),t]},r.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},r.rgb.ansi16=function(e){var t=e[0],n=e[1],o=e[2],i=1 in arguments?arguments[1]:r.rgb.hsv(e)[2];if(0===(i=Math.round(i/50)))return 30;var u=30+(Math.round(o/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===i&&(u+=60),u},r.hsv.ansi16=function(e){return r.rgb.ansi16(r.hsv.rgb(e),e[2])},r.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},r.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},r.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},r.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},r.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map((function(e){return e+e})).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},r.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,o=e[2]/255,i=Math.max(Math.max(n,r),o),u=Math.min(Math.min(n,r),o),a=i-u;return t=a<=0?0:i===n?(r-o)/a%6:i===r?2+(o-n)/a:4+(n-r)/a+4,t/=6,[360*(t%=1),100*a,100*(a<1?u/(1-a):0)]},r.hsl.hcg=function(e){var t,n=e[1]/100,r=e[2]/100,o=0;return(t=r<.5?2*n*r:2*n*(1-r))<1&&(o=(r-.5*t)/(1-t)),[e[0],100*t,100*o]},r.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},r.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var o,i=[0,0,0],u=t%1*6,a=u%1,s=1-a;switch(Math.floor(u)){case 0:i[0]=1,i[1]=a,i[2]=0;break;case 1:i[0]=s,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=a;break;case 3:i[0]=0,i[1]=s,i[2]=1;break;case 4:i[0]=a,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=s}return o=(1-n)*r,[255*(n*i[0]+o),255*(n*i[1]+o),255*(n*i[2]+o)]},r.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},r.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},r.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},r.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,o=0;return r<1&&(o=(n-r)/(1-r)),[e[0],100*r,100*o]},r.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},r.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},r.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},r.gray.hsl=r.gray.hsv=function(e){return[0,0,e[0]]},r.gray.hwb=function(e){return[0,100,e[0]]},r.gray.cmyk=function(e){return[0,0,0,e[0]]},r.gray.lab=function(e){return[e[0],0,0]},r.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},r.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}}));function au(e,t){return function(n){return t(e(n))}}function su(e,t){for(var n=[t[e].parent,e],r=uu[t[e].parent][e],o=t[e].parent;t[o].parent;)n.unshift(t[o].parent),r=au(uu[t[o].parent][o],r),o=t[o].parent;return r.conversion=n,r}var cu={};Object.keys(uu).forEach((function(e){cu[e]={},Object.defineProperty(cu[e],"channels",{value:uu[e].channels}),Object.defineProperty(cu[e],"labels",{value:uu[e].labels});var t=function(e){for(var t=function(e){var t=function(){for(var e={},t=Object.keys(uu),n=t.length,r=0;r<n;r++)e[t[r]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var r=n.pop(),o=Object.keys(uu[r]),i=o.length,u=0;u<i;u++){var a=o[u],s=t[a];-1===s.distance&&(s.distance=t[r].distance+1,s.parent=r,n.unshift(a))}return t}(e),n={},r=Object.keys(t),o=r.length,i=0;i<o;i++){var u=r[i];null!==t[u].parent&&(n[u]=su(u,t))}return n}(e);Object.keys(t).forEach((function(n){var r=t[n];cu[e][n]=function(e){var t=function(t){if(null==t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"==typeof n)for(var r=n.length,o=0;o<r;o++)n[o]=Math.round(n[o]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),cu[e][n].raw=function(e){var t=function(t){return null==t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))}));var lu=cu,pu=Me((function(e){const t=(e,t)=>function(){const n=e.apply(lu,arguments);return"[".concat(n+t,"m")},n=(e,t)=>function(){const n=e.apply(lu,arguments);return"[".concat(38+t,";5;").concat(n,"m")},r=(e,t)=>function(){const n=e.apply(lu,arguments);return"[".concat(38+t,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){const e=new Map,o={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};o.color.grey=o.color.gray;for(const t of Object.keys(o)){const n=o[t];for(const t of Object.keys(n)){const r=n[t];o[t]={open:"[".concat(r[0],"m"),close:"[".concat(r[1],"m")},n[t]=o[t],e.set(r[0],r[1])}Object.defineProperty(o,t,{value:n,enumerable:!1}),Object.defineProperty(o,"codes",{value:e,enumerable:!1})}const i=e=>e,u=(e,t,n)=>[e,t,n];o.color.close="[39m",o.bgColor.close="[49m",o.color.ansi={ansi:t(i,0)},o.color.ansi256={ansi256:n(i,0)},o.color.ansi16m={rgb:r(u,0)},o.bgColor.ansi={ansi:t(i,10)},o.bgColor.ansi256={ansi256:n(i,10)},o.bgColor.ansi16m={rgb:r(u,10)};for(let e of Object.keys(lu)){if("object"!=typeof lu[e])continue;const i=lu[e];"ansi16"===e&&(e="ansi"),"ansi16"in i&&(o.color.ansi[e]=t(i.ansi16,0),o.bgColor.ansi[e]=t(i.ansi16,10)),"ansi256"in i&&(o.color.ansi256[e]=n(i.ansi256,0),o.bgColor.ansi256[e]=n(i.ansi256,10)),"rgb"in i&&(o.color.ansi16m[e]=r(i.rgb,0),o.bgColor.ansi16m[e]=r(i.rgb,10))}return o}})}));const fu=Oe.env;let du;function hu(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===du)return 0;if(jr("color=16m")||jr("color=full")||jr("color=truecolor"))return 3;if(jr("color=256"))return 2;if(e&&!e.isTTY&&!0!==du)return 0;const t=du?1:0;if("win32"===Oe.platform){const e=Rr.release().split(".");return Number(Oe.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in fu)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some((e=>e in fu))||"codeship"===fu.CI_NAME?1:t;if("TEAMCITY_VERSION"in fu)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(fu.TEAMCITY_VERSION)?1:0;if("truecolor"===fu.COLORTERM)return 3;if("TERM_PROGRAM"in fu){const e=parseInt((fu.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(fu.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(fu.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(fu.TERM)||"COLORTERM"in fu?1:(fu.TERM,t)}(e))}jr("no-color")||jr("no-colors")||jr("color=false")?du=!1:(jr("color")||jr("colors")||jr("color=true")||jr("color=always"))&&(du=!0),"FORCE_COLOR"in fu&&(du=0===fu.FORCE_COLOR.length||0!==parseInt(fu.FORCE_COLOR,10));var gu={supportsColor:hu,stdout:hu(Oe.stdout),stderr:hu(Oe.stderr)};const mu=/(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,yu=/(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,Du=/^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,vu=/\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,Eu=new Map([["n","\n"],["r","\r"],["t","\t"],["b","\b"],["f","\f"],["v","\v"],["0","\0"],["\\","\\"],["e",""],["a",""]]);function bu(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):Eu.get(e)||e}function Cu(e,t){const n=[],r=t.trim().split(/\s*,\s*/g);let o;for(const t of r)if(isNaN(t)){if(!(o=t.match(Du)))throw new Error("Invalid Chalk template style argument: ".concat(t," (in style '").concat(e,"')"));n.push(o[2].replace(vu,((e,t,n)=>t?bu(t):n)))}else n.push(Number(t));return n}function Au(e){yu.lastIndex=0;const t=[];let n;for(;null!==(n=yu.exec(e));){const e=n[1];if(n[2]){const r=Cu(e,n[2]);t.push([e].concat(r))}else t.push([e])}return t}function Fu(e,t){const n={};for(const e of t)for(const t of e.styles)n[t[0]]=e.inverse?null:t.slice(1);let r=e;for(const e of Object.keys(n))if(Array.isArray(n[e])){if(!(e in r))throw new Error("Unknown Chalk style: ".concat(e));r=n[e].length>0?r[e].apply(r,n[e]):r[e]}return r}var xu=(e,t)=>{const n=[],r=[];let o=[];if(t.replace(mu,((t,i,u,a,s,c)=>{if(i)o.push(bu(i));else if(a){const t=o.join("");o=[],r.push(0===n.length?t:Fu(e,n)(t)),n.push({inverse:u,styles:Au(a)})}else if(s){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");r.push(Fu(e,n)(o.join(""))),o=[],n.pop()}else o.push(c)})),r.push(o.join("")),n.length>0){const e="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(e)}return r.join("")},Su=Me((function(e){const t=gu.stdout,n="win32"===Oe.platform&&!(Oe.env.TERM||"").toLowerCase().startsWith("xterm"),r=["ansi","ansi","ansi256","ansi16m"],o=new Set(["gray"]),i=Object.create(null);function u(e,n){n=n||{};const r=t?t.level:0;e.level=void 0===n.level?r:n.level,e.enabled="enabled"in n?n.enabled:e.level>0}function a(e){if(!this||!(this instanceof a)||this.template){const t={};return u(t,e),t.template=function(){const e=[].slice.call(arguments);return p.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,a.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=a,t.template}u(this,e)}n&&(pu.blue.open="[94m");for(const e of Object.keys(pu))pu[e].closeRe=new RegExp(ou(pu[e].close),"g"),i[e]={get(){const t=pu[e];return c.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}};i.visible={get(){return c.call(this,this._styles||[],!0,"visible")}},pu.color.closeRe=new RegExp(ou(pu.color.close),"g");for(const e of Object.keys(pu.color.ansi))o.has(e)||(i[e]={get(){const t=this.level;return function(){const n={open:pu.color[r[t]][e].apply(null,arguments),close:pu.color.close,closeRe:pu.color.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});pu.bgColor.closeRe=new RegExp(ou(pu.bgColor.close),"g");for(const e of Object.keys(pu.bgColor.ansi))o.has(e)||(i["bg"+e[0].toUpperCase()+e.slice(1)]={get(){const t=this.level;return function(){const n={open:pu.bgColor[r[t]][e].apply(null,arguments),close:pu.bgColor.close,closeRe:pu.bgColor.closeRe};return c.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}});const s=Object.defineProperties((()=>{}),i);function c(e,t,n){const r=function(){return l.apply(r,arguments)};r._styles=e,r._empty=t;const o=this;return Object.defineProperty(r,"level",{enumerable:!0,get:()=>o.level,set(e){o.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:()=>o.enabled,set(e){o.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=s,r}function l(){const e=arguments,t=e.length;let r=String(arguments[0]);if(0===t)return"";if(t>1)for(let n=1;n<t;n++)r+=" "+e[n];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;const o=pu.dim.open;n&&this.hasGrey&&(pu.dim.open="");for(const e of this._styles.slice().reverse())r=e.open+r.replace(e.closeRe,e.open)+e.close,r=r.replace(/\r?\n/g,"".concat(e.close,"$&").concat(e.open));return pu.dim.open=o,r}function p(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");const n=[].slice.call(arguments,2),r=[t.raw[0]];for(let e=1;e<t.length;e++)r.push(String(n[e-1]).replace(/[{}\\]/g,"\\$&")),r.push(String(t.raw[e]));return xu(e,r.join(""))}Object.defineProperties(a.prototype,i),e.exports=a(),e.exports.supportsColor=t,e.exports.default=e.exports})),wu=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=c,t.getChalk=l,t.default=function(e,t={}){return c(t)?function(e,t){return t.replace(r.default,(function(...t){const n=function(e){const[t,n]=e.slice(-2),o=(0,r.matchToToken)(e);if("name"===o.type){if((0,nu.isKeyword)(o.value)||(0,nu.isReservedWord)(o.value))return"keyword";if(a.test(o.value)&&("<"===n[t-1]||"</"==n.substr(t-2,2)))return"jsx_tag";if(o.value[0]!==o.value[0].toLowerCase())return"capitalized"}return"punctuator"===o.type&&s.test(o.value)?"bracket":"invalid"!==o.type||"@"!==o.value&&"#"!==o.value?o.type:"punctuator"}(t),o=e[n];return o?t[0].split(u).map((e=>o(e))).join("\n"):t[0]}))}(function(e){return{keyword:e.cyan,capitalized:e.yellow,jsx_tag:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}(l(t)),e):e};var n,r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=i();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var u=r?Object.getOwnPropertyDescriptor(e,o):null;u&&(u.get||u.set)?Object.defineProperty(n,o,u):n[o]=e[o]}return n.default=e,t&&t.set(e,n),n}(Zi),o=(n=Su)&&n.__esModule?n:{default:n};function i(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}const u=/\r\n|[\n\r\u2028\u2029]/,a=/^[a-z][\w-]*$/i,s=/^[()[\]{}]$/;function c(e){return o.default.supportsColor||e.forceColor}function l(e){let t=o.default;return e.forceColor&&(t=new o.default.constructor({enabled:!0,level:1})),t}})),Tu=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=u,t.default=function(e,t,n,r={}){if(!o){o=!0;const e="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";Oe.emitWarning?Oe.emitWarning(e,"DeprecationWarning"):(new Error(e).name="DeprecationWarning",console.warn(new Error(e)))}return u(e,{start:{column:n=Math.max(n,0),line:t}},r)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var u=o?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(n,i,u):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}(wu);function r(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}let o=!1;const i=/\r\n|[\n\r\u2028\u2029]/;function u(e,t,r={}){const o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),u=(0,n.getChalk)(r),a=function(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}(u),s=(e,t)=>o?e(t):t,c=e.split(i),{start:l,end:p,markerLines:f}=function(e,t,n){const r=Object.assign({column:0,line:-1},e.start),o=Object.assign({},r,e.end),{linesAbove:i=2,linesBelow:u=3}=n||{},a=r.line,s=r.column,c=o.line,l=o.column;let p=Math.max(a-(i+1),0),f=Math.min(t.length,c+u);-1===a&&(p=0),-1===c&&(f=t.length);const d=c-a,h={};if(d)for(let e=0;e<=d;e++){const n=e+a;if(s)if(0===e){const e=t[n-1].length;h[n]=[s,e-s+1]}else if(e===d)h[n]=[0,l];else{const r=t[n-e].length;h[n]=[0,r]}else h[n]=!0}else h[a]=s===l?!s||[s,0]:[s,l-s];return{start:p,end:f,markerLines:h}}(t,c,r),d=t.start&&"number"==typeof t.start.column,h=String(p).length;let g=(o?(0,n.default)(e,r):e).split(i).slice(l,p).map(((e,t)=>{const n=l+1+t,o=" ".concat(n).slice(-h),i=" ".concat(o," | "),u=f[n],c=!f[n+1];if(u){let t="";if(Array.isArray(u)){const n=e.slice(0,Math.max(u[0]-1,0)).replace(/[^\t]/g," "),o=u[1]||1;t=["\n ",s(a.gutter,i.replace(/\d/g," ")),n,s(a.marker,"^").repeat(o)].join(""),c&&r.message&&(t+=" "+s(a.message,r.message))}return[s(a.marker,">"),s(a.gutter,i),e,t].join("")}return" ".concat(s(a.gutter,i)).concat(e)})).join("\n");return r.message&&!d&&(g="".concat(" ".repeat(h+1)).concat(r.message,"\n").concat(g)),o?u.reset(g):g}})),Bu=je(Dn);const{ConfigError:Nu}=Er,{locStart:ku,locEnd:Pu}=Qi,Ou=Object.getOwnPropertyNames,_u=Object.getOwnPropertyDescriptor;function Iu(e){const t={};for(const n of e.plugins)if(n.parsers)for(const e of Ou(n.parsers))Object.defineProperty(t,e,_u(n.parsers,e));return t}function Lu(e,t){if(t=t||Iu(e),"function"==typeof e.parser)return{parse:e.parser,astFormat:"estree",locStart:ku,locEnd:Pu};if("string"==typeof e.parser){if(Object.prototype.hasOwnProperty.call(t,e.parser))return t[e.parser];throw new Nu("Couldn't resolve parser \"".concat(e.parser,'". Parsers must be explicitly added to the standalone bundle.'))}}var Mu={parse:function(e,t){const n=Iu(t),r=Object.keys(n).reduce(((e,t)=>Object.defineProperty(e,t,{enumerable:!0,get:()=>n[t].parse})),{}),o=Lu(t,n);try{return o.preprocess&&(e=o.preprocess(e,t)),{text:e,ast:o.parse(e,r,t)}}catch(t){const{loc:n}=t;if(n){const{codeFrameColumns:r}=Tu;throw t.codeFrame=r(e,n,{highlightCode:!0}),t.message+="\n"+t.codeFrame,t}throw t.stack}},resolveParser:Lu};const{UndefinedParserError:ju}=Er,{getSupportInfo:Ru}=mt,{resolveParser:Vu}=Mu,qu={astFormat:"estree",printer:{},originalText:void 0,locStart:null,locEnd:null};function $u(e,t){const n=Bu.basename(e).toLowerCase(),r=Ru({plugins:t}).languages.filter((e=>null!==e.since));let o=r.find((e=>e.extensions&&e.extensions.some((e=>n.endsWith(e)))||e.filenames&&e.filenames.some((e=>e.toLowerCase()===n))));if(!o&&!n.includes(".")){const t=function(e){if("string"!=typeof e)return"";let t;try{t=mr.openSync(e,"r")}catch(e){return""}try{const n=new class{constructor(e,t){(t=t||{}).readChunk||(t.readChunk=1024),t.newLineCharacter?t.newLineCharacter=t.newLineCharacter.charCodeAt(0):t.newLineCharacter=10,this.fd="number"==typeof e?e:mr.openSync(e,"r"),this.options=t,this.newLineCharacter=t.newLineCharacter,this.reset()}_searchInBuffer(e,t){let n=-1;for(let r=0;r<=e.length;r++)if(e[r]===t){n=r;break}return n}reset(){this.eofReached=!1,this.linesCache=[],this.fdPosition=0}close(){mr.closeSync(this.fd),this.fd=null}_extractLines(e){let t;const n=[];let r=0,o=0;for(;;){let i=e[r++];if(i===this.newLineCharacter)t=e.slice(o,r),n.push(t),o=r;else if(void 0===i)break}let i=e.slice(o,r);return i.length&&n.push(i),n}_readChunk(e){let t,n=0;const r=[];do{const e=new Pn(this.options.readChunk);t=mr.readSync(this.fd,e,0,this.options.readChunk,this.fdPosition),n+=t,this.fdPosition=this.fdPosition+t,r.push(e)}while(t&&-1===this._searchInBuffer(r[r.length-1],this.options.newLineCharacter));let o=Pn.concat(r);return t<this.options.readChunk&&(this.eofReached=!0,o=o.slice(0,n)),n&&(this.linesCache=this._extractLines(o),e&&(this.linesCache[0]=Pn.concat([e,this.linesCache[0]]))),n}next(){if(!this.fd)return!1;let e,t=!1;return this.eofReached&&0===this.linesCache.length||(this.linesCache.length||(e=this._readChunk()),this.linesCache.length&&(t=this.linesCache.shift(),t[t.length-1]!==this.newLineCharacter&&(e=this._readChunk(t),e&&(t=this.linesCache.shift()))),this.eofReached&&0===this.linesCache.length&&this.close(),t&&t[t.length-1]===this.newLineCharacter&&(t=t.slice(0,t.length-1))),t}}(t).next().toString("utf8"),r=n.match(/^#!\/(?:usr\/)?bin\/env\s+(\S+)/);if(r)return r[1];const o=n.match(/^#!\/(?:usr\/(?:local\/)?)?bin\/(\S+)/);return o?o[1]:""}catch(e){return""}finally{try{mr.closeSync(t)}catch(e){}}}(e);o=r.find((e=>e.interpreters&&e.interpreters.includes(t)))}return o&&o.parsers[0]}var Wu={normalize:function(e,t){t=t||{};const n=Object.assign({},e),r=Ru({plugins:e.plugins,showUnreleased:!0,showDeprecated:!0}).options,o=Object.assign({},qu,function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var o=e[t];r[o[0]]=o[1]}return r}(r.filter((e=>void 0!==e.default)).map((e=>[e.name,e.default]))));if(!n.parser)if(n.filepath){if(n.parser=$u(n.filepath,n.plugins),!n.parser)throw new ju("No parser could be inferred for file: ".concat(n.filepath))}else(t.logger||console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."),n.parser="babel";const i=Vu(Hi(n,[r.find((e=>"parser"===e.name))],{passThrough:!0,logger:!1}));n.astFormat=i.astFormat,n.locEnd=i.locEnd,n.locStart=i.locStart;const u=function(e){const{astFormat:t}=e;if(!t)throw new Error("getPlugin() requires astFormat to be set");const n=e.plugins.find((e=>e.printers&&e.printers[t]));if(!n)throw new Error("Couldn't find plugin for AST format \"".concat(t,'"'));return n}(n);n.printer=u.printers[n.astFormat];const a=r.filter((e=>e.pluginDefaults&&void 0!==e.pluginDefaults[u.name])).reduce(((e,t)=>Object.assign(e,{[t.name]:t.pluginDefaults[u.name]})),{}),s=Object.assign({},o,a);return Object.keys(s).forEach((e=>{null==n[e]&&(n[e]=s[e])})),"json"===n.parser&&(n.trailingComma="none"),Hi(n,r,Object.assign({passThrough:Object.keys(qu)},t))},hiddenDefaults:qu,inferParser:$u},Uu=function e(t,n,r){if(Array.isArray(t))return t.map((t=>e(t,n,r))).filter(Boolean);if(!t||"object"!=typeof t)return t;const o=n.printer.massageAstNode;let i;i=o&&o.ignoredProperties?o.ignoredProperties:new Set;const u={};for(const r of Object.keys(t))i.has(r)||"function"==typeof t[r]||(u[r]=e(t[r],n,t));if(o){const e=o(t,u,r);if(null===e)return;if(e)return e}return u};function Ju(){}Ju.ok=function(){},Ju.strictEqual=function(){};var Gu=je(Object.freeze({__proto__:null,default:Ju}));const{builders:{concat:zu,line:Hu,hardline:Xu,breakParent:Yu,indent:Ku,lineSuffix:Qu,join:Zu,cursor:ea}}=cn,{hasNewline:ta,skipNewline:na,skipSpaces:ra,isPreviousLineEmpty:oa,addLeadingComment:ia,addDanglingComment:ua,addTrailingComment:aa}=It,sa=Symbol("child-nodes");function ca(e,t,n){if(!e)return;const{printer:r,locStart:o,locEnd:i}=t;if(n){if(r.canAttachComment&&r.canAttachComment(e)){let t;for(t=n.length-1;t>=0&&!(o(n[t])<=o(e)&&i(n[t])<=i(e));--t);return void n.splice(t+1,0,e)}}else if(e[sa])return e[sa];const u=r.getCommentChildNodes&&r.getCommentChildNodes(e,t)||"object"==typeof e&&Object.keys(e).filter((e=>"enclosingNode"!==e&&"precedingNode"!==e&&"followingNode"!==e&&"tokens"!==e&&"comments"!==e)).map((t=>e[t]));return u?(n||Object.defineProperty(e,sa,{value:n=[],enumerable:!1}),u.forEach((e=>{ca(e,t,n)})),n):void 0}function la(e,t,n){const{locStart:r,locEnd:o}=n,i=r(t),u=o(t),a=ca(e,n);let s,c,l=0,p=a.length;for(;l<p;){const e=l+p>>1,f=a[e],d=r(f),h=o(f);if(d<=i&&u<=h)return t.enclosingNode=f,void la(f,t,n);if(d<=i)s=f,l=e+1;else{if(!(u<=d))throw new Error("Comment location overlaps with node location");c=f,p=e}}if(t.enclosingNode&&"TemplateLiteral"===t.enclosingNode.type){const{quasis:e}=t.enclosingNode,r=da(e,t,n);s&&da(e,s,n)!==r&&(s=null),c&&da(e,c,n)!==r&&(c=null)}s&&(t.precedingNode=s),c&&(t.followingNode=c)}function pa(e,t,n){const r=e.length;if(0===r)return;const{precedingNode:o,followingNode:i,enclosingNode:u}=e[0],a=n.printer.getGapRegex&&n.printer.getGapRegex(u)||/^[\s(]*$/;let s,c=n.locStart(i);for(s=r;s>0;--s){const r=e[s-1];Gu.strictEqual(r.precedingNode,o),Gu.strictEqual(r.followingNode,i);const u=t.slice(n.locEnd(r),c);if(!a.test(u))break;c=n.locStart(r)}e.forEach(((e,t)=>{t<s?aa(o,e):ia(i,e)}));for(const e of[o,i])e.comments&&e.comments.length>1&&e.comments.sort(((e,t)=>n.locStart(e)-n.locStart(t)));e.length=0}function fa(e,t){return e.getValue().printed=!0,t.printer.printComment(e,t)}function da(e,t,n){const r=n.locStart(t)-1;for(let t=1;t<e.length;++t)if(r<n.locStart(e[t]))return t-1;return 0}function ha(e,t,n){return e.getNode()===t.cursorNode&&e.getValue()?zu([ea,n,ea]):n}var ga={attach:function(e,t,n,r){if(!Array.isArray(e))return;const o=[],{locStart:i,locEnd:u}=r;e.forEach(((a,s)=>{if("json"===r.parser||"json5"===r.parser||"__js_expression"===r.parser||"__vue_expression"===r.parser){if(i(a)-i(t)<=0)return void ia(t,a);if(u(a)-u(t)>=0)return void aa(t,a)}la(t,a,r);const{precedingNode:c,enclosingNode:l,followingNode:p}=a,f=r.printer.handleComments&&r.printer.handleComments.ownLine?r.printer.handleComments.ownLine:()=>!1,d=r.printer.handleComments&&r.printer.handleComments.endOfLine?r.printer.handleComments.endOfLine:()=>!1,h=r.printer.handleComments&&r.printer.handleComments.remaining?r.printer.handleComments.remaining:()=>!1,g=e.length-1===s;if(ta(n,i(a),{backwards:!0}))f(a,n,r,t,g)||(p?ia(p,a):c?aa(c,a):ua(l||t,a));else if(ta(n,u(a)))d(a,n,r,t,g)||(c?aa(c,a):p?ia(p,a):ua(l||t,a));else if(h(a,n,r,t,g));else if(c&&p){const e=o.length;e>0&&o[e-1].followingNode!==a.followingNode&&pa(o,n,r),o.push(a)}else c?aa(c,a):p?ia(p,a):ua(l||t,a)})),pa(o,n,r),e.forEach((e=>{delete e.precedingNode,delete e.enclosingNode,delete e.followingNode}))},printComments:function(e,t,n,r){const o=e.getValue(),i=t(e),u=o&&o.comments;if(!u||0===u.length)return ha(e,n,i);const a=[],s=[r?";":"",i];return e.each((e=>{const t=e.getValue(),{leading:r,trailing:o}=t;if(r){const r=function(e,t){const n=e.getValue(),r=fa(e,t);if(!r)return"";if(t.printer.isBlockComment&&t.printer.isBlockComment(n)){const e=ta(t.originalText,t.locEnd(n))?ta(t.originalText,t.locStart(n),{backwards:!0})?Xu:Hu:" ";return zu([r,e])}return zu([r,Xu])}(e,n);if(!r)return;a.push(r);const o=n.originalText,i=na(o,ra(o,n.locEnd(t)));!1!==i&&ta(o,i)&&a.push(Xu)}else o&&s.push(function(e,t){const n=e.getValue(),r=fa(e,t);if(!r)return"";const{printer:o,originalText:i,locStart:u}=t,a=o.isBlockComment&&o.isBlockComment(n);if(ta(i,u(n),{backwards:!0})){const e=oa(i,n,u);return Qu(zu([Xu,e?Xu:"",r]))}let s=zu([" ",r]);return a||(s=zu([Qu(s),Yu])),s}(e,n))}),"comments"),ha(e,n,zu(a.concat(s)))},printDanglingComments:function(e,t,n,r){const o=[],i=e.getValue();return i&&i.comments?(e.each((e=>{const n=e.getValue();!n||n.leading||n.trailing||r&&!r(n)||o.push(fa(e,t))}),"comments"),0===o.length?"":n?Zu(Xu,o):Ku(zu([Xu,Zu(Xu,o)]))):""},getSortedChildNodes:ca,ensureAllCommentsPrinted:function(e){e&&e.forEach((e=>{if(!e.printed)throw new Error('Comment "'+e.value.trim()+'" was not printed. Please report this error!');delete e.printed}))}};function ma(e,t){const n=ya(e.stack,t);return-1===n?null:e.stack[n]}function ya(e,t){for(let n=e.length-1;n>=0;n-=2){const r=e[n];if(r&&!Array.isArray(r)&&--t<0)return n}return-1}var Da=class{constructor(e){this.stack=[e]}getName(){const{stack:e}=this,{length:t}=e;return t>1?e[t-2]:null}getValue(){return se(this.stack)}getNode(e=0){return ma(this,e)}getParentNode(e=0){return ma(this,e+1)}call(e,...t){const{stack:n}=this,{length:r}=n;let o=se(n);for(const e of t)o=o[e],n.push(e,o);const i=e(this);return n.length=r,i}callParent(e,t=0){const n=ya(this.stack,t+1),r=this.stack.splice(n+1),o=e(this);return this.stack.push(...r),o}each(e,...t){const{stack:n}=this,{length:r}=n;let o=se(n);for(const e of t)o=o[e],n.push(e,o);for(let t=0;t<o.length;++t)n.push(t,o[t]),e(this,t),n.length-=2;n.length=r}map(e,...t){const n=[];return this.each(((t,r)=>{n[r]=e(t,r)}),...t),n}match(...e){let t=this.stack.length-1,n=null,r=this.stack[t--];for(const o of e){if(void 0===r)return!1;let e=null;if("number"==typeof n&&(e=n,n=this.stack[t--],r=this.stack[t--]),o&&!o(r,n,e))return!1;n=this.stack[t--],r=this.stack[t--]}return!0}};const{utils:{stripTrailingHardline:va}}=cn,{normalize:Ea}=Wu;var ba=function(e,t,n,r){if(n.printer.embed&&"auto"===n.embeddedLanguageFormatting)return n.printer.embed(e,t,((e,t,o)=>function(e,t,n,r,{stripTrailingHardline:o=!1}={}){const i=Ea(Object.assign({},n,t,{parentParser:n.parser,embeddedInHtml:!(!n.embeddedInHtml&&"html"!==n.parser&&"vue"!==n.parser&&"angular"!==n.parser&&"lwc"!==n.parser),originalText:e}),{passThrough:!0}),u=Mu.parse(e,i),{ast:a}=u;e=u.text;const s=a.comments;delete a.comments,ga.attach(s,a,e,i),i[Symbol.for("comments")]=s||[],i[Symbol.for("tokens")]=a.tokens||[];const c=r(a,i);return ga.ensureAllCommentsPrinted(s),o?"string"==typeof c?c.replace(/(?:\r?\n)*$/,""):va(c,!0):c}(e,t,n,r,o)),n)};const Ca=cn,Aa=Ca.builders,{concat:Fa,hardline:xa,addAlignmentToDoc:Sa}=Aa,wa=Ca.utils;function Ta(e,t,n=0){const{printer:r}=t;r.preprocess&&(e=r.preprocess(e,t));const o=new Map;let i=function e(n,i){const u=n.getValue(),a=u&&"object"==typeof u&&void 0===i;if(a&&o.has(u))return o.get(u);let s;return s=r.willPrintOwnComments&&r.willPrintOwnComments(n,t)?Ba(n,t,e,i):ga.printComments(n,(n=>Ba(n,t,e,i)),t,i&&i.needsSemi),a&&o.set(u,s),s}(new Da(e));return n>0&&(i=Sa(Fa([xa,i]),n,t.tabWidth)),wa.propagateBreaks(i),i}function Ba(e,t,n,r){Gu.ok(e instanceof Da);const o=e.getValue(),{printer:i}=t;if(i.hasPrettierIgnore&&i.hasPrettierIgnore(e))return function(e,t){const{originalText:n,[Symbol.for("comments")]:r,locStart:o,locEnd:i}=t,u=o(e),a=i(e);for(const e of r)o(e)>=u&&i(e)<=a&&(e.printed=!0);return n.slice(u,a)}(o,t);if(o)try{const r=ba(e,n,t,Ta);if(r)return r}catch(e){if(Le.PRETTIER_DEBUG)throw e}return i.print(e,t,n,r)}var Na=Ta;function ka(e,t,n,r,o=[]){if(!(t<n.locStart(e)||t>n.locEnd(e))){for(const i of ga.getSortedChildNodes(e,n)){const u=ka(i,t,n,r,[e,...o]);if(u)return u}return!r||r(e)?{node:e,parentNodes:o}:void 0}}const Pa=new Set(["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral"]),Oa=new Set(["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"]);function _a(e,t){if(null==t)return!1;switch(e.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":case"espree":case"meriyah":return function(e){return"Directive"===e||"TypeAlias"===e||"TSExportAssignment"===e||e.startsWith("Declare")||e.startsWith("TSDeclare")||e.endsWith("Statement")||e.endsWith("Declaration")}(t.type);case"json":return Pa.has(t.type);case"graphql":return Oa.has(t.kind);case"vue":return"root"!==t.tag}return!1}var Ia={calculateRange:function(e,t,n){const r=e.slice(t.rangeStart,t.rangeEnd),o=Math.max(t.rangeStart+r.search(/\S/),t.rangeStart);let i;for(i=t.rangeEnd;i>t.rangeStart&&!/\S/.test(e[i-1]);--i);const u=ka(n,o,t,(e=>_a(t,e))),a=ka(n,i,t,(e=>_a(t,e)));if(!u||!a)return{rangeStart:0,rangeEnd:0};const{startNode:s,endNode:c}=function(e,t,n){let r=e.node,o=t.node;if(r===o)return{startNode:r,endNode:o};for(const r of t.parentNodes){if(!("Program"!==r.type&&"File"!==r.type&&n.locStart(r)>=n.locStart(e.node)))break;o=r}for(const o of e.parentNodes){if(!("Program"!==o.type&&"File"!==o.type&&n.locEnd(o)<=n.locEnd(t.node)))break;r=o}return{startNode:r,endNode:o}}(u,a,t);return{rangeStart:Math.min(t.locStart(s),t.locStart(c)),rangeEnd:Math.max(t.locEnd(s),t.locEnd(c))}},findNodeAtOffset:ka};const{printer:{printDocToString:La},debug:{printDocToDebug:Ma}}=cn,{getAlignmentSize:ja}=It,{guessEndOfLine:Ra,convertEndOfLineToChars:Va,countEndOfLineChars:qa,normalizeEndOfLine:$a}=Lt,Wa=Wu.normalize,Ua=Symbol("cursor");function Ja(e,t,n){const r=t.comments;return r&&(delete t.comments,ga.attach(r,t,e,n)),n[Symbol.for("comments")]=r||[],n[Symbol.for("tokens")]=t.tokens||[],n.originalText=e,r}function Ga(e,t,n){if(!e||!e.trim().length)return{formatted:"",cursorOffset:-1};n=n||0;const{ast:r,text:o}=Mu.parse(e,t);if(t.cursorOffset>=0){const e=Ia.findNodeAtOffset(r,t.cursorOffset,t);e&&e.node&&(t.cursorNode=e.node)}const i=Ja(o,r,t),u=Na(r,t,n),a=La(u,t);if(ga.ensureAllCommentsPrinted(i),n>0){const e=a.formatted.trim();void 0!==a.cursorNodeStart&&(a.cursorNodeStart-=a.formatted.indexOf(e)),a.formatted=e+Va(t.endOfLine)}if(t.cursorOffset>=0){let e,n,r,i,u;if(t.cursorNode&&a.cursorNodeText?(e=t.locStart(t.cursorNode),n=o.slice(e,t.locEnd(t.cursorNode)),r=t.cursorOffset-e,i=a.cursorNodeStart,u=a.cursorNodeText):(e=0,n=o,r=t.cursorOffset,i=0,u=a.formatted),n===u)return{formatted:a.formatted,cursorOffset:i+r};const s=n.split("");s.splice(r,0,Ua);const c=u.split(""),l=G.diffArrays(s,c);let p=i;for(const e of l)if(e.removed){if(e.value.includes(Ua))break}else p+=e.count;return{formatted:a.formatted,cursorOffset:p}}return{formatted:a.formatted,cursorOffset:-1}}function za(e,t,n){return"number"!=typeof t||isNaN(t)||t<0||t>e.length?n:t}function Ha(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:o}=t;return n=za(e,n,-1),r=za(e,r,0),o=za(e,o,e.length),Object.assign({},t,{cursorOffset:n,rangeStart:r,rangeEnd:o})}function Xa(e,t){let{cursorOffset:n,rangeStart:r,rangeEnd:o,endOfLine:i}=Ha(e,t);const u="\ufeff"===e.charAt(0);if(u&&(e=e.slice(1),n--,r--,o--),"auto"===i&&(i=Ra(e)),e.includes("\r")){const t=t=>qa(e.slice(0,Math.max(t,0)),"\r\n");n-=t(n),r-=t(r),o-=t(o),e=$a(e)}return{hasBOM:u,text:e,options:Ha(e,Object.assign({},t,{cursorOffset:n,rangeStart:r,rangeEnd:o,endOfLine:i}))}}function Ya(e,t){let{hasBOM:n,text:r,options:o}=Xa(e,Wa(t));const i=Mu.resolveParser(o),u=!i.hasPragma||i.hasPragma(r);if(o.requirePragma&&!u)return{formatted:e,cursorOffset:t.cursorOffset};let a;return o.rangeStart>0||o.rangeEnd<r.length?a=function(e,t){const{ast:n,text:r}=Mu.parse(e,t),{rangeStart:o,rangeEnd:i}=Ia.calculateRange(r,t,n),u=r.slice(o,i),a=Math.min(o,r.lastIndexOf("\n",o)+1),s=r.slice(a,o).match(/^\s*/)[0],c=ja(s,t.tabWidth),l=Ga(u,Object.assign({},t,{rangeStart:0,rangeEnd:1/0,cursorOffset:t.cursorOffset>o&&t.cursorOffset<i?t.cursorOffset-o:-1,endOfLine:"lf"}),c),p=l.formatted.trimEnd();let{cursorOffset:f}=t;f>=i?f=t.cursorOffset+(p.length-u.length):l.cursorOffset>=0&&(f=l.cursorOffset+o);let d=r.slice(0,o)+p+r.slice(i);if("lf"!==t.endOfLine){const e=Va(t.endOfLine);f>=0&&"\r\n"===e&&(f+=qa(d.slice(0,f),"\n")),d=d.replace(/\n/g,e)}return{formatted:d,cursorOffset:f}}(r,o):(!u&&o.insertPragma&&o.printer.insertPragma&&(r=o.printer.insertPragma(r)),a=Ga(r,o)),n&&(a.formatted="\ufeff"+a.formatted,a.cursorOffset>=0&&a.cursorOffset++),a}var Ka={formatWithCursor:Ya,parse(e,t,n){const{text:r,options:o}=Xa(e,Wa(t)),i=Mu.parse(r,o);return n&&(i.ast=Uu(i.ast,o)),i},formatAST(e,t){t=Wa(t);const n=Na(e,t);return La(n,t)},formatDoc:(e,t)=>Ya(Ma(e),Object.assign({},t,{parser:"babel"})).formatted,printToDoc(e,t){t=Wa(t);const{ast:n,text:r}=Mu.parse(e,t);return Ja(r,n,t),Na(n,t)},printDocToString:(e,t)=>La(e,Wa(t))};const{getMaxContinuousCount:Qa,getStringWidth:Za,getAlignmentSize:es,getIndentSize:ts,skip:ns,skipWhitespace:rs,skipSpaces:os,skipNewline:is,skipToLineEnd:us,skipEverythingButNewLine:as,skipInlineComment:ss,skipTrailingComment:cs,hasNewline:ls,hasNewlineInRange:ps,hasSpaces:fs,isNextLineEmpty:ds,isNextLineEmptyAfterIndex:hs,isPreviousLineEmpty:gs,getNextNonSpaceNonCommentCharacterIndex:ms,makeString:ys,addLeadingComment:Ds,addDanglingComment:vs,addTrailingComment:Es}=It;var bs={getMaxContinuousCount:Qa,getStringWidth:Za,getAlignmentSize:es,getIndentSize:ts,skip:ns,skipWhitespace:rs,skipSpaces:os,skipNewline:is,skipToLineEnd:us,skipEverythingButNewLine:as,skipInlineComment:ss,skipTrailingComment:cs,hasNewline:ls,hasNewlineInRange:ps,hasSpaces:fs,isNextLineEmpty:ds,isNextLineEmptyAfterIndex:hs,isPreviousLineEmpty:gs,getNextNonSpaceNonCommentCharacterIndex:ms,makeString:ys,addLeadingComment:Ds,addDanglingComment:vs,addTrailingComment:Es},Cs=function(t,n){const{languageId:r}=t,o=e(t,["languageId"]);return Object.assign({linguistLanguageId:r},o,n(t))},As=Me((function(e){!function(){function t(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:t,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()})),Fs=Me((function(e){!function(){var t,n,r,o,i,u;function a(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},r=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],o=new Array(128),u=0;u<128;++u)o[u]=u>=97&&u<=122||u>=65&&u<=90||36===u||95===u;for(i=new Array(128),u=0;u<128;++u)i[u]=u>=97&&u<=122||u>=65&&u<=90||u>=48&&u<=57||36===u||95===u;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?o[e]:n.NonAsciiIdentifierStart.test(a(e))},isIdentifierPartES5:function(e){return e<128?i[e]:n.NonAsciiIdentifierPart.test(a(e))},isIdentifierStartES6:function(e){return e<128?o[e]:t.NonAsciiIdentifierStart.test(a(e))},isIdentifierPartES6:function(e){return e<128?i[e]:t.NonAsciiIdentifierPart.test(a(e))}}}()})),xs=Me((function(e){!function(){var t=Fs;function n(e,t){return!(!t&&"yield"===e)&&r(e,t)}function r(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function o(e,t){return"null"===e||"true"===e||"false"===e||n(e,t)}function i(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function u(e){var n,r,o;if(0===e.length)return!1;if(o=e.charCodeAt(0),!t.isIdentifierStartES5(o))return!1;for(n=1,r=e.length;n<r;++n)if(o=e.charCodeAt(n),!t.isIdentifierPartES5(o))return!1;return!0}function a(e){var n,r,o,i,u;if(0===e.length)return!1;for(u=t.isIdentifierStartES6,n=0,r=e.length;n<r;++n){if(55296<=(o=e.charCodeAt(n))&&o<=56319){if(++n>=r)return!1;if(!(56320<=(i=e.charCodeAt(n))&&i<=57343))return!1;o=1024*(o-55296)+(i-56320)+65536}if(!u(o))return!1;u=t.isIdentifierPartES6}return!0}e.exports={isKeywordES5:n,isKeywordES6:r,isReservedWordES5:o,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:u,isIdentifierNameES6:a,isIdentifierES5:function(e,t){return u(e)&&!o(e,t)},isIdentifierES6:function(e,t){return a(e)&&!i(e,t)}}}()}));const Ss=Me((function(e,t){t.ast=As,t.code=Fs,t.keyword=xs})).keyword.isIdentifierNameES5,{getLast:ws,hasNewline:Ts,hasNewlineInRange:Bs,skipWhitespace:Ns}=It,{locStart:ks,locEnd:Ps,hasSameLocStart:Os}=Qi,_s="(?:(?=.)\\s)",Is=new RegExp("^".concat(_s,"*:")),Ls=new RegExp("^".concat(_s,"*::"));function Ms(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e))return e.some((e=>Ms(e,t)));const n=t(e);return"boolean"==typeof n?n:Object.keys(e).some((n=>Ms(e[n],t)))}function js(e){return"AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||"CallExpression"===e.type||"OptionalCallExpression"===e.type||"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||"TSAsExpression"===e.type||"TSNonNullExpression"===e.type}function Rs(e){return"Block"===e.type||"CommentBlock"===e.type||"MultiLine"===e.type}const Vs=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function qs(e){return e&&Vs.has(e.type)}function $s(e){return"BooleanLiteral"===e.type||"DirectiveLiteral"===e.type||"Literal"===e.type||"NullLiteral"===e.type||"NumericLiteral"===e.type||"BigIntLiteral"===e.type||"DecimalLiteral"===e.type||"RegExpLiteral"===e.type||"StringLiteral"===e.type||"TemplateLiteral"===e.type||"TSTypeLiteral"===e.type||"JSXText"===e.type}function Ws(e){return"NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function Us(e){return"StringLiteral"===e.type||"Literal"===e.type&&"string"==typeof e.value}function Js(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type}function Gs(e){return!("CallExpression"!==e.type&&"OptionalCallExpression"!==e.type||"Identifier"!==e.callee.type||"async"!==e.callee.name&&"inject"!==e.callee.name&&"fakeAsync"!==e.callee.name)}function zs(e){return"JSXElement"===e.type||"JSXFragment"===e.type}function Hs(e){return"get"===e.kind||"set"===e.kind}function Xs(e){return Hs(e)||Os(e,e.value)}const Ys=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]),Ks=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]),Qs=/^(skip|[fx]?(it|describe|test))$/;function Zs(e){return"CallExpression"===e.type||"OptionalCallExpression"===e.type}const ec=new RegExp("([ \n\r\t]+)"),tc=new RegExp("[^ \n\r\t]");function nc(e){return $s(e)&&(tc.test(uc(e))||!/\n/.test(uc(e)))}function rc(e,t){return zs(t)?mc(t):t.comments&&t.comments.some((t=>t.leading&&Ts(e,Ps(t))))}function oc(e){return/^(\d+|\d+\.\d+)$/.test(e)}function ic(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function uc(e){return e.extra?e.extra.raw:e.raw}const ac={"==":!0,"!=":!0,"===":!0,"!==":!0},sc={"*":!0,"/":!0,"%":!0},cc={">>":!0,">>>":!0,"<<":!0},lc={};function pc(e){return lc[e]}[["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(((e,t)=>{e.forEach((e=>{lc[e]=t}))}));const fc=new WeakMap;function dc(e){if(fc.has(e))return fc.get(e);const t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),fc.set(e,t),t}const hc=new WeakMap;function gc(e){return"prettier-ignore"===e.value.trim()}function mc(e){return e&&(e.comments&&e.comments.length>0&&e.comments.some((e=>gc(e)&&!e.unignore))||e.prettierIgnore)}function yc(e){return mc(e.getValue())}var Dc={classChildNeedsASIProtection:function(e){if(e){if(e.static||e.accessibility)return!1;if(!e.computed){const t=e.key&&e.key.name;if("in"===t||"instanceof"===t)return!0}switch(e.type){case"ClassProperty":case"FieldDefinition":case"TSAbstractClassProperty":return e.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{const t=e.value?e.value.async:e.async,n=e.value?e.value.generator:e.generator;return!(t||"get"===e.kind||"set"===e.kind||!e.computed&&!n)}case"TSIndexSignature":return!0;default:return!1}}},classPropMayCauseASIProblems:function(e){const t=e.getNode();if("ClassProperty"!==t.type&&"FieldDefinition"!==t.type)return!1;const n=t.key&&t.key.name;return!("static"!==n&&"get"!==n&&"set"!==n||t.value||t.typeAnnotation)||void 0},getFunctionParameters:dc,iterateFunctionParametersPath:function(e,t){const n=e.getValue();let r=0;const o=e=>t(e,r++);n.this&&e.call(o,"this"),Array.isArray(n.parameters)?e.each(o,"parameters"):Array.isArray(n.params)&&e.each(o,"params"),n.rest&&e.call(o,"rest")},getCallArguments:function(e){if(hc.has(e))return hc.get(e);const t="ImportExpression"===e.type?[e.source]:e.arguments;return hc.set(e,t),t},iterateCallArgumentsPath:function(e,t){"ImportExpression"===e.getValue().type?e.call((e=>t(e,0)),"source"):e.each(t,"arguments")},hasRestParameter:function(e){if(e.rest)return!0;const t=dc(e);return t.length>0&&"RestElement"===ws(t).type},getLeftSidePathName:function(e,t){if(t.expressions)return["expressions",0];if(t.left)return["left"];if(t.test)return["test"];if(t.object)return["object"];if(t.callee)return["callee"];if(t.tag)return["tag"];if(t.argument)return["argument"];if(t.expression)return["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function(e){const t=e.getParentNode();return"declaration"===e.getName()&&qs(t)?t:null},getTypeScriptMappedTypeModifier:function(e,t){return"+"===e?"+"+t:"-"===e?"-"+t:t},hasDanglingComments:function(e){return e.comments&&e.comments.some((e=>!e.leading&&!e.trailing))},hasFlowAnnotationComment:function(e){return e&&Rs(e[0])&&Ls.test(e[0].value)},hasFlowShorthandAnnotationComment:function(e){return e.extra&&e.extra.parenthesized&&e.trailingComments&&Rs(e.trailingComments[0])&&Is.test(e.trailingComments[0].value)},hasLeadingComment:function(e){return e.comments&&e.comments.some((e=>e.leading))},hasLeadingOwnLineComment:rc,hasNakedLeftSide:js,hasNewlineBetweenOrAfterDecorators:function(e,t){return Bs(t.originalText,ks(e.decorators[0]),Ps(ws(e.decorators)))||Ts(t.originalText,Ps(ws(e.decorators)))},hasNgSideEffect:function(e){return Ms(e.getValue(),(e=>{switch(e.type){case void 0:return!1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return!0}}))},hasNode:Ms,hasPrettierIgnore:function(e){return yc(e)||function(e){const t=e.getValue(),n=e.getParentNode();if(!(n&&t&&zs(t)&&zs(n)))return!1;let r=null;for(let e=n.children.indexOf(t);e>0;e--){const t=n.children[e-1];if("JSXText"!==t.type||nc(t)){r=t;break}}return r&&"JSXExpressionContainer"===r.type&&"JSXEmptyExpression"===r.expression.type&&r.expression.comments&&r.expression.comments.some((e=>gc(e)))}(e)},hasTrailingComment:function(e){return e.comments&&e.comments.some((e=>e.trailing))},hasTrailingLineComment:function(e){return e.comments&&e.comments.some((e=>e.trailing&&!Rs(e)))},hasIgnoreComment:yc,hasNodeIgnoreComment:mc,identity:function(e){return e},isBinaryish:function(e){return Ys.has(e.type)},isBlockComment:Rs,isLineComment:function(e){return"Line"===e.type||"CommentLine"===e.type||"SingleLine"===e.type||"HashbangComment"===e.type||"HTMLOpen"===e.type||"HTMLClose"===e.type},isPrettierIgnoreComment:gc,isCallOrOptionalCallExpression:Zs,isEmptyJSXElement:function(e){if(0===e.children.length)return!0;if(e.children.length>1)return!1;const t=e.children[0];return $s(t)&&!nc(t)},isExportDeclaration:qs,isFlowAnnotationComment:function(e,t){const n=ks(t),r=Ns(e,Ps(t));return!1!==r&&"/*"===e.slice(n,n+2)&&"*/"===e.slice(r,r+2)},isFunctionCompositionArgs:function(e){if(e.length<=1)return!1;let t=0;for(const n of e)if(Js(n)){if(t+=1,t>1)return!0}else if(Zs(n))for(const e of n.arguments)if(Js(e))return!0;return!1},isFunctionNotation:Xs,isFunctionOrArrowExpression:Js,isGetterOrSetter:Hs,isJestEachTemplateLiteral:function(e,t){const n=/^[fx]?(describe|it|test)$/;return"TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))},isJSXNode:zs,isJSXWhitespaceExpression:function(e){return"JSXExpressionContainer"===e.type&&$s(e.expression)&&" "===e.expression.value&&!e.expression.comments},isLastStatement:function(e){const t=e.getParentNode();if(!t)return!0;const n=e.getValue(),r=(t.body||t.consequent).filter((e=>"EmptyStatement"!==e.type));return r[r.length-1]===n},isLiteral:$s,isLongCurriedCallExpression:function(e){const t=e.getValue(),n=e.getParentNode();return Zs(t)&&Zs(n)&&n.callee===t&&t.arguments.length>n.arguments.length&&n.arguments.length>0},isSimpleCallArgument:function e(t,n){if(n>=2)return!1;const r=t=>e(t,n+1),o="Literal"===t.type&&"regex"in t&&t.regex.pattern||"RegExpLiteral"===t.type&&t.pattern;return!(o&&o.length>5)&&("Literal"===t.type||"BigIntLiteral"===t.type||"DecimalLiteral"===t.type||"BooleanLiteral"===t.type||"NullLiteral"===t.type||"NumericLiteral"===t.type||"RegExpLiteral"===t.type||"StringLiteral"===t.type||"Identifier"===t.type||"ThisExpression"===t.type||"Super"===t.type||"PrivateName"===t.type||"ArgumentPlaceholder"===t.type||"Import"===t.type||("TemplateLiteral"===t.type?t.expressions.every(r):"ObjectExpression"===t.type?t.properties.every((e=>!e.computed&&(e.shorthand||e.value&&r(e.value)))):"ArrayExpression"===t.type?t.elements.every((e=>null===e||r(e))):"ImportExpression"===t.type?r(t.source):"CallExpression"===t.type||"OptionalCallExpression"===t.type||"NewExpression"===t.type?e(t.callee,n)&&t.arguments.every(r):"MemberExpression"===t.type||"OptionalMemberExpression"===t.type?e(t.object,n)&&e(t.property,n):"UnaryExpression"!==t.type||"!"!==t.operator&&"-"!==t.operator?"TSNonNullExpression"===t.type&&e(t.expression,n):e(t.argument,n)))},isMeaningfulJSXText:nc,isMemberExpressionChain:function e(t){return("MemberExpression"===t.type||"OptionalMemberExpression"===t.type)&&("Identifier"===t.object.type||e(t.object))},isMemberish:function(e){return"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"BindExpression"===e.type&&Boolean(e.object)},isNgForOf:function(e,t,n){return"NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t&&"NGMicrosyntaxLet"===n.body[0].type&&null===n.body[0].value},isNumericLiteral:Ws,isObjectType:function(e){return"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type},isObjectTypePropertyAFunction:function(e){return!("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||"FunctionTypeAnnotation"!==e.value.type||e.static||Xs(e))},isSimpleType:function(e){return!(!e||("GenericTypeAnnotation"!==e.type&&"TSTypeReference"!==e.type||e.typeParameters)&&!Ks.has(e.type))},isSimpleNumber:oc,isSimpleTemplateLiteral:function(e){let t="expressions";"TSTemplateLiteralType"===e.type&&(t="types");const n=e[t];return 0!==n.length&&n.every((e=>{if(e.comments)return!1;if("Identifier"===e.type||"ThisExpression"===e.type)return!0;if("MemberExpression"===e.type||"OptionalMemberExpression"===e.type){let t=e;for(;"MemberExpression"===t.type||"OptionalMemberExpression"===t.type;){if("Identifier"!==t.property.type&&"Literal"!==t.property.type&&"StringLiteral"!==t.property.type&&"NumericLiteral"!==t.property.type)return!1;if(t=t.object,t.comments)return!1}return"Identifier"===t.type||"ThisExpression"===t.type}return!1}))},isStringLiteral:Us,isStringPropSafeToUnquote:function(e,t){return"json"!==t.parser&&Us(e.key)&&uc(e.key).slice(1,-1)===e.key.value&&(Ss(e.key.value)&&!(("typescript"===t.parser||"babel-ts"===t.parser)&&"ClassProperty"===e.type)||oc(e.key.value)&&String(Number(e.key.value))===e.key.value&&("babel"===t.parser||"espree"===t.parser||"meriyah"===t.parser))},isTemplateOnItsOwnLine:function(e,t){return("TemplateLiteral"===e.type&&ic(e)||"TaggedTemplateExpression"===e.type&&ic(e.quasi))&&!Ts(t,ks(e),{backwards:!0})},isTestCall:function e(t,n){if("CallExpression"!==t.type)return!1;if(1===t.arguments.length){if(Gs(t)&&n&&e(n))return Js(t.arguments[0]);if("Identifier"===(r=t).callee.type&&/^(before|after)(Each|All)$/.test(r.callee.name)&&1===r.arguments.length)return Gs(t.arguments[0])}else if((2===t.arguments.length||3===t.arguments.length)&&("Identifier"===t.callee.type&&Qs.test(t.callee.name)||function(e){return("MemberExpression"===e.callee.type||"OptionalMemberExpression"===e.callee.type)&&"Identifier"===e.callee.object.type&&"Identifier"===e.callee.property.type&&Qs.test(e.callee.object.name)&&("only"===e.callee.property.name||"skip"===e.callee.property.name)}(t))&&(function(e){return"TemplateLiteral"===e.type}(t.arguments[0])||Us(t.arguments[0])))return!(t.arguments[2]&&!Ws(t.arguments[2]))&&((2===t.arguments.length?Js(t.arguments[1]):function(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(t.arguments[1])&&dc(t.arguments[1]).length<=1)||Gs(t.arguments[1]));var r;return!1},isTheOnlyJSXElementInMarkdown:function(e,t){if("markdown"!==e.parentParser&&"mdx"!==e.parentParser)return!1;const n=t.getNode();if(!n.expression||!zs(n.expression))return!1;const r=t.getParentNode();return"Program"===r.type&&1===r.body.length},isTSXFile:function(e){return e.filepath&&/\.tsx$/i.test(e.filepath)},isTypeAnnotationAFunction:function(e){return!("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||Os(e,e.typeAnnotation))},matchJsxWhitespaceRegex:ec,needsHardlineAfterDanglingComment:function(e){if(!e.comments)return!1;const t=ws(e.comments.filter((e=>!e.leading&&!e.trailing)));return t&&!Rs(t)},rawText:uc,returnArgumentHasLeadingComment:function(e,t){if(rc(e.originalText,t))return!0;if(js(t)){let r,o=t;for(;r=(n=o).expressions?n.expressions[0]:n.left||n.test||n.callee||n.object||n.tag||n.argument||n.expression;)if(o=r,rc(e.originalText,o))return!0}var n;return!1},shouldPrintComma:function(e,t="es5"){return"es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)},isBitwiseOperator:function(e){return!!cc[e]||"|"===e||"^"===e||"&"===e},shouldFlatten:function(e,t){return!(pc(t)!==pc(e)||"**"===e||ac[e]&&ac[t]||"%"===t&&sc[e]||"%"===e&&sc[t]||t!==e&&sc[t]&&sc[e]||cc[e]&&cc[t])},startsWithNoLookaheadToken:function e(t,n){switch((t=function(e){for(;e.left;)e=e.left;return e}(t)).type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return n;case"ObjectExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return e(t.object,n);case"TaggedTemplateExpression":return"FunctionExpression"!==t.tag.type&&e(t.tag,n);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==t.callee.type&&e(t.callee,n);case"ConditionalExpression":return e(t.test,n);case"UpdateExpression":return!t.prefix&&e(t.argument,n);case"BindExpression":return t.object&&e(t.object,n);case"SequenceExpression":return e(t.expressions[0],n);case"TSAsExpression":return e(t.expression,n);default:return!1}},getPrecedence:pc};const{getLast:vc,hasNewline:Ec,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:bc,getNextNonSpaceNonCommentCharacter:Cc,hasNewlineInRange:Ac,addLeadingComment:Fc,addTrailingComment:xc,addDanglingComment:Sc,getNextNonSpaceNonCommentCharacterIndex:wc}=It,{isBlockComment:Tc,getFunctionParameters:Bc,isPrettierIgnoreComment:Nc,isJSXNode:kc,hasFlowShorthandAnnotationComment:Pc,hasFlowAnnotationComment:Oc,hasIgnoreComment:_c}=Dc,{locStart:Ic,locEnd:Lc}=Qi;function Mc(e,t){const n=(e.body||e.properties).find((({type:e})=>"EmptyStatement"!==e));n?Fc(n,t):Sc(e,t)}function jc(e,t){"BlockStatement"===e.type?Mc(e,t):Fc(e,t)}function Rc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:o}=e;return!(!r||"IfStatement"!==r.type||!o||(")"===Cc(t,e,Lc)?(xc(n,e),0):n===r.consequent&&o===r.alternate?("BlockStatement"===n.type?xc(n,e):Sc(r,e),0):"BlockStatement"===o.type?(Mc(o,e),0):"IfStatement"===o.type?(jc(o.consequent,e),0):r.consequent!==o||(Fc(o,e),0)))}function Vc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:o}=e;return!(!r||"WhileStatement"!==r.type||!o||(")"===Cc(t,e,Lc)?(xc(n,e),0):"BlockStatement"===o.type?(Mc(o,e),0):r.body!==o||(Fc(o,e),0)))}function qc(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TryStatement"!==n.type&&"CatchClause"!==n.type||!r||("CatchClause"===n.type&&t?(xc(t,e),0):"BlockStatement"===r.type?(Mc(r,e),0):"TryStatement"===r.type?(jc(r.finalizer,e),0):"CatchClause"!==r.type||(jc(r.body,e),0)))}function $c(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;if(n&&("ClassDeclaration"===n.type||"ClassExpression"===n.type||"DeclareClass"===n.type||"DeclareInterface"===n.type||"InterfaceDeclaration"===n.type||"TSInterfaceDeclaration"===n.type)){if(n.decorators&&n.decorators.length>0&&(!r||"Decorator"!==r.type))return xc(n.decorators[n.decorators.length-1],e),!0;if(n.body&&r===n.body)return Mc(n.body,e),!0;if(r)for(const o of["implements","extends","mixins"])if(n[o]&&r===n[o][0])return!t||t!==n.id&&t!==n.typeParameters&&t!==n.superClass?Sc(n,e,o):xc(t,e),!0}return!1}function Wc(e,t){const{precedingNode:n,enclosingNode:r}=e;return(r&&n&&("Property"===r.type||"TSDeclareMethod"===r.type||"TSAbstractMethodDefinition"===r.type)&&"Identifier"===n.type&&r.key===n&&":"!==Cc(t,n,Lc)||!(!n||!r||"Decorator"!==n.type||"ClassMethod"!==r.type&&"ClassProperty"!==r.type&&"FieldDefinition"!==r.type&&"TSAbstractClassProperty"!==r.type&&"TSAbstractMethodDefinition"!==r.type&&"TSDeclareMethod"!==r.type&&"MethodDefinition"!==r.type))&&(xc(n,e),!0)}function Uc(e,t){const{precedingNode:n,enclosingNode:r,followingNode:o}=e;if(n&&"FunctionTypeParam"===n.type&&r&&"FunctionTypeAnnotation"===r.type&&o&&"FunctionTypeParam"!==o.type)return xc(n,e),!0;if(n&&("Identifier"===n.type||"AssignmentPattern"===n.type)&&r&&Xc(r)&&")"===Cc(t,e,Lc))return xc(n,e),!0;if(r&&"FunctionDeclaration"===r.type&&o&&"BlockStatement"===o.type){const n=(()=>{const e=Bc(r);if(0!==e.length)return bc(t,Lc(vc(e)));const n=bc(t,Lc(r.id));return!1!==n&&bc(t,n+1)})();if(Ic(e)>n)return Mc(o,e),!0}return!1}function Jc(e){const{enclosingNode:t}=e;return!(!t||"ImportSpecifier"!==t.type||(Fc(t,e),0))}function Gc(e){const{enclosingNode:t}=e;return!(!t||"LabeledStatement"!==t.type||(Fc(t,e),0))}function zc(e,t,n){const{enclosingNode:r}=e;return t&&t.body&&0===t.body.length?(n?Sc(t,e):Fc(t,e),!0):!(!r||"Program"!==r.type||0!==r.body.length||!r.directives||0!==r.directives.length||(n?Sc(r,e):Fc(r,e),0))}function Hc(e){const{enclosingNode:t,followingNode:n}=e;if(Nc(e)&&t&&"TSMappedType"===t.type&&n&&"TSTypeParameter"===n.type&&n.constraint)return t.prettierIgnore=!0,e.unignore=!0,!0}function Xc(e){return"ArrowFunctionExpression"===e.type||"FunctionExpression"===e.type||"FunctionDeclaration"===e.type||"ObjectMethod"===e.type||"ClassMethod"===e.type||"TSDeclareFunction"===e.type||"TSCallSignatureDeclaration"===e.type||"TSConstructSignatureDeclaration"===e.type||"TSMethodSignature"===e.type||"TSConstructorType"===e.type||"TSFunctionType"===e.type||"TSDeclareMethod"===e.type}function Yc(e){return Tc(e)&&"*"===e.value[0]&&/@type\b/.test(e.value)}var Kc={handleOwnLineComment:function(e,t,n,r,o){return Hc(e)||Uc(e,t)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"MemberExpression"!==t.type&&"OptionalMemberExpression"!==t.type||!n||"Identifier"!==n.type||(Fc(t,e),0))}(e)||Rc(e,t)||Vc(e,t)||qc(e)||$c(e)||Jc(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ForInStatement"!==t.type&&"ForOfStatement"!==t.type||(Fc(t,e),0))}(e)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!n||"UnionTypeAnnotation"!==n.type&&"TSUnionType"!==n.type?(r&&("UnionTypeAnnotation"===r.type||"TSUnionType"===r.type)&&Nc(e)&&(r.types[0].prettierIgnore=!0,e.unignore=!0),!1):(Nc(e)&&(r.prettierIgnore=!0,e.unignore=!0),!!t&&(xc(t,e),!0))}(e)||zc(e,r,o)||function(e,t){const{precedingNode:n,enclosingNode:r}=e;return!!(n&&"ImportSpecifier"===n.type&&r&&"ImportDeclaration"===r.type&&Ec(t,Lc(e)))&&(xc(n,e),!0)}(e,t)||function(e){const{enclosingNode:t}=e;return!(!t||"AssignmentPattern"!==t.type||(Fc(t,e),0))}(e)||Wc(e,t)||Gc(e)},handleEndOfLineComment:function(e,t,n,r,o){return function(e){const{followingNode:t}=e;return!(!t||!Yc(e)||(Fc(t,e),0))}(e)||Uc(e,t)||function(e,t){const{precedingNode:n,enclosingNode:r,followingNode:o}=e,i=n&&!Ac(t,Lc(n),Ic(e));return!(n&&i||!r||"ConditionalExpression"!==r.type&&"TSConditionalType"!==r.type||!o||(Fc(o,e),0))}(e,t)||Jc(e)||Rc(e,t)||Vc(e,t)||qc(e)||$c(e)||Gc(e)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!!(n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&t&&n.callee===t&&n.arguments.length>0)&&(Fc(n.arguments[0],e),!0)}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"Property"!==t.type&&"ObjectProperty"!==t.type||(Fc(t,e),0))}(e)||zc(e,r,o)||function(e){const{enclosingNode:t}=e;return!(!t||"TypeAlias"!==t.type||(Fc(t,e),0))}(e)||function(e){const{enclosingNode:t,followingNode:n}=e;return!(!t||"VariableDeclarator"!==t.type&&"AssignmentExpression"!==t.type||!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&"TemplateLiteral"!==n.type&&"TaggedTemplateExpression"!==n.type&&!Tc(e)||(Fc(n,e),0))}(e)},handleRemainingComment:function(e,t,n,r,o){return!!(Hc(e)||Rc(e,t)||Vc(e,t)||function(e){const{precedingNode:t,enclosingNode:n}=e;return!(!n||"ObjectProperty"!==n.type&&"Property"!==n.type||!n.shorthand||n.key!==t||"AssignmentPattern"!==n.value.type||(xc(n.value.left,e),0))}(e)||function(e,t){if(")"!==Cc(t,e,Lc))return!1;const{enclosingNode:n}=e;return n&&(Xc(n)&&0===Bc(n).length||("CallExpression"===n.type||"OptionalCallExpression"===n.type||"NewExpression"===n.type)&&0===n.arguments.length)?(Sc(n,e),!0):!(!n||"MethodDefinition"!==n.type||0!==Bc(n.value).length||(Sc(n.value,e),0))}(e,t)||Wc(e,t)||zc(e,r,o)||function(e,t){const{enclosingNode:n}=e;if(!n||"ArrowFunctionExpression"!==n.type)return!1;const r=wc(t,e,Lc);return!1!==r&&"=>"===t.slice(r,r+2)&&(Sc(n,e),!0)}(e,t)||function(e,t){if("("!==Cc(t,e,Lc))return!1;const{precedingNode:n,enclosingNode:r}=e;return!(!n||!r||"FunctionDeclaration"!==r.type&&"FunctionExpression"!==r.type&&"ClassMethod"!==r.type&&"MethodDefinition"!==r.type&&"ObjectMethod"!==r.type||(xc(n,e),0))}(e,t)||function(e){const{precedingNode:t,enclosingNode:n,followingNode:r}=e;return!(!n||"TSMappedType"!==n.type||(r&&"TSTypeParameter"===r.type&&r.name?(Fc(r.name,e),0):!t||"TSTypeParameter"!==t.type||!t.constraint||(xc(t.constraint,e),0)))}(e)||function(e){const{enclosingNode:t}=e;return!(!t||"ContinueStatement"!==t.type&&"BreakStatement"!==t.type||t.label||(xc(t,e),0))}(e)||function(e,t){const{enclosingNode:n,followingNode:r}=e;return!(r||!n||"TSMethodSignature"!==n.type&&"TSDeclareFunction"!==n.type&&"TSAbstractMethodDefinition"!==n.type||";"!==Cc(t,e,Lc)||(xc(n,e),0))}(e,t))},hasLeadingComment:function(e,t=(()=>!0)){return e.leadingComments?e.leadingComments.some(t):!!e.comments&&e.comments.some((e=>e.leading&&t(e)))},isTypeCastComment:Yc,getGapRegex:function(e){if(e&&"BinaryExpression"!==e.type&&"LogicalExpression"!==e.type)return/^[\s&(|]*$/},getCommentChildNodes:function(e,t){if(("typescript"===t.parser||"flow"===t.parser||"espree"===t.parser||"meriyah"===t.parser)&&"MethodDefinition"===e.type&&e.value&&"FunctionExpression"===e.value.type&&0===Bc(e.value).length&&!e.value.returnType&&(!e.value.typeParameters||0===e.value.typeParameters.length)&&e.value.body)return[...e.decorators||[],e.key,e.value.body]},willPrintOwnComments:function(e){const t=e.getValue(),n=e.getParentNode();return(t&&(kc(t)||Pc(t)||n&&("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&(Oc(t.leadingComments)||Oc(t.trailingComments)))||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!_c(e)||"UnionTypeAnnotation"===n.type||"TSUnionType"===n.type)}};const{getStringWidth:Qc,getIndentSize:Zc}=It,{builders:{concat:el,join:tl,hardline:nl,softline:rl,group:ol,indent:il,align:ul,lineSuffixBoundary:al,addAlignmentToDoc:sl},printer:{printDocToString:cl},utils:{mapDoc:ll}}=cn,{isBinaryish:pl,isJestEachTemplateLiteral:fl,isSimpleTemplateLiteral:dl}=Dc;function hl(e){return e.replace(/([\\`]|\${)/g,"\\$1")}var gl={printTemplateLiteral:function(e,t,n){const r=e.getValue();if("TemplateLiteral"===r.type&&fl(r,e.getParentNode())){const r=function(e,t,n){const r=e.getNode(),o=r.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(o.length>1||o.some((e=>0!==e.length))){t.__inJestEach=!0;const i=e.map(n,"expressions");t.__inJestEach=!1;const u=[],a=i.map((e=>"${"+cl(e,Object.assign({},t,{printWidth:1/0,endOfLine:"lf"})).formatted+"}")),s=[{hasLineBreak:!1,cells:[]}];for(let e=1;e<r.quasis.length;e++){const t=s[s.length-1],n=a[e-1];t.cells.push(n),n.includes("\n")&&(t.hasLineBreak=!0),r.quasis[e].value.raw.includes("\n")&&s.push({hasLineBreak:!1,cells:[]})}const c=Math.max(o.length,...s.map((e=>e.cells.length))),l=Array.from({length:c}).fill(0),p=[{cells:o},...s.filter((e=>0!==e.cells.length))];for(const{cells:e}of p.filter((e=>!e.hasLineBreak)))e.forEach(((e,t)=>{l[t]=Math.max(l[t],Qc(e))}));return u.push(al,"`",il(el([nl,tl(nl,p.map((e=>tl(" | ",e.cells.map(((t,n)=>e.hasLineBreak?t:t+" ".repeat(l[n]-Qc(t))))))))])),nl,"`"),el(u)}}(e,n,t);if(r)return r}let o="expressions";"TSTemplateLiteralType"===r.type&&(o="types");const i=[];let u=e.map(t,o);const a=dl(r);return a&&(u=u.map((e=>cl(e,Object.assign({},n,{printWidth:1/0})).formatted))),i.push(al,"`"),e.each((e=>{const s=e.getName();if(i.push(t(e)),s<u.length){const{tabWidth:t}=n,c=e.getValue(),l=Zc(c.value.raw,t);let p=u[s];if(!a){const e=r[o][s];(e.comments&&e.comments.length||"MemberExpression"===e.type||"OptionalMemberExpression"===e.type||"ConditionalExpression"===e.type||"SequenceExpression"===e.type||"TSAsExpression"===e.type||pl(e))&&(p=el([il(el([rl,p])),rl]))}const f=0===l&&c.value.raw.endsWith("\n")?ul(-1/0,p):sl(p,l,t);i.push(ol(el(["${",f,al,"}"])))}}),"quasis"),i.push("`"),el(i)},printTemplateExpressions:function(e,t){return e.map((e=>function(e,t){const n=e.getValue();let r=t(e);return n.comments&&n.comments.length&&(r=ol(el([il(el([rl,r])),rl]))),el(["${",r,al,"}"])}(e,t)),"expressions")},escapeTemplateCharacters:function(e,t){return ll(e,(e=>{if(!e.parts)return e;const n=e.parts.map((e=>"string"==typeof e?t?e.replace(/(\\*)`/g,"$1$1\\`"):hl(e):e));return Object.assign({},e,{parts:n})}))},uncookTemplateElementValue:hl};const{builders:{indent:ml,softline:yl,literalline:Dl,concat:vl,dedentToRoot:El}}=cn,{escapeTemplateCharacters:bl}=gl;const{builders:{indent:Cl,hardline:Al,softline:Fl,concat:xl},utils:{mapDoc:Sl,replaceNewlinesWithLiterallines:wl}}=cn,{printTemplateExpressions:Tl}=gl;const{builders:{indent:Bl,join:Nl,hardline:kl,concat:Pl}}=cn,{escapeTemplateCharacters:Ol,printTemplateExpressions:_l}=gl;function Il(e){const t=[];let n=!1;return e.map((e=>e.trim())).forEach(((e,r,o)=>{""!==e&&(""===o[r-1]&&n?t.push(Pl([kl,e])):t.push(e),n=!0)})),0===t.length?null:Nl(kl,t)}const{builders:{indent:Ll,line:Ml,hardline:jl,concat:Rl,group:Vl},utils:{mapDoc:ql}}=cn,{printTemplateExpressions:$l,uncookTemplateElementValue:Wl}=gl;let Ul=0;const{isBlockComment:Jl}=Dc,{hasLeadingComment:Gl}=Kc;const zl=[(e,t)=>"ObjectExpression"===e.type&&"properties"===t,(e,t)=>"CallExpression"===e.type&&"Identifier"===e.callee.type&&"Component"===e.callee.name&&"arguments"===t,(e,t)=>"Decorator"===e.type&&"expression"===t];function Hl(e){return"Identifier"===e.type&&"styled"===e.name}function Xl(e){return/^[A-Z]/.test(e.object.name)&&"extend"===e.property.name}function Yl(e,t){return Gl(e,(e=>Jl(e)&&e.value===" ".concat(t," ")))}const{isBlockComment:Kl}=Dc,Ql=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]);function Zl(e,t,n){if("Program"===e.type&&delete t.sourceType,"BigIntLiteral"!==e.type&&"BigIntLiteralTypeAnnotation"!==e.type||t.value&&(t.value=t.value.toLowerCase()),"BigIntLiteral"!==e.type&&"Literal"!==e.type||t.bigint&&(t.bigint=t.bigint.toLowerCase()),"DecimalLiteral"===e.type&&(t.value=Number(t.value)),"EmptyStatement"===e.type)return null;if("JSXText"===e.type)return null;if("JSXExpressionContainer"===e.type&&("Literal"===e.expression.type||"StringLiteral"===e.expression.type)&&" "===e.expression.value)return null;"Property"!==e.type&&"ObjectProperty"!==e.type&&"MethodDefinition"!==e.type&&"ClassProperty"!==e.type&&"ClassMethod"!==e.type&&"FieldDefinition"!==e.type&&"TSDeclareMethod"!==e.type&&"TSPropertySignature"!==e.type&&"ObjectTypeProperty"!==e.type||"object"!=typeof e.key||!e.key||"Literal"!==e.key.type&&"NumericLiteral"!==e.key.type&&"StringLiteral"!==e.key.type&&"Identifier"!==e.key.type||delete t.key,"OptionalMemberExpression"===e.type&&!1===e.optional&&(t.type="MemberExpression",delete t.optional),"JSXElement"===e.type&&"style"===e.openingElement.name.name&&e.openingElement.attributes.some((e=>"jsx"===e.name.name))&&t.children.filter((e=>"JSXExpressionContainer"===e.type&&"TemplateLiteral"===e.expression.type)).map((e=>e.expression)).reduce(((e,t)=>e.concat(t.quasis)),[]).forEach((e=>delete e.value)),"JSXAttribute"===e.type&&"css"===e.name.name&&"JSXExpressionContainer"===e.value.type&&"TemplateLiteral"===e.value.expression.type&&t.value.expression.quasis.forEach((e=>delete e.value)),"JSXAttribute"===e.type&&e.value&&"Literal"===e.value.type&&/["']|&quot;|&apos;/.test(e.value.value)&&(t.value.value=t.value.value.replace(/["']|&quot;|&apos;/g,'"'));const r=e.expression||e.callee;if("Decorator"===e.type&&"CallExpression"===r.type&&"Component"===r.callee.name&&1===r.arguments.length){const n=e.expression.arguments[0].properties;t.expression.arguments[0].properties.forEach(((e,t)=>{let r=null;switch(n[t].key.name){case"styles":"ArrayExpression"===e.value.type&&(r=e.value.elements[0]);break;case"template":"TemplateLiteral"===e.value.type&&(r=e.value)}r&&r.quasis.forEach((e=>delete e.value))}))}"TaggedTemplateExpression"!==e.type||"MemberExpression"!==e.tag.type&&("Identifier"!==e.tag.type||"gql"!==e.tag.name&&"graphql"!==e.tag.name&&"css"!==e.tag.name&&"md"!==e.tag.name&&"markdown"!==e.tag.name&&"html"!==e.tag.name)&&"CallExpression"!==e.tag.type||t.quasi.quasis.forEach((e=>delete e.value)),"TemplateLiteral"===e.type&&((e.leadingComments&&e.leadingComments.some((e=>Kl(e)&&["GraphQL","HTML"].some((t=>e.value===" ".concat(t," ")))))||"CallExpression"===n.type&&"graphql"===n.callee.name)&&t.quasis.forEach((e=>delete e.value)),e.leadingComments||t.quasis.forEach((e=>{e.value&&delete e.value.cooked}))),"InterpreterDirective"===e.type&&(t.value=t.value.trimEnd())}Zl.ignoredProperties=Ql;var ep=Zl;const tp=e=>{if("string"!=typeof e)throw new TypeError("Expected a string");const t=e.match(/(?:\r?\n)/g)||[];if(0===t.length)return;const n=t.filter((e=>"\r\n"===e)).length;return n>t.length-n?"\r\n":"\n"};var np=tp;np.graceful=e=>"string"==typeof e&&tp(e)||"\n";var rp=Me((function(e,t){function n(){const e=Rr;return n=function(){return e},e}function r(){const e=(t=np)&&t.__esModule?t:{default:t};var t;return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t.extract=function(e){const t=e.match(u);return t?t[0].trimLeft():""},t.strip=function(e){const t=e.match(u);return t&&t[0]?e.substring(t[0].length):e},t.parse=function(e){return d(e).pragmas},t.parseWithComments=d,t.print=function({comments:e="",pragmas:t={}}){const o=(0,r().default)(e)||n().EOL,i=Object.keys(t),u=i.map((e=>h(e,t[e]))).reduce(((e,t)=>e.concat(t)),[]).map((e=>" * "+e+o)).join("");if(!e){if(0===i.length)return"";if(1===i.length&&!Array.isArray(t[i[0]])){const e=t[i[0]];return"".concat("/**"," ").concat(h(i[0],e)[0]).concat(" */")}}const a=e.split(o).map((e=>"".concat(" *"," ").concat(e))).join(o)+o;return"/**"+o+(e?a:"")+(e&&i.length?" *"+o:"")+u+" */"};const o=/\*\/$/,i=/^\/\*\*/,u=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,a=/(^|\s+)\/\/([^\r\n]*)/g,s=/^(\r?\n)+/,c=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,l=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,p=/(\r?\n|^) *\* ?/g,f=[];function d(e){const t=(0,r().default)(e)||n().EOL;e=e.replace(i,"").replace(o,"").replace(p,"$1");let u="";for(;u!==e;)u=e,e=e.replace(c,"".concat(t,"$1 $2").concat(t));e=e.replace(s,"").trimRight();const d=Object.create(null),h=e.replace(l,"").replace(s,"").trimRight();let g;for(;g=l.exec(e);){const e=g[2].replace(a,"");"string"==typeof d[g[1]]||Array.isArray(d[g[1]])?d[g[1]]=f.concat(d[g[1]],e):d[g[1]]=e}return{comments:h,pragmas:d}}function h(e,t){return f.concat(t).map((t=>"@".concat(e," ").concat(t).trim()))}}));const{parseWithComments:op,strip:ip,extract:up,print:ap}=rp,{getShebang:sp}=It,{normalizeEndOfLine:cp}=Lt;function lp(e){const t=sp(e);t&&(e=e.slice(t.length+1));const n=up(e),{pragmas:r,comments:o}=op(n);return{shebang:t,text:e,pragmas:r,comments:o}}var pp={hasPragma:function(e){const t=Object.keys(lp(e).pragmas);return t.includes("prettier")||t.includes("format")},insertPragma:function(e){const{shebang:t,text:n,pragmas:r,comments:o}=lp(e),i=ip(n),u=ap({pragmas:Object.assign({format:""},r),comments:o.trimStart()});return(t?"".concat(t,"\n"):"")+cp(u)+(i.startsWith("\n")?"\n":"\n\n")+i}};const{getFunctionParameters:fp,getLeftSidePathName:dp,hasFlowShorthandAnnotationComment:hp,hasNakedLeftSide:gp,hasNode:mp,isBitwiseOperator:yp,startsWithNoLookaheadToken:Dp,shouldFlatten:vp,getPrecedence:Ep}=Dc;function bp(e,t){const n=e.getParentNode();if(!n)return!1;const r=e.getName(),o=e.getNode();if(t.__isInHtmlInterpolation&&!t.bracketSpacing&&function(e){switch(e.type){case"ObjectExpression":return!0;default:return!1}}(o)&&Cp(e))return!0;if(function(e){return"BlockStatement"===e.type||"BreakStatement"===e.type||"ClassBody"===e.type||"ClassDeclaration"===e.type||"ClassMethod"===e.type||"ClassProperty"===e.type||"FieldDefinition"===e.type||"ClassPrivateProperty"===e.type||"ContinueStatement"===e.type||"DebuggerStatement"===e.type||"DeclareClass"===e.type||"DeclareExportAllDeclaration"===e.type||"DeclareExportDeclaration"===e.type||"DeclareFunction"===e.type||"DeclareInterface"===e.type||"DeclareModule"===e.type||"DeclareModuleExports"===e.type||"DeclareVariable"===e.type||"DoWhileStatement"===e.type||"EnumDeclaration"===e.type||"ExportAllDeclaration"===e.type||"ExportDefaultDeclaration"===e.type||"ExportNamedDeclaration"===e.type||"ExpressionStatement"===e.type||"ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type||"FunctionDeclaration"===e.type||"IfStatement"===e.type||"ImportDeclaration"===e.type||"InterfaceDeclaration"===e.type||"LabeledStatement"===e.type||"MethodDefinition"===e.type||"ReturnStatement"===e.type||"SwitchStatement"===e.type||"ThrowStatement"===e.type||"TryStatement"===e.type||"TSDeclareFunction"===e.type||"TSEnumDeclaration"===e.type||"TSImportEqualsDeclaration"===e.type||"TSInterfaceDeclaration"===e.type||"TSModuleDeclaration"===e.type||"TSNamespaceExportDeclaration"===e.type||"TypeAlias"===e.type||"VariableDeclaration"===e.type||"WhileStatement"===e.type||"WithStatement"===e.type}(o))return!1;if("flow"!==t.parser&&hp(e.getValue()))return!0;if("Identifier"===o.type)return!!(o.extra&&o.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(o.name));switch(n.type){case"ParenthesizedExpression":return!1;case"ClassDeclaration":case"ClassExpression":if("superClass"===r&&("ArrowFunctionExpression"===o.type||"AssignmentExpression"===o.type||"AwaitExpression"===o.type||"BinaryExpression"===o.type||"ConditionalExpression"===o.type||"LogicalExpression"===o.type||"NewExpression"===o.type||"ObjectExpression"===o.type||"ParenthesizedExpression"===o.type||"SequenceExpression"===o.type||"TaggedTemplateExpression"===o.type||"UnaryExpression"===o.type||"UpdateExpression"===o.type||"YieldExpression"===o.type))return!0;break;case"ExportDefaultDeclaration":return Ap(e,t)||"SequenceExpression"===o.type;case"Decorator":if("expression"===r){let e=!1,t=!1,n=o;for(;n;)switch(n.type){case"MemberExpression":t=!0,n=n.object;break;case"CallExpression":if(t||e)return!0;e=!0,n=n.callee;break;case"Identifier":return!1;default:return!0}return!0}break;case"ExpressionStatement":if(Dp(o,!0))return!0;break;case"ArrowFunctionExpression":if("body"===r&&"SequenceExpression"!==o.type&&Dp(o,!1))return!0}switch(o.type){case"SpreadElement":case"SpreadProperty":return"object"===r&&"MemberExpression"===n.type;case"UpdateExpression":if("UnaryExpression"===n.type)return o.prefix&&("++"===o.operator&&"+"===n.operator||"--"===o.operator&&"-"===n.operator);case"UnaryExpression":switch(n.type){case"UnaryExpression":return o.operator===n.operator&&("+"===o.operator||"-"===o.operator);case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"TaggedTemplateExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"BinaryExpression":return"left"===r&&"**"===n.operator;case"TSNonNullExpression":return!0;default:return!1}case"BinaryExpression":if("UpdateExpression"===n.type||"PipelineTopicExpression"===n.type&&"|>"===o.operator)return!0;if("in"===o.operator&&function(e){let t=0,n=e.getValue();for(;n;){const r=e.getParentNode(t++);if(r&&"ForStatement"===r.type&&r.init===n)return!0;n=r}return!1}(e))return!0;if("|>"===o.operator&&o.extra&&o.extra.parenthesized){const t=e.getParentNode(1);if("BinaryExpression"===t.type&&"|>"===t.operator)return!0}case"TSTypeAssertion":case"TSAsExpression":case"LogicalExpression":switch(n.type){case"ConditionalExpression":return"TSAsExpression"===o.type;case"CallExpression":case"NewExpression":case"OptionalCallExpression":return"callee"===r;case"ClassExpression":case"ClassDeclaration":return"superClass"===r;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSAsExpression":case"TSNonNullExpression":case"UpdateExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"AssignmentExpression":return"left"===r&&("TSTypeAssertion"===o.type||"TSAsExpression"===o.type);case"LogicalExpression":if("LogicalExpression"===o.type)return n.operator!==o.operator;case"BinaryExpression":{const{operator:e,type:t}=o;if(!e&&"TSTypeAssertion"!==t)return!0;const i=Ep(e),u=n.operator,a=Ep(u);return a>i||"right"===r&&a===i||a===i&&!vp(u,e)||(a<i&&"%"===e?"+"===u||"-"===u:!!yp(u))}default:return!1}case"SequenceExpression":switch(n.type){case"ReturnStatement":case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==r;case"ArrowFunctionExpression":return"body"!==r;default:return!0}case"YieldExpression":if("UnaryExpression"===n.type||"AwaitExpression"===n.type||"TSAsExpression"===n.type||"TSNonNullExpression"===n.type)return!0;case"AwaitExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"ConditionalExpression":return"test"===r;case"BinaryExpression":return!(!o.argument&&"|>"===n.operator);default:return!1}case"TSJSDocFunctionType":case"TSConditionalType":if("extendsType"===r&&"TSConditionalType"===n.type)return!0;case"TSFunctionType":case"TSConstructorType":if("checkType"===r&&"TSConditionalType"===n.type)return!0;case"TSUnionType":case"TSIntersectionType":if("TSUnionType"===n.type||"TSIntersectionType"===n.type)return!0;case"TSInferType":if("TSInferType"===o.type&&"TSRestType"===n.type)return!1;case"TSTypeOperator":return"TSArrayType"===n.type||"TSOptionalType"===n.type||"TSRestType"===n.type||"objectType"===r&&"TSIndexedAccessType"===n.type||"TSTypeOperator"===n.type||"TSTypeAnnotation"===n.type&&/^TSJSDoc/.test(e.getParentNode(1).type);case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===n.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"ArrayTypeAnnotation"===n.type||"NullableTypeAnnotation"===n.type||"IntersectionTypeAnnotation"===n.type||"UnionTypeAnnotation"===n.type;case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===n.type;case"FunctionTypeAnnotation":{const t="NullableTypeAnnotation"===n.type?e.getParentNode(1):n;return"UnionTypeAnnotation"===t.type||"IntersectionTypeAnnotation"===t.type||"ArrayTypeAnnotation"===t.type||"NullableTypeAnnotation"===t.type||"FunctionTypeParam"===n.type&&null===n.name&&fp(o).some((e=>e.typeAnnotation&&"NullableTypeAnnotation"===e.typeAnnotation.type))}case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof o.value&&"ExpressionStatement"===n.type&&!n.directive){const t=e.getParentNode(1);return"Program"===t.type||"BlockStatement"===t.type}return"object"===r&&"MemberExpression"===n.type&&"number"==typeof o.value;case"AssignmentExpression":{const t=e.getParentNode(1);return"body"===r&&"ArrowFunctionExpression"===n.type||("key"!==r||"ClassProperty"!==n.type&&"FieldDefinition"!==n.type||!n.computed)&&("init"!==r&&"update"!==r||"ForStatement"!==n.type)&&("ExpressionStatement"===n.type?"ObjectPattern"===o.left.type:!("key"===r&&"TSPropertySignature"===n.type||"AssignmentExpression"===n.type||"SequenceExpression"===n.type&&t&&"ForStatement"===t.type&&(t.init===n||t.update===n)||"value"===r&&"Property"===n.type&&t&&"ObjectPattern"===t.type&&t.properties.includes(n)||"NGChainedExpression"===n.type))}case"ConditionalExpression":switch(n.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSNonNullExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"ConditionalExpression":return"test"===r;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;default:return!1}case"FunctionExpression":switch(n.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"TaggedTemplateExpression":return!0;default:return!1}case"ArrowFunctionExpression":switch(n.type){case"PipelineTopicExpression":return!(!o.extra||!o.extra.parenthesized);case"BinaryExpression":return"|>"!==n.operator||o.extra&&o.extra.parenthesized;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===r;case"MemberExpression":case"OptionalMemberExpression":return"object"===r;case"TSAsExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return!0;case"ConditionalExpression":return"test"===r;default:return!1}case"ClassExpression":switch(n.type){case"NewExpression":return"callee"===r;default:return!1}case"OptionalMemberExpression":case"OptionalCallExpression":{const t=e.getParentNode(1);if("object"===r&&"MemberExpression"===n.type||"callee"===r&&("CallExpression"===n.type||"NewExpression"===n.type)||"TSNonNullExpression"===n.type&&"MemberExpression"===t.type&&t.object===n)return!0}case"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)){let e=o;for(;e;)switch(e.type){case"CallExpression":case"OptionalCallExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":e=e.object;break;case"TaggedTemplateExpression":e=e.tag;break;case"TSNonNullExpression":e=e.expression;break;default:return!1}}return!1;case"BindExpression":return"callee"===r&&("BindExpression"===n.type||"NewExpression"===n.type)||"object"===r&&("MemberExpression"===n.type||"OptionalMemberExpression"===n.type);case"NGPipeExpression":return!("NGRoot"===n.type||"NGMicrosyntaxExpression"===n.type||!("ObjectProperty"!==n.type||o.extra&&o.extra.parenthesized)||"ArrayExpression"===n.type||("CallExpression"===n.type||"OptionalCallExpression"===n.type)&&n.arguments[r]===o||"right"===r&&"NGPipeExpression"===n.type||"property"===r&&"MemberExpression"===n.type||"AssignmentExpression"===n.type);case"JSXFragment":case"JSXElement":return"callee"===r||"left"===r&&"BinaryExpression"===n.type&&"<"===n.operator||"ArrayExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"AssignmentExpression"!==n.type&&"AssignmentPattern"!==n.type&&"BinaryExpression"!==n.type&&"CallExpression"!==n.type&&"NewExpression"!==n.type&&"ConditionalExpression"!==n.type&&"ExpressionStatement"!==n.type&&"JsExpressionRoot"!==n.type&&"JSXAttribute"!==n.type&&"JSXElement"!==n.type&&"JSXExpressionContainer"!==n.type&&"JSXFragment"!==n.type&&"LogicalExpression"!==n.type&&"ObjectProperty"!==n.type&&"OptionalCallExpression"!==n.type&&"Property"!==n.type&&"ReturnStatement"!==n.type&&"ThrowStatement"!==n.type&&"TypeCastExpression"!==n.type&&"VariableDeclarator"!==n.type&&"YieldExpression"!==n.type;case"TypeAnnotation":return"returnType"===r&&"ArrowFunctionExpression"===n.type&&function(e){return mp(e,(e=>"ObjectTypeAnnotation"===e.type&&mp(e,(e=>"FunctionTypeAnnotation"===e.type||void 0))||void 0))}(o)}return!1}function Cp(e){const t=e.getValue(),n=e.getParentNode(),r=e.getName();switch(n.type){case"NGPipeExpression":if("number"==typeof r&&n.arguments[r]===t&&n.arguments.length-1===r)return e.callParent(Cp);break;case"ObjectProperty":if("value"===r){const t=e.getParentNode(1);return t.properties[t.properties.length-1]===n}break;case"BinaryExpression":case"LogicalExpression":if("right"===r)return e.callParent(Cp);break;case"ConditionalExpression":if("alternate"===r)return e.callParent(Cp);break;case"UnaryExpression":if(n.prefix)return e.callParent(Cp)}return!1}function Ap(e,t){const n=e.getValue(),r=e.getParentNode();return"FunctionExpression"===n.type||"ClassExpression"===n.type?"ExportDefaultDeclaration"===r.type||!bp(e,t):!(!gp(n)||"ExportDefaultDeclaration"!==r.type&&bp(e,t))&&e.call((e=>Ap(e,t)),...dp(e,n))}var Fp=bp;const{builders:{concat:xp,join:Sp,line:wp,group:Tp,softline:Bp,indent:Np}}=cn;var kp={isVueEventBindingExpression:function e(t){switch(t.type){case"MemberExpression":switch(t.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return e(t.object)}return!1;case"Identifier":return!0;default:return!1}},printHtmlBinding:function(e,t,n){const r=e.getValue();if(t.__onHtmlBindingRoot&&null===e.getName()&&t.__onHtmlBindingRoot(r,t),"File"===r.type)return t.__isVueForBindingLeft?e.call((e=>{const t=Sp(xp([",",wp]),e.map(n,"params")),{params:r}=e.getValue();return 1===r.length?t:xp(["(",Np(xp([Bp,Tp(t)])),Bp,")"])}),"program","body",0):t.__isVueBindings?e.call((e=>Sp(xp([",",wp]),e.map(n,"params"))),"program","body",0):void 0}},Pp=function(e,t){switch(t.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":return Object.assign({},e,{type:t.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:e,comments:[],rootMarker:t.rootMarker});default:return e}};const{builders:{concat:Op,group:_p,indent:Ip,join:Lp,line:Mp,hardline:jp}}=cn,{hasNewlineBetweenOrAfterDecorators:Rp,getParentExportDeclaration:Vp}=Dc;var qp={printOptionalToken:function(e){const t=e.getValue();return!t.optional||"Identifier"===t.type&&t===e.getParentNode().key?"":"OptionalCallExpression"===t.type||"OptionalMemberExpression"===t.type&&t.computed?"?.":"?"},printFunctionTypeParameters:function(e,t,n){const r=e.getValue();return r.typeArguments?e.call(n,"typeArguments"):r.typeParameters?e.call(n,"typeParameters"):""},printBindExpressionCallee:function(e,t,n){return Op(["::",e.call(n,"callee")])},printTypeScriptModifiers:function(e,t,n){const r=e.getValue();return r.modifiers&&r.modifiers.length?Op([Lp(" ",e.map(n,"modifiers"))," "]):""},printDecorators:function(e,t,n){const r=e.getValue();return _p(Op([Lp(Mp,e.map(n,"decorators")),Rp(r,t)?jp:Mp]))},printFlowDeclaration:function(e,t){const n=Vp(e);return n?(Gu.strictEqual(n.type,"DeclareExportDeclaration"),t):Op(["declare ",t])},adjustClause:function(e,t,n){return"EmptyStatement"===e.type?";":"BlockStatement"===e.type||n?Op([" ",t]):Ip(Op([Mp,t]))}};const{builders:{concat:$p,softline:Wp,group:Up,indent:Jp,join:Gp,line:zp,ifBreak:Hp,hardline:Xp}}=cn,{printDanglingComments:Yp}=ga,{hasDanglingComments:Kp,shouldPrintComma:Qp,needsHardlineAfterDanglingComment:Zp}=Dc,{locStart:ef,hasSameLoc:tf}=Qi;function nf(e,t,n){const r=e.getValue();if(!r.source)return"";const o=[];return of(r,t)||o.push(" from"),o.push(" ",e.call(n,"source")),$p(o)}function rf(e,t,n){const r=e.getValue();if(of(r,t))return"";const o=[" "];if(r.specifiers&&r.specifiers.length>0){const i=[],u=[];e.each((t=>{const r=e.getValue().type;if("ExportNamespaceSpecifier"===r||"ExportDefaultSpecifier"===r||"ImportNamespaceSpecifier"===r||"ImportDefaultSpecifier"===r)i.push(n(t));else{if("ExportSpecifier"!==r&&"ImportSpecifier"!==r)throw new Error("Unknown specifier type ".concat(JSON.stringify(r)));u.push(n(t))}}),"specifiers"),o.push(Gp(", ",i)),0!==u.length&&(0!==i.length&&o.push(", "),u.length>1||i.length>0||r.specifiers.some((e=>e.comments))?o.push(Up($p(["{",Jp($p([t.bracketSpacing?zp:Wp,Gp($p([",",zp]),u)])),Hp(Qp(t)?",":""),t.bracketSpacing?zp:Wp,"}"]))):o.push($p(["{",t.bracketSpacing?" ":"",$p(u),t.bracketSpacing?" ":"","}"])))}else o.push("{}");return $p(o)}function of(e,t){const{type:n,importKind:r,source:o,specifiers:i}=e;return!("ImportDeclaration"!==n||Array.isArray(i)&&i.length>0||"type"===r||/{\s*}/.test(t.originalText.slice(ef(e),ef(o))))}function uf(e,t,n){const r=e.getNode();return Array.isArray(r.assertions)&&0!==r.assertions.length?$p([" assert {",t.bracketSpacing?" ":"",Gp(", ",e.map(n,"assertions")),t.bracketSpacing?" ":"","}"]):""}var af={printImportDeclaration:function(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[],{importKind:u}=r;return i.push("import"),u&&"value"!==u&&i.push(" ",u),i.push(rf(e,t,n),nf(e,t,n),uf(e,t,n)),i.push(o),$p(i)},printExportDeclaration:function(e,t,n){const r=e.getValue(),o=[],{type:i,exportKind:u,declaration:a}=r;return"DeclareExportDeclaration"===i&&o.push("declare "),o.push("export"),(r.default||"ExportDefaultDeclaration"===i)&&o.push(" default"),Kp(r)&&(o.push(" ",Yp(e,t,!0)),Zp(r)&&o.push(Xp)),a?o.push(" ",e.call(n,"declaration")):o.push("type"===u?" type":"",rf(e,t,n),nf(e,t,n),uf(e,t,n)),function(e,t){if(!t.semi)return!1;const{type:n,declaration:r}=e,o=e.default||"ExportDefaultDeclaration"===n;if(!r)return!0;const{type:i}=r;return!(!o||"ClassDeclaration"===i||"FunctionDeclaration"===i||"TSInterfaceDeclaration"===i||"DeclareClass"===i||"DeclareFunction"===i||"TSDeclareFunction"===i||"EnumDeclaration"===i)}(r,t)&&o.push(";"),$p(o)},printExportAllDeclaration:function(e,t,n){const r=e.getValue();let o=t.semi?";":"";const i=[],{type:u,exportKind:a,exported:s}=r;return"DeclareExportAllDeclaration"===u&&(i.push("declare "),o=""),i.push("export"),"type"===a&&i.push(" type"),i.push(" *"),s&&i.push(" as ",e.call(n,"exported")),i.push(nf(e,t,n),uf(e,t,n),o),$p(i)},printModuleSpecifier:function(e,t,n){const r=e.getNode(),{type:o,importKind:i}=r,u=[];"ImportSpecifier"===o&&i&&u.push(i," ");const a=o.startsWith("Import"),s=a?"imported":"local",c=a?"local":"exported";let l="",p="";return"ExportNamespaceSpecifier"===o||"ImportNamespaceSpecifier"===o?l="*":r[s]&&(l=e.call(n,s)),!r[c]||r[s]&&tf(r[s],r[c])||(p=e.call(n,c)),u.push(l,l&&p?" as ":"",p),$p(u)}};const{hasNewlineInRange:sf}=It,{isJSXNode:cf,isBlockComment:lf}=Dc,{locStart:pf,locEnd:ff}=Qi,{builders:{concat:df,line:hf,softline:gf,group:mf,indent:yf,align:Df,ifBreak:vf,dedent:Ef,breakParent:bf}}=cn;var Cf=function(e,t,n,r){const o=e.getValue(),i=o[r.consequentNodePropertyName],u=o[r.alternateNodePropertyName],a=[];let s=!1;const c=e.getParentNode(),l=c.type===r.conditionalNodeType&&r.testNodePropertyNames.some((e=>c[e]===o));let p,f,d=c.type===r.conditionalNodeType&&!l,h=0;do{f=p||o,p=e.getParentNode(h),h++}while(p&&p.type===r.conditionalNodeType&&r.testNodePropertyNames.every((e=>p[e]!==f)));const g=p||c,m=f;if(r.shouldCheckJsx&&(cf(o[r.testNodePropertyNames[0]])||cf(i)||cf(u)||function(e){return function(e){const t=[];return function e(n){"ConditionalExpression"===n.type?(e(n.test),e(n.consequent),e(n.alternate)):t.push(n)}(e),t}(e).some(cf)}(m))){s=!0,d=!0;const t=e=>df([vf("(",""),yf(df([gf,e])),gf,vf(")","")]),o=e=>"NullLiteral"===e.type||"Literal"===e.type&&null===e.value||"Identifier"===e.type&&"undefined"===e.name;a.push(" ? ",o(i)?e.call(n,r.consequentNodePropertyName):t(e.call(n,r.consequentNodePropertyName))," : ",u.type===r.conditionalNodeType||o(u)?e.call(n,r.alternateNodePropertyName):t(e.call(n,r.alternateNodePropertyName)))}else{const s=df([hf,"? ",i.type===r.conditionalNodeType?vf("","("):"",Df(2,e.call(n,r.consequentNodePropertyName)),i.type===r.conditionalNodeType?vf("",")"):"",hf,": ",u.type===r.conditionalNodeType?e.call(n,r.alternateNodePropertyName):Df(2,e.call(n,r.alternateNodePropertyName))]);a.push(c.type!==r.conditionalNodeType||c[r.alternateNodePropertyName]===o||l?s:t.useTabs?Ef(yf(s)):Df(Math.max(0,t.tabWidth-2),s))}const y=$i([...r.testNodePropertyNames.map((e=>o[e].comments)),i.comments,u.comments]).filter(Boolean).some((e=>lf(e)&&sf(t.originalText,pf(e),ff(e)))),D=!s&&("MemberExpression"===c.type||"OptionalMemberExpression"===c.type||"NGPipeExpression"===c.type&&c.left===o)&&!c.computed,v=(e=>c===g?mf(e,{shouldBreak:y}):y?df([e,bf]):e)(df([].concat((E=df(r.beforeParts()),c.type===r.conditionalNodeType&&c[r.alternateNodePropertyName]===o?Df(2,E):E),d?df(a):yf(df(a)),r.afterParts(D))));var E;return l?mf(df([yf(df([gf,v])),gf])):v};const{getNextNonSpaceNonCommentCharacter:Af,isNextLineEmpty:Ff}=It,{printDanglingComments:xf}=ga,{builders:{concat:Sf,line:wf,hardline:Tf,softline:Bf,group:Nf,indent:kf,ifBreak:Pf},utils:{removeLines:Of}}=cn,{getFunctionParameters:_f,iterateFunctionParametersPath:If,isSimpleType:Lf,isTestCall:Mf,isTypeAnnotationAFunction:jf,isObjectType:Rf,isObjectTypePropertyAFunction:Vf,hasRestParameter:qf,shouldPrintComma:$f}=Dc,{locEnd:Wf}=Qi,{printFunctionTypeParameters:Uf}=qp;function Jf(e){if(!e)return!1;const t=_f(e);if(1!==t.length)return!1;const[n]=t;return!n.comments&&("ObjectPattern"===n.type||"ArrayPattern"===n.type||"Identifier"===n.type&&n.typeAnnotation&&("TypeAnnotation"===n.typeAnnotation.type||"TSTypeAnnotation"===n.typeAnnotation.type)&&Rf(n.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===n.type&&Rf(n.typeAnnotation)||"AssignmentPattern"===n.type&&("ObjectPattern"===n.left.type||"ArrayPattern"===n.left.type)&&("Identifier"===n.right.type||"ObjectExpression"===n.right.type&&0===n.right.properties.length||"ArrayExpression"===n.right.type&&0===n.right.elements.length))}var Gf={printFunctionParameters:function(e,t,n,r,o){const i=e.getValue(),u=_f(i),a=o?Uf(e,n,t):"";if(0===u.length)return Sf([a,"(",xf(e,n,!0,(e=>")"===Af(n.originalText,e,Wf))),")"]);const s=e.getParentNode(),c=Mf(s),l=Jf(i),p=r&&!u.some((e=>e.comments)),f=[];if(If(e,((e,r)=>{const o=r===u.length-1;o&&i.rest&&f.push("..."),f.push(e.call(t)),o||(f.push(","),c||l||p?f.push(" "):Ff(n.originalText,u[r],Wf)?f.push(Tf,Tf):f.push(wf))})),p)return Nf(Sf([Of(a),"(",Sf(f.map(Of)),")"]));const d=u.every((e=>!e.decorators));return l&&d||c?Sf([a,"(",Sf(f),")"]):(Vf(s)||jf(s)||"TypeAlias"===s.type||"UnionTypeAnnotation"===s.type||"TSUnionType"===s.type||"IntersectionTypeAnnotation"===s.type||"FunctionTypeAnnotation"===s.type&&s.returnType===i)&&1===u.length&&null===u[0].name&&i.this!==u[0]&&u[0].typeAnnotation&&null===i.typeParameters&&Lf(u[0].typeAnnotation)&&!i.rest?"always"===n.arrowParens?Sf(["(",Sf(f),")"]):Sf(f):Sf([a,"(",kf(Sf([Bf,Sf(f)])),Pf(!qf(i)&&$f(n,"all")?",":""),Bf,")"])},shouldHugFunctionParameters:Jf};const{builders:{concat:zf}}=cn,{isFlowAnnotationComment:Hf,isSimpleType:Xf,isObjectType:Yf}=Dc;var Kf={printTypeAnnotation:function(e,t,n){const r=e.getValue();if(!r.typeAnnotation)return"";const o=e.getParentNode(),i=r.definite||o&&"VariableDeclarator"===o.type&&o.definite,u="DeclareFunction"===o.type&&o.id===r;return Hf(t.originalText,r.typeAnnotation)?zf([" /*: ",e.call(n,"typeAnnotation")," */"]):zf([u?"":i?"!: ":": ",e.call(n,"typeAnnotation")])},shouldHugType:function(e){if(Xf(e)||Yf(e))return!0;if("UnionTypeAnnotation"===e.type||"TSUnionType"===e.type){const t=e.types.filter((e=>"VoidTypeAnnotation"===e.type||"TSVoidKeyword"===e.type||"NullLiteralTypeAnnotation"===e.type||"TSNullKeyword"===e.type)).length,n=e.types.some((e=>"ObjectTypeAnnotation"===e.type||"TSTypeLiteral"===e.type||"GenericTypeAnnotation"===e.type||"TSTypeReference"===e.type));if(e.types.length-1===t&&n)return!0}return!1}};const{printDanglingComments:Qf}=ga,{builders:{concat:Zf,line:ed,softline:td,group:nd,indent:rd,ifBreak:od}}=cn,{getLast:id,isNextLineEmpty:ud}=It,{hasDanglingComments:ad,shouldPrintComma:sd}=Dc,{locEnd:cd}=Qi,{printOptionalToken:ld}=qp,{printTypeAnnotation:pd}=Kf;function fd(e,t,n,r){const o=[];let i=[];return e.each((e=>{o.push(Zf(i)),o.push(nd(r(e))),i=[",",ed],e.getValue()&&ud(t.originalText,e.getValue(),cd)&&i.push(td)}),n),Zf(o)}var dd={printArray:function(e,t,n){const r=e.getValue(),o=[],i="TupleExpression"===r.type?"#[":"[";if(0===r.elements.length)ad(r)?o.push(nd(Zf([i,Qf(e,t),td,"]"]))):o.push(i,"]");else{const u=id(r.elements),a=!(u&&"RestElement"===u.type),s=a&&null===u,c=!t.__inJestEach&&r.elements.length>1&&r.elements.every(((e,t,n)=>{const r=e&&e.type;if("ArrayExpression"!==r&&"ObjectExpression"!==r)return!1;const o=n[t+1];if(o&&r!==o.type)return!1;const i="ArrayExpression"===r?"elements":"properties";return e[i]&&e[i].length>1}));o.push(nd(Zf([i,rd(Zf([td,fd(e,t,"elements",n)])),s?",":"",od(a&&!s&&sd(t)?",":""),Qf(e,t,!0),td,"]"]),{shouldBreak:c}))}return o.push(ld(e),pd(e,t,n)),Zf(o)},printArrayItems:fd};const{printDanglingComments:hd}=ga,{builders:{concat:gd,line:md,softline:yd,group:Dd,indent:vd,ifBreak:Ed,hardline:bd}}=cn,{getLast:Cd,isNextLineEmpty:Ad,hasNewlineInRange:Fd,hasNewline:xd}=It,{hasDanglingComments:Sd,shouldPrintComma:wd,hasNodeIgnoreComment:Td,isBlockComment:Bd}=Dc,{locStart:Nd,locEnd:kd}=Qi,{printOptionalToken:Pd}=qp,{shouldHugFunctionParameters:Od}=Gf,{printTypeAnnotation:_d,shouldHugType:Id}=Kf;var Ld={printObject:function(e,t,n){const r=t.semi?";":"",o=e.getValue();let i;i="TSTypeLiteral"===o.type?"members":"TSInterfaceBody"===o.type?"body":"properties";const u="ObjectTypeAnnotation"===o.type,a=[];u&&a.push("indexers","callProperties","internalSlots"),a.push(i);const s=a.map((e=>o[e][0])).sort(((e,t)=>Nd(e)-Nd(t)))[0],c=e.getParentNode(0),l=u&&c&&("InterfaceDeclaration"===c.type||"DeclareInterface"===c.type||"DeclareClass"===c.type)&&"body"===e.getName(),p="TSInterfaceBody"===o.type||l||"ObjectPattern"===o.type&&"FunctionDeclaration"!==c.type&&"FunctionExpression"!==c.type&&"ArrowFunctionExpression"!==c.type&&"ObjectMethod"!==c.type&&"ClassMethod"!==c.type&&"ClassPrivateMethod"!==c.type&&"AssignmentPattern"!==c.type&&"CatchClause"!==c.type&&o.properties.some((e=>e.value&&("ObjectPattern"===e.value.type||"ArrayPattern"===e.value.type)))||"ObjectPattern"!==o.type&&s&&Fd(t.originalText,Nd(o),Nd(s)),f=l?";":"TSInterfaceBody"===o.type||"TSTypeLiteral"===o.type?Ed(r,";"):",",d="RecordExpression"===o.type?"#{":o.exact?"{|":"{",h=o.exact?"|}":"}",g=[];a.forEach((t=>{e.each((e=>{const t=e.getValue();g.push({node:t,printed:n(e),loc:Nd(t)})}),t)}));let m=[];const y=g.sort(((e,t)=>e.loc-t.loc)).map((e=>{const n=gd(m.concat(Dd(e.printed)));return m=[f,md],"TSPropertySignature"!==e.node.type&&"TSMethodSignature"!==e.node.type&&"TSConstructSignatureDeclaration"!==e.node.type||!Td(e.node)||m.shift(),Ad(t.originalText,e.node,kd)&&m.push(bd),n}));if(o.inexact){let n;if(Sd(o)){const r=!o.comments.every((e=>Bd(e))),i=hd(e,t,!0);n=gd([i,r||xd(t.originalText,kd(o.comments[o.comments.length-1]))?bd:md,"..."])}else n="...";y.push(gd(m.concat(n)))}const D=Cd(o[i]),v=!(o.inexact||D&&"RestElement"===D.type||D&&("TSPropertySignature"===D.type||"TSCallSignatureDeclaration"===D.type||"TSMethodSignature"===D.type||"TSConstructSignatureDeclaration"===D.type)&&Td(D));let E;if(0===y.length){if(!Sd(o))return gd([d,h,_d(e,t,n)]);E=Dd(gd([d,hd(e,t),yd,h,Pd(e),_d(e,t,n)]))}else E=gd([d,vd(gd([t.bracketSpacing?md:yd,gd(y)])),Ed(v&&(","!==f||wd(t))?f:""),gd([t.bracketSpacing?md:yd,h]),Pd(e),_d(e,t,n)]);return e.match((e=>"ObjectPattern"===e.type&&!e.decorators),((e,t,n)=>Od(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))||e.match(Id,((e,t)=>"typeAnnotation"===t),((e,t)=>"typeAnnotation"===t),((e,t,n)=>Od(e)&&("params"===t||"parameters"===t||"this"===t||"rest"===t)&&0===n))?E:Dd(E,{shouldBreak:p})}};const{printComments:Md,printDanglingComments:jd}=ga,{builders:{concat:Rd,line:Vd,hardline:qd,softline:$d,group:Wd,indent:Ud,conditionalGroup:Jd,fill:Gd,ifBreak:zd,lineSuffixBoundary:Hd},utils:{willBreak:Xd,isLineNext:Yd,isEmpty:Kd}}=cn,{getLast:Qd,getPreferredQuote:Zd}=It,{hasTrailingComment:eh,isEmptyJSXElement:th,isJSXWhitespaceExpression:nh,isJSXNode:rh,isMeaningfulJSXText:oh,matchJsxWhitespaceRegex:ih,rawText:uh,isLiteral:ah,isCallOrOptionalCallExpression:sh,isStringLiteral:ch,isBinaryish:lh,isBlockComment:ph}=Dc,{willPrintOwnComments:fh}=Kc;function dh(e,t,n,r){return e?"":"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?1===t.length?$d:qd:$d}function hh(e,t,n,r){return e?qd:1===t.length?"JSXElement"===n.type&&!n.closingElement||r&&"JSXElement"===r.type&&!r.closingElement?qd:$d:qd}function gh(e,t,n){const r=e.getValue();return Rd(["{",e.call((e=>{const r=Rd(["...",n(e)]),o=e.getValue();return o.comments&&o.comments.length&&fh(e)?Rd([Ud(Rd([$d,Md(e,(()=>r),t)])),$d]):r}),"JSXSpreadAttribute"===r.type?"argument":"expression"),"}"])}var mh={printJsxElement:function(e,t,n){const r=Md(e,(()=>function(e,t,n){const r=e.getValue();if("JSXElement"===r.type&&th(r))return Rd([e.call(n,"openingElement"),e.call(n,"closingElement")]);const o="JSXElement"===r.type?e.call(n,"openingElement"):e.call(n,"openingFragment"),i="JSXElement"===r.type?e.call(n,"closingElement"):e.call(n,"closingFragment");if(1===r.children.length&&"JSXExpressionContainer"===r.children[0].type&&("TemplateLiteral"===r.children[0].expression.type||"TaggedTemplateExpression"===r.children[0].expression.type))return Rd([o,Rd(e.map(n,"children")),i]);r.children=r.children.map((e=>nh(e)?{type:"JSXText",value:" ",raw:" "}:e));const u=r.children.filter(rh).length>0,a=r.children.filter((e=>"JSXExpressionContainer"===e.type)).length>1,s="JSXElement"===r.type&&r.openingElement.attributes.length>1;let c=Xd(o)||u||s||a;const l="mdx"===e.getParentNode().rootMarker,p=t.singleQuote?"{' '}":'{" "}',f=l?Rd([" "]):zd(Rd([p,$d])," "),d=r.openingElement&&r.openingElement.name&&"fbt"===r.openingElement.name.name,h=function(e,t,n,r,o){const i=e.getValue(),u=[];return e.each(((e,t)=>{const a=e.getValue();if(ah(a)){const e=uh(a);if(oh(a)){const n=e.split(ih);if(""===n[0]){if(u.push(""),n.shift(),/\n/.test(n[0])){const e=i.children[t+1];u.push(hh(o,n[1],a,e))}else u.push(r);n.shift()}let s;if(""===Qd(n)&&(n.pop(),s=n.pop()),0===n.length)return;if(n.forEach(((e,t)=>{t%2==1?u.push(Vd):u.push(e)})),void 0!==s)if(/\n/.test(s)){const e=i.children[t+1];u.push(hh(o,Qd(u),a,e))}else u.push(r);else{const e=i.children[t+1];u.push(dh(o,Qd(u),a,e))}}else/\n/.test(e)?e.match(/\n/g).length>1&&(u.push(""),u.push(qd)):(u.push(""),u.push(r))}else{const r=n(e);u.push(r);const s=i.children[t+1];if(s&&oh(s)){const e=uh(s).trim().split(ih)[0];u.push(dh(o,e,a,s))}else u.push(qd)}}),"children"),u}(e,0,n,f,d),g=r.children.some((e=>oh(e)));for(let e=h.length-2;e>=0;e--){const t=""===h[e]&&""===h[e+1],n=h[e]===qd&&""===h[e+1]&&h[e+2]===qd,r=(h[e]===$d||h[e]===qd)&&""===h[e+1]&&h[e+2]===f,o=h[e]===f&&""===h[e+1]&&(h[e+2]===$d||h[e+2]===qd),i=h[e]===f&&""===h[e+1]&&h[e+2]===f,u=h[e]===$d&&""===h[e+1]&&h[e+2]===qd||h[e]===qd&&""===h[e+1]&&h[e+2]===$d;n&&g||t||r||i||u?h.splice(e,2):o&&h.splice(e+1,2)}for(;h.length&&(Yd(Qd(h))||Kd(Qd(h)));)h.pop();for(;h.length&&(Yd(h[0])||Kd(h[0]))&&(Yd(h[1])||Kd(h[1]));)h.shift(),h.shift();const m=[];h.forEach(((e,t)=>{if(e===f){if(1===t&&""===h[t-1])return 2===h.length?void m.push(p):void m.push(Rd([p,qd]));if(t===h.length-1)return void m.push(p);if(""===h[t-1]&&h[t-2]===qd)return void m.push(p)}m.push(e),Xd(e)&&(c=!0)}));const y=g?Gd(m):Wd(Rd(m),{shouldBreak:!0});if(l)return y;const D=Wd(Rd([o,Ud(Rd([qd,y])),qd,i]));return c?D:Jd([Wd(Rd([o,Rd(h),i])),D])}(e,t,n)),t);return function(e,t,n){const r=e.getParentNode();if(!r)return t;if({ArrayExpression:!0,JSXAttribute:!0,JSXElement:!0,JSXExpressionContainer:!0,JSXFragment:!0,ExpressionStatement:!0,CallExpression:!0,OptionalCallExpression:!0,ConditionalExpression:!0,JsExpressionRoot:!0}[r.type])return t;const o=e.match(void 0,(e=>"ArrowFunctionExpression"===e.type),sh,(e=>"JSXExpressionContainer"===e.type)),i=Fp(e,n);return Wd(Rd([i?"":zd("("),Ud(Rd([$d,t])),$d,i?"":zd(")")]),{shouldBreak:o})}(e,r,t)},printJsxAttribute:function(e,t,n){const r=e.getValue(),o=[];if(o.push(e.call(n,"name")),r.value){let i;if(ch(r.value)){let e=uh(r.value).replace(/&apos;/g,"'").replace(/&quot;/g,'"');const n=Zd(e,t.jsxSingleQuote?"'":'"'),o="'"===n?"&apos;":"&quot;";e=e.slice(1,-1).replace(new RegExp(n,"g"),o),i=Rd([n,e,n])}else i=e.call(n,"value");o.push("=",i)}return Rd(o)},printJsxOpeningElement:function(e,t,n){const r=e.getValue(),o=r.name&&r.name.comments&&r.name.comments.length>0||r.typeParameters&&r.typeParameters.comments&&r.typeParameters.comments.length>0;if(r.selfClosing&&!r.attributes.length&&!o)return Rd(["<",e.call(n,"name"),e.call(n,"typeParameters")," />"]);if(r.attributes&&1===r.attributes.length&&r.attributes[0].value&&ch(r.attributes[0].value)&&!r.attributes[0].value.value.includes("\n")&&!o&&(!r.attributes[0].comments||!r.attributes[0].comments.length))return Wd(Rd(["<",e.call(n,"name"),e.call(n,"typeParameters")," ",Rd(e.map(n,"attributes")),r.selfClosing?" />":">"]));const i=r.attributes.length&&eh(Qd(r.attributes)),u=!r.attributes.length&&!o||t.jsxBracketSameLine&&(!o||r.attributes.length)&&!i,a=r.attributes&&r.attributes.some((e=>e.value&&ch(e.value)&&e.value.value.includes("\n")));return Wd(Rd(["<",e.call(n,"name"),e.call(n,"typeParameters"),Rd([Ud(Rd(e.map((e=>Rd([Vd,n(e)])),"attributes"))),r.selfClosing?Vd:u?">":$d]),r.selfClosing?"/>":u?"":">"]),{shouldBreak:a})},printJsxClosingElement:function(e,t,n){return Rd(["</",e.call(n,"name"),">"])},printJsxOpeningClosingFragment:function(e,t){const n=e.getValue(),r=n.comments&&n.comments.length,o=r&&!n.comments.every((e=>ph(e))),i="JSXOpeningFragment"===n.type;return Rd([i?"<":"</",Ud(Rd([o?qd:r&&!i?" ":"",jd(e,t,!0)])),o?qd:"",">"])},printJsxExpressionContainer:function(e,t,n){const r=e.getValue(),o=e.getParentNode(0),i=r.expression.comments&&r.expression.comments.length>0,u="JSXEmptyExpression"===r.expression.type||!i&&("ArrayExpression"===r.expression.type||"ObjectExpression"===r.expression.type||"ArrowFunctionExpression"===r.expression.type||"CallExpression"===r.expression.type||"OptionalCallExpression"===r.expression.type||"FunctionExpression"===r.expression.type||"TemplateLiteral"===r.expression.type||"TaggedTemplateExpression"===r.expression.type||"DoExpression"===r.expression.type||rh(o)&&("ConditionalExpression"===r.expression.type||lh(r.expression)));return Wd(Rd(u?["{",e.call(n,"expression"),Hd,"}"]:["{",Ud(Rd([$d,e.call(n,"expression")])),$d,Hd,"}"]))},printJsxEmptyExpression:function(e,t){const n=e.getValue(),r=n.comments&&!n.comments.every((e=>ph(e)));return Rd([jd(e,t,!r),r?qd:""])},printJsxSpreadAttribute:gh,printJsxSpreadChild:gh};const{printDanglingComments:yh}=ga,{builders:{concat:Dh,join:vh,line:Eh,hardline:bh,softline:Ch,group:Ah,indent:Fh,ifBreak:xh}}=cn,{hasDanglingComments:Sh,isTestCall:wh,isBlockComment:Th,shouldPrintComma:Bh}=Dc,{shouldHugType:Nh}=Kf,kh=new WeakMap;function Ph(e){return kh.has(e)||kh.set(e,Symbol("typeParameters")),kh.get(e)}function Oh(e,t){const n=e.getValue();if(!Sh(n))return"";const r=n.comments.every((e=>Th(e))),o=yh(e,t,r);return r?o:Dh([o,bh])}var _h={printTypeParameters:function(e,t,n,r){const o=e.getValue();if(!o[r])return"";if(!Array.isArray(o[r]))return e.call(n,r);const i=e.getNode(2);return null!=i&&wh(i)||0===o[r].length||1===o[r].length&&(Nh(o[r][0])||"GenericTypeAnnotation"===o[r][0].type&&Nh(o[r][0].id)||"TSTypeReference"===o[r][0].type&&Nh(o[r][0].typeName)||"NullableTypeAnnotation"===o[r][0].type)?Dh(["<",vh(", ",e.map(n,r)),Oh(e,t),">"]):Ah(Dh(["<",Fh(Dh([Ch,vh(Dh([",",Eh]),e.map(n,r))])),xh("typescript"!==t.parser&&"babel-ts"!==t.parser&&Bh(t,"all")?",":""),Ch,">"]),{id:Ph(o)})},getTypeParametersGroupId:Ph};const{printComments:Ih}=ga,{printString:Lh,printNumber:Mh}=It,{builders:{concat:jh}}=cn,{isNumericLiteral:Rh,isSimpleNumber:Vh,isStringLiteral:qh,isStringPropSafeToUnquote:$h,rawText:Wh}=Dc,Uh=new WeakMap;var Jh={printPropertyKey:function(e,t,n){const r=e.getNode();if(r.computed)return jh(["[",e.call(n,"key"),"]"]);const o=e.getParentNode(),{key:i}=r;if("ClassPrivateProperty"===r.type&&"Identifier"===i.type)return jh(["#",e.call(n,"key")]);if("consistent"===t.quoteProps&&!Uh.has(o)){const e=(o.properties||o.body||o.members).some((e=>!e.computed&&e.key&&qh(e.key)&&!$h(e,t)));Uh.set(o,e)}if(("Identifier"===i.type||Rh(i)&&Vh(Mh(Wh(i)))&&String(i.value)===Mh(Wh(i))&&"typescript"!==t.parser&&"babel-ts"!==t.parser)&&("json"===t.parser||"consistent"===t.quoteProps&&Uh.get(o))){const n=Lh(JSON.stringify("Identifier"===i.type?i.name:i.value.toString()),t);return e.call((e=>Ih(e,(()=>n),t)),"key")}return $h(r,t)&&("as-needed"===t.quoteProps||"consistent"===t.quoteProps&&!Uh.get(o))?e.call((e=>Ih(e,(()=>/^\d/.test(i.value)?Mh(i.value):i.value),t)),"key"):e.call(n,"key")}};const{printDanglingComments:Gh}=ga,{getNextNonSpaceNonCommentCharacterIndex:zh}=It,{builders:{concat:Hh,line:Xh,softline:Yh,group:Kh,indent:Qh,ifBreak:Zh,hardline:eg}}=cn,{getFunctionParameters:tg,hasDanglingComments:ng,hasLeadingOwnLineComment:rg,isFlowAnnotationComment:og,isJSXNode:ig,isTemplateOnItsOwnLine:ug,shouldPrintComma:ag,startsWithNoLookaheadToken:sg,returnArgumentHasLeadingComment:cg,isBinaryish:lg,isLineComment:pg}=Dc,{locEnd:fg}=Qi,{printFunctionParameters:dg}=Gf,{printPropertyKey:hg}=Jh,{printFunctionTypeParameters:gg}=qp;function mg(e,t,n){const r=[gg(e,t,n),Kh(Hh([dg(e,n,t),Dg(e,n,t)]))];return e.getNode().body?r.push(" ",e.call(n,"body")):r.push(t.semi?";":""),Hh(r)}function yg(e,t){return"always"!==t.arrowParens&&"avoid"===t.arrowParens&&function(e){const t=tg(e);return!(1!==t.length||e.typeParameters||ng(e)||"Identifier"!==t[0].type||t[0].typeAnnotation||t[0].comments||t[0].optional||e.predicate||e.returnType)}(e.getValue())}function Dg(e,t,n){const r=e.getValue(),o=e.call(t,"returnType");if(r.returnType&&og(n.originalText,r.returnType))return Hh([" /*: ",o," */"]);const i=[o];return r.returnType&&r.returnType.typeAnnotation&&i.unshift(": "),r.predicate&&i.push(r.returnType?" ":": ",e.call(t,"predicate")),Hh(i)}var vg={printFunctionDeclaration:function(e,t,n,r){const o=e.getValue(),i=[];return o.async&&i.push("async "),o.generator?i.push("function* "):i.push("function "),o.id&&i.push(e.call(t,"id")),i.push(gg(e,n,t),Kh(Hh([dg(e,t,n,r),Dg(e,t,n)])),o.body?" ":"",e.call(t,"body")),Hh(i)},printArrowFunctionExpression:function(e,t,n,r){const o=e.getValue(),i=[];o.async&&i.push("async "),yg(e,t)?i.push(e.call(n,"params",0)):i.push(Kh(Hh([dg(e,n,t,r&&(r.expandLastArg||r.expandFirstArg),!0),Dg(e,n,t)])));const u=Gh(e,t,!0,(e=>{const n=zh(t.originalText,e,fg);return!1!==n&&"=>"===t.originalText.slice(n,n+2)}));u&&i.push(" ",u),i.push(" =>");const a=e.call((e=>n(e,r)),"body");if(!rg(t.originalText,o.body)&&("ArrayExpression"===o.body.type||"ObjectExpression"===o.body.type||"BlockStatement"===o.body.type||ig(o.body)||ug(o.body,t.originalText)||"ArrowFunctionExpression"===o.body.type||"DoExpression"===o.body.type))return Kh(Hh([Hh(i)," ",a]));if("SequenceExpression"===o.body.type)return Kh(Hh([Hh(i),Kh(Hh([" (",Qh(Hh([Yh,a])),Yh,")"]))]));const s=(r&&r.expandLastArg||"JSXExpressionContainer"===e.getParentNode().type)&&!(o.comments&&o.comments.length),c=r&&r.expandLastArg&&ag(t,"all"),l="ConditionalExpression"===o.body.type&&!sg(o.body,!1);return Kh(Hh([Hh(i),Kh(Hh([Qh(Hh([Xh,l?Zh("","("):"",a,l?Zh("",")"):""])),s?Hh([Zh(c?",":""),Yh]):""]))]))},printMethod:function(e,t,n){const r=e.getNode(),{kind:o}=r,i=r.value||r,u=[];return o&&"init"!==o&&"method"!==o&&"constructor"!==o?(Gu.ok("get"===o||"set"===o),u.push(o," ")):i.async&&u.push("async "),i.generator&&u.push("*"),u.push(hg(e,t,n),r.optional||r.key.optional?"?":"",r===i?mg(e,t,n):e.call((e=>mg(e,t,n)),"value")),Hh(u)},printReturnAndThrowArgument:function(e,t,n){const r=e.getValue(),o=t.semi?";":"",i=[];r.argument&&(cg(t,r.argument)?i.push(Hh([" (",Qh(Hh([eg,e.call(n,"argument")])),eg,")"])):lg(r.argument)||"SequenceExpression"===r.argument.type?i.push(Kh(Hh([Zh(" ("," "),Qh(Hh([Yh,e.call(n,"argument")])),Yh,Zh(")")]))):i.push(" ",e.call(n,"argument")));const u=Array.isArray(r.comments)&&r.comments[r.comments.length-1],a=u&&pg(u);return a&&i.push(o),ng(r)&&i.push(" ",Gh(e,t,!0)),a||i.push(o),Hh(i)},shouldPrintParamsWithoutParens:yg};const{printComments:Eg,printDanglingComments:bg}=ga,{builders:{concat:Cg,join:Ag,line:Fg,hardline:xg,softline:Sg,group:wg,indent:Tg,ifBreak:Bg}}=cn,{hasTrailingComment:Ng,hasTrailingLineComment:kg}=Dc,{getTypeParametersGroupId:Pg}=_h,{printMethod:Og}=vg,{printDecorators:_g}=qp;function Ig(e){return e.typeParameters&&!kg(e.typeParameters)&&!function(e){return["superClass","extends","mixins","implements"].filter((t=>!!e[t])).length>1}(e)}function Lg(e,t,n,r){const o=e.getValue();if(!o[r]||0===o[r].length)return"";const i=bg(e,t,!0,(({marker:e})=>e===r));return Cg([Ig(o)?Bg(" ",Fg,{groupId:Pg(o.typeParameters)}):Fg,i,i&&xg,r,wg(Tg(Cg([Fg,Ag(Cg([",",Fg]),e.map(n,r))])))])}function Mg(e,t,n){const r=e.call(n,"superClass");return"AssignmentExpression"===e.getParentNode().type?wg(Bg(Cg(["(",Tg(Cg([Sg,r])),Sg,")"]),r)):r}var jg={printClass:function(e,t,n){const r=e.getValue(),o=[];r.abstract&&o.push("abstract "),o.push("class");const i=r.id&&Ng(r.id)||r.superClass&&r.superClass.comments&&0!==r.superClass.comments.length||r.extends&&0!==r.extends.length||r.mixins&&0!==r.mixins.length||r.implements&&0!==r.implements.length,u=[],a=[];if(r.id&&u.push(" ",e.call(n,"id")),u.push(e.call(n,"typeParameters")),r.superClass){const r=Cg(["extends ",Mg(e,0,n),e.call(n,"superTypeParameters")]),o=e.call((e=>Eg(e,(()=>r),t)),"superClass");i?a.push(Fg,wg(o)):a.push(" ",o)}else a.push(Lg(e,t,n,"extends"));if(a.push(Lg(e,t,n,"mixins")),a.push(Lg(e,t,n,"implements")),i){const e=Cg(a);Ig(r)?o.push(wg(Cg(u.concat(Bg(Tg(e),e))))):o.push(wg(Tg(Cg(u.concat(e)))))}else o.push(...u,...a);return o.push(" ",e.call(n,"body")),Cg(o)},printClassMethod:function(e,t,n){const r=e.getValue(),o=[];return r.decorators&&0!==r.decorators.length&&o.push(_g(e,t,n)),r.accessibility&&o.push(r.accessibility+" "),r.static&&o.push("static "),("TSAbstractMethodDefinition"===r.type||r.abstract)&&o.push("abstract "),o.push(Og(e,t,n)),Cg(o)}};const{getLast:Rg,getPenultimate:Vg,isNextLineEmpty:qg}=It,{getFunctionParameters:$g,iterateFunctionParametersPath:Wg,hasLeadingComment:Ug,hasTrailingComment:Jg,isFunctionCompositionArgs:Gg,isJSXNode:zg,isLongCurriedCallExpression:Hg,shouldPrintComma:Xg,getCallArguments:Yg,iterateCallArgumentsPath:Kg}=Dc,{locEnd:Qg}=Qi,{builders:{concat:Zg,line:em,hardline:tm,softline:nm,group:rm,indent:om,conditionalGroup:im,ifBreak:um,breakParent:am},utils:{willBreak:sm}}=cn;function cm(e){return"ObjectExpression"===e.type&&(e.properties.length>0||e.comments)||"ArrayExpression"===e.type&&(e.elements.length>0||e.comments)||"TSTypeAssertion"===e.type&&cm(e.expression)||"TSAsExpression"===e.type&&cm(e.expression)||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&(!e.returnType||!e.returnType.typeAnnotation||"TSTypeReference"!==e.returnType.typeAnnotation.type)&&("BlockStatement"===e.body.type||"ArrowFunctionExpression"===e.body.type||"ObjectExpression"===e.body.type||"ArrayExpression"===e.body.type||"CallExpression"===e.body.type||"OptionalCallExpression"===e.body.type||"ConditionalExpression"===e.body.type||zg(e.body))}var lm=function(e,t,n){const r=e.getValue(),o="ImportExpression"===r.type,i=Yg(r);if(0===i.length)return Zg(["(",ga.printDanglingComments(e,t,!0),")"]);if(2===i.length&&"ArrowFunctionExpression"===i[0].type&&0===$g(i[0]).length&&"BlockStatement"===i[0].body.type&&"ArrayExpression"===i[1].type&&!i.some((e=>e.comments)))return Zg(["(",e.call(n,"arguments",0),", ",e.call(n,"arguments",1),")"]);let u=!1,a=!1,s=!1;const c=i.length-1,l=[];Kg(e,((e,r)=>{const o=e.getNode(),i=[n(e)];r===c||(qg(t.originalText,o,Qg)?(0===r&&(s=!0),u=!0,i.push(",",tm,tm)):i.push(",",em)),a=function(e,t){if(!e||"ArrowFunctionExpression"!==e.type||!e.body||"BlockStatement"!==e.body.type||0===$g(e).length)return!1;let r=!1;return Wg(t,(e=>{r=r||sm(Zg([n(e)]))})),r}(o,e),l.push(Zg(i))}));const p=o||r.callee&&"Import"===r.callee.type||!Xg(t,"all")?"":",";function f(){return rm(Zg(["(",om(Zg([em,Zg(l)])),p,em,")"]),{shouldBreak:!0})}if("Decorator"!==e.getParentNode().type&&Gg(i))return f();const d=function(e){if(2!==e.length)return!1;const[t,n]=e;return!(t.comments&&t.comments.length||"FunctionExpression"!==t.type&&("ArrowFunctionExpression"!==t.type||"BlockStatement"!==t.body.type)||"FunctionExpression"===n.type||"ArrowFunctionExpression"===n.type||"ConditionalExpression"===n.type||cm(n))}(i),h=function(e){const t=Rg(e),n=Vg(e);return!Ug(t)&&!Jg(t)&&cm(t)&&(!n||n.type!==t.type)}(i);if(d||h){const t=(d?l.slice(1).some(sm):l.slice(0,-1).some(sm))||u||a;let o=[];Kg(e,((e,t)=>{d&&0===t&&(o=[Zg([e.call((e=>n(e,{expandFirstArg:!0}))),l.length>1?",":"",s?tm:em,s?tm:""])].concat(l.slice(1))),h&&t===i.length-1&&(o=l.slice(0,-1).concat(e.call((e=>n(e,{expandLastArg:!0})))))}));const c=l.some(sm),p=Zg(["(",Zg(o),")"]);return Zg([c?am:"",im([c||r.typeArguments||r.typeParameters?um(f(),p):p,Zg(d?["(",rm(o[0],{shouldBreak:!0}),Zg(o.slice(1)),")"]:["(",Zg(l.slice(0,-1)),rm(Rg(o),{shouldBreak:!0}),")"]),f()],{shouldBreak:t})])}const g=Zg(["(",om(Zg([nm,Zg(l)])),um(p),nm,")"]);return Hg(e)?g:rm(g,{shouldBreak:l.some(sm)||u})};const{builders:{concat:pm,softline:fm,group:dm,indent:hm}}=cn,{isNumericLiteral:gm}=Dc,{printOptionalToken:mm}=qp;function ym(e,t,n){const r=e.call(n,"property"),o=e.getValue(),i=mm(e);return o.computed?!o.property||gm(o.property)?pm([i,"[",r,"]"]):dm(pm([i,"[",hm(pm([fm,r])),fm,"]"])):pm([i,".",r])}var Dm={printMemberExpression:function(e,t,n){const r=e.getValue(),o=e.getParentNode();let i,u=0;do{i=e.getParentNode(u),u++}while(i&&("MemberExpression"===i.type||"OptionalMemberExpression"===i.type||"TSNonNullExpression"===i.type));const a=i&&("NewExpression"===i.type||"BindExpression"===i.type||"VariableDeclarator"===i.type&&"Identifier"!==i.id.type||"AssignmentExpression"===i.type&&"Identifier"!==i.left.type)||r.computed||"Identifier"===r.object.type&&"Identifier"===r.property.type&&"MemberExpression"!==o.type&&"OptionalMemberExpression"!==o.type;return pm([e.call(n,"object"),a?ym(e,0,n):dm(hm(pm([fm,ym(e,0,n)])))])},printMemberLookup:ym};const{getLast:vm,isNextLineEmpty:Em,isNextLineEmptyAfterIndex:bm,getNextNonSpaceNonCommentCharacterIndex:Cm}=It,{hasLeadingComment:Am,hasTrailingComment:Fm,isCallOrOptionalCallExpression:xm,isFunctionOrArrowExpression:Sm,isLongCurriedCallExpression:wm,isMemberish:Tm,isNumericLiteral:Bm,isSimpleCallArgument:Nm}=Dc,{locEnd:km}=Qi,{builders:{concat:Pm,join:Om,hardline:_m,group:Im,indent:Lm,conditionalGroup:Mm,breakParent:jm},utils:{willBreak:Rm}}=cn,{printMemberLookup:Vm}=Dm,{printOptionalToken:qm,printFunctionTypeParameters:$m,printBindExpressionCallee:Wm}=qp;var Um=function(e,t,n){const r=e.getParentNode(),o=!r||"ExpressionStatement"===r.type,i=[];function u(e){const{originalText:n}=t,r=Cm(n,e,km);return")"===n.charAt(r)?!1!==r&&bm(n,r+1):Em(n,e,km)}function a(e){const r=e.getValue();xm(r)&&(Tm(r.callee)||xm(r.callee))?(i.unshift({node:r,printed:Pm([ga.printComments(e,(()=>Pm([qm(e),$m(e,t,n),lm(e,t,n)])),t),u(r)?_m:""])}),e.call((e=>a(e)),"callee")):Tm(r)?(i.unshift({node:r,needsParens:Fp(e,t),printed:ga.printComments(e,(()=>"OptionalMemberExpression"===r.type||"MemberExpression"===r.type?Vm(e,t,n):Wm(e,t,n)),t)}),e.call((e=>a(e)),"object")):"TSNonNullExpression"===r.type?(i.unshift({node:r,printed:ga.printComments(e,(()=>"!"),t)}),e.call((e=>a(e)),"expression")):i.unshift({node:r,printed:e.call(n)})}const s=e.getValue();i.unshift({node:s,printed:Pm([qm(e),$m(e,t,n),lm(e,t,n)])}),s.callee&&e.call((e=>a(e)),"callee");const c=[];let l=[i[0]],p=1;for(;p<i.length&&("TSNonNullExpression"===i[p].node.type||xm(i[p].node)||("MemberExpression"===i[p].node.type||"OptionalMemberExpression"===i[p].node.type)&&i[p].node.computed&&Bm(i[p].node.property));++p)l.push(i[p]);if(!xm(i[0].node))for(;p+1<i.length&&Tm(i[p].node)&&Tm(i[p+1].node);++p)l.push(i[p]);c.push(l),l=[];let f=!1;for(;p<i.length;++p){if(f&&Tm(i[p].node)){if(i[p].node.computed&&Bm(i[p].node.property)){l.push(i[p]);continue}c.push(l),l=[],f=!1}(xm(i[p].node)||"ImportExpression"===i[p].node.type)&&(f=!0),l.push(i[p]),i[p].node.comments&&i[p].node.comments.some((e=>e.trailing))&&(c.push(l),l=[],f=!1)}function d(e){return/^[A-Z]|^[$_]+$/.test(e)}l.length>0&&c.push(l);const h=c.length>=2&&!c[1][0].node.comments&&function(e){const n=e[1].length&&e[1][0].node.computed;if(1===e[0].length){const r=e[0][0].node;return"ThisExpression"===r.type||"Identifier"===r.type&&(d(r.name)||o&&function(e){return e.length<=t.tabWidth}(r.name)||n)}const r=vm(e[0]).node;return("MemberExpression"===r.type||"OptionalMemberExpression"===r.type)&&"Identifier"===r.property.type&&(d(r.property.name)||n)}(c);function g(e){const t=e.map((e=>e.printed));return e.length>0&&e[e.length-1].needsParens?Pm(["(",...t,")"]):Pm(t)}const m=c.map(g),y=Pm(m),D=h?3:2,v=$i(c),E=v.slice(1,-1).some((e=>Am(e.node)))||v.slice(0,-1).some((e=>Fm(e.node)))||c[D]&&Am(c[D][0].node);if(c.length<=D&&!E)return wm(e)?y:Im(y);const b=vm(c[h?1:0]).node,C=!xm(b)&&u(b),A=Pm([g(c[0]),h?Pm(c.slice(1,2).map(g)):"",C?_m:"",function(e){return 0===e.length?"":Lm(Im(Pm([_m,Om(_m,e.map(g))])))}(c.slice(h?2:1))]),F=i.map((({node:e})=>e)).filter(xm);return E||F.length>2&&F.some((e=>!e.arguments.every((e=>Nm(e,0)))))||m.slice(0,-1).some(Rm)||function(){const e=vm(vm(c)).node,t=vm(m);return xm(e)&&Rm(t)&&F.slice(0,-1).some((e=>e.arguments.some(Sm)))}()?Im(A):Pm([Rm(y)||C?jm:"",Mm([y,A])])};const{builders:{concat:Jm,join:Gm,group:zm}}=cn,{getCallArguments:Hm,hasFlowAnnotationComment:Xm,isCallOrOptionalCallExpression:Ym,isMemberish:Km,isTemplateOnItsOwnLine:Qm,isTestCall:Zm,iterateCallArgumentsPath:ey}=Dc,{printOptionalToken:ty,printFunctionTypeParameters:ny}=qp;var ry={printCallExpression:function(e,t,n){const r=e.getValue(),o="NewExpression"===r.type,i="ImportExpression"===r.type,u=ty(e),a=Hm(r);if(a.length>0&&(!i&&!o&&"Identifier"===r.callee.type&&("require"===r.callee.name||"define"===r.callee.name)||1===a.length&&Qm(a[0],t.originalText)||!o&&Zm(r,e.getParentNode()))){const r=[];return ey(e,(e=>{r.push(n(e))})),Jm([o?"new ":"",e.call(n,"callee"),u,ny(e,t,n),Jm(["(",Gm(", ",r),")"])])}const s=("babel"===t.parser||"babel-flow"===t.parser)&&r.callee&&"Identifier"===r.callee.type&&Xm(r.callee.trailingComments);if(s&&(r.callee.trailingComments[0].printed=!0),!i&&!o&&Km(r.callee)&&!e.call((e=>Fp(e,t)),"callee"))return Um(e,t,n);const c=Jm([o?"new ":"",i?"import":e.call(n,"callee"),u,s?"/*:: ".concat(r.callee.trailingComments[0].value.slice(2).trim()," */"):"",ny(e,t,n),lm(e,t,n)]);return i||Ym(r.callee)?zm(c):c}};const{builders:{concat:oy,join:iy,line:uy,group:ay,indent:sy,ifBreak:cy}}=cn,{hasTrailingComment:ly,hasTrailingLineComment:py,identity:fy}=Dc,{getTypeParametersGroupId:dy}=_h,{printTypeScriptModifiers:hy}=qp;var gy={printInterface:function(e,t,n){const r=e.getValue(),o=[];("DeclareInterface"===r.type||r.declare)&&o.push("declare "),"TSInterfaceDeclaration"===r.type&&o.push(r.abstract?"abstract ":"",hy(e,t,n)),o.push("interface");const i=[],u=[];"InterfaceTypeAnnotation"!==r.type&&i.push(" ",e.call(n,"id"),e.call(n,"typeParameters"));const a=r.typeParameters&&!py(r.typeParameters);if(r.extends&&0!==r.extends.length&&u.push(a?cy(" ",uy,{groupId:dy(r.typeParameters)}):uy,"extends ",(1===r.extends.length?fy:sy)(iy(oy([",",uy]),e.map(n,"extends")))),r.id&&ly(r.id)||r.extends&&0!==r.extends.length){const e=oy(u);a?o.push(ay(oy(i.concat(cy(sy(e),e))))):o.push(ay(sy(oy(i.concat(e)))))}else o.push(...i,...u);return o.push(" ",e.call(n,"body")),ay(oy(o))}};const{printComments:my}=ga,{getLast:yy}=It,{builders:{concat:Dy,join:vy,line:Ey,softline:by,group:Cy,indent:Ay,align:Fy,ifBreak:xy},utils:{normalizeParts:Sy}}=cn,{hasLeadingOwnLineComment:wy,hasTrailingLineComment:Ty,isBinaryish:By,isJSXNode:Ny,shouldFlatten:ky}=Dc;let Py=0;function Oy(e,t,n,r,o){let i=[];const u=e.getValue();if(By(u)){ky(u.operator,u.left.operator)?i=i.concat(e.call((e=>Oy(e,t,n,!0,o)),"left")):i.push(Cy(e.call(t,"left")));const a=_y(u),s=("|>"===u.operator||"NGPipeExpression"===u.type||"|"===u.operator&&"__vue_expression"===n.parser)&&!wy(n.originalText,u.right),c="NGPipeExpression"===u.type?"|":u.operator,l="NGPipeExpression"===u.type&&0!==u.arguments.length?Cy(Ay(Dy([by,": ",vy(Dy([by,":",xy(" ")]),e.map(t,"arguments").map((e=>Fy(2,Cy(e)))))]))):"",p=Dy(a?[c," ",e.call(t,"right"),l]:[s?Ey:"",c,s?" ":Ey,e.call(t,"right"),l]),f=e.getParentNode(),d=Ty(u.left),h=d||!(o&&"LogicalExpression"===u.type)&&f.type!==u.type&&u.left.type!==u.type&&u.right.type!==u.type;i.push(s?"":" ",h?Cy(p,{shouldBreak:d}):p),r&&u.comments&&(i=Sy(my(e,(()=>Dy(i)),n).parts))}else i.push(Cy(e.call(t)));return i}function _y(e){return"LogicalExpression"===e.type&&("ObjectExpression"===e.right.type&&0!==e.right.properties.length||"ArrayExpression"===e.right.type&&0!==e.right.elements.length||!!Ny(e.right))}var Iy={printBinaryishExpression:function(e,t,n){const r=e.getValue(),o=e.getParentNode(),i=e.getParentNode(1),u=r!==o.body&&("IfStatement"===o.type||"WhileStatement"===o.type||"SwitchStatement"===o.type||"DoWhileStatement"===o.type),a=Oy(e,n,t,!1,u);if(u)return Dy(a);if(("CallExpression"===o.type||"OptionalCallExpression"===o.type)&&o.callee===r||"UnaryExpression"===o.type||("MemberExpression"===o.type||"OptionalMemberExpression"===o.type)&&!o.computed)return Cy(Dy([Ay(Dy([by,Dy(a)])),by]));const s="ReturnStatement"===o.type||"ThrowStatement"===o.type||"JSXExpressionContainer"===o.type&&"JSXAttribute"===i.type||"|"!==r.operator&&"JsExpressionRoot"===o.type||"NGPipeExpression"!==r.type&&("NGRoot"===o.type&&"__ng_binding"===t.parser||"NGMicrosyntaxExpression"===o.type&&"NGMicrosyntax"===i.type&&1===i.body.length)||r===o.body&&"ArrowFunctionExpression"===o.type||r!==o.body&&"ForStatement"===o.type||"ConditionalExpression"===o.type&&"ReturnStatement"!==i.type&&"ThrowStatement"!==i.type&&"CallExpression"!==i.type&&"OptionalCallExpression"!==i.type||"TemplateLiteral"===o.type,c="AssignmentExpression"===o.type||"VariableDeclarator"===o.type||"ClassProperty"===o.type||"FieldDefinition"===o.type||"TSAbstractClassProperty"===o.type||"ClassPrivateProperty"===o.type||"ObjectProperty"===o.type||"Property"===o.type,l=By(r.left)&&ky(r.operator,r.left.operator);if(s||_y(r)&&!l||!_y(r)&&c)return Cy(Dy(a));if(0===a.length)return"";const p=Ny(r.right),f=a.findIndex((e=>"string"!=typeof e&&"group"===e.type)),d=a.slice(0,-1===f?1:f+1),h=Dy(a.slice(d.length,p?-1:void 0)),g=Symbol("logicalChain-"+ ++Py),m=Cy(Dy([...d,Ay(h)]),{id:g});if(!p)return m;const y=yy(a);return Cy(Dy([m,xy(Ay(y),y,{groupId:g})]))},shouldInlineLogicalExpression:_y};const{builders:{concat:Ly,line:My,group:jy,indent:Ry}}=cn,{hasLeadingOwnLineComment:Vy,isBinaryish:qy,isMemberExpressionChain:$y,isStringLiteral:Wy}=Dc,{shouldInlineLogicalExpression:Uy}=Iy;function Jy(e,t,n,r,o,i){if(!r)return t;const u=Gy(e,r,o,i);return jy(Ly([t,n,u]))}function Gy(e,t,n,r){return Vy(r.originalText,t)?Ry(Ly([My,n])):qy(t)&&!Uy(t)||"ConditionalExpression"===t.type&&qy(t.test)&&!Uy(t.test)||"StringLiteralTypeAnnotation"===t.type||"ClassExpression"===t.type&&t.decorators&&t.decorators.length||("Identifier"===e.type||Wy(e)||"MemberExpression"===e.type)&&(Wy(t)||$y(t))&&"json"!==r.parser&&"json5"!==r.parser||"SequenceExpression"===t.type?jy(Ry(Ly([My,n]))):Ly([" ",n])}var zy={printVariableDeclarator:function(e,t,n){const r=e.getValue();return Jy(r.id,e.call(n,"id")," =",r.init,r.init&&e.call(n,"init"),t)},printAssignmentExpression:function(e,t,n){const r=e.getValue();return Jy(r.left,e.call(n,"left"),Ly([" ",r.operator]),r.right,e.call(n,"right"),t)},printAssignment:Jy,printAssignmentRight:Gy};const{isNextLineEmpty:Hy}=It,{builders:{concat:Xy,join:Yy,hardline:Ky}}=cn,{classChildNeedsASIProtection:Qy,classPropMayCauseASIProblems:Zy,getLeftSidePathName:eD,hasNakedLeftSide:tD,isJSXNode:nD,isLastStatement:rD,isTheOnlyJSXElementInMarkdown:oD}=Dc,{locEnd:iD}=Qi,{shouldPrintParamsWithoutParens:uD}=vg;function aD({path:e,index:t,bodyNode:n,isClass:r},o,i){const u=e.getValue();if(!u)return;if("EmptyStatement"===u.type)return;const a=i(e),s=o.originalText,c=[];if(o.semi||r||oD(o,e)||!function(e,t){return"ExpressionStatement"===e.getNode().type&&e.call((e=>sD(e,t)),"expression")}(e,o)?c.push(a):u.comments&&u.comments.some((e=>e.leading))?c.push(i(e,{needsSemi:!0})):c.push(";",a),!o.semi&&r)if(Zy(e))c.push(";");else if("ClassProperty"===u.type||"FieldDefinition"===u.type){const e=n.body[t+1];Qy(e)&&c.push(";")}return Hy(s,u,iD)&&!rD(e)&&c.push(Ky),Xy(c)}function sD(e,t){const n=e.getValue();return!!(Fp(e,t)||"ParenthesizedExpression"===n.type||"TypeCastExpression"===n.type||"ArrowFunctionExpression"===n.type&&!uD(e,t)||"ArrayExpression"===n.type||"ArrayPattern"===n.type||"UnaryExpression"===n.type&&n.prefix&&("+"===n.operator||"-"===n.operator)||"TemplateLiteral"===n.type||"TemplateElement"===n.type||nD(n)||"BindExpression"===n.type&&!n.object||"RegExpLiteral"===n.type||"Literal"===n.type&&n.pattern||"Literal"===n.type&&n.regex)||!!tD(n)&&e.call((e=>sD(e,t)),...eD(e,n))}var cD={printStatementSequence:function(e,t,n){const r=e.getNode(),o="ClassBody"===r.type,i=e.map(((i,u)=>aD({path:e,index:u,bodyNode:r,isClass:o},t,n))).filter(Boolean);return Yy(Ky,i)}};const{printDanglingComments:lD}=ga,{isNextLineEmpty:pD}=It,{builders:{concat:fD,hardline:dD,indent:hD}}=cn,{hasDanglingComments:gD}=Dc,{locEnd:mD}=Qi,{printStatementSequence:yD}=cD;var DD={printBlock:function(e,t,n){const r=e.getValue(),o=[],i=t.semi?";":"",u=e.call((e=>yD(e,t,n)),"body");"StaticBlock"===r.type&&o.push("static ");const a=r.body.some((e=>"EmptyStatement"!==e.type)),s=r.directives&&r.directives.length>0,c=e.getParentNode(),l=e.getParentNode(1);return a||s||gD(r)||"ArrowFunctionExpression"!==c.type&&"FunctionExpression"!==c.type&&"FunctionDeclaration"!==c.type&&"ObjectMethod"!==c.type&&"ClassMethod"!==c.type&&"ClassPrivateMethod"!==c.type&&"ForStatement"!==c.type&&"WhileStatement"!==c.type&&"DoWhileStatement"!==c.type&&"DoExpression"!==c.type&&("CatchClause"!==c.type||l.finalizer)&&"TSModuleDeclaration"!==c.type&&"TSDeclareFunction"!==c.type&&"StaticBlock"!==r.type?(o.push("{"),s&&e.each((e=>{o.push(hD(fD([dD,n(e),i]))),pD(t.originalText,e.getValue(),mD)&&o.push(dD)}),"directives"),a&&o.push(hD(fD([dD,u]))),o.push(lD(e,t)),o.push(dD,"}"),fD(o)):fD([...o,"{}"])}};const{hasNewline:vD}=It,{builders:{concat:ED,join:bD,hardline:CD}}=cn,{isLineComment:AD,isBlockComment:FD}=Dc,{locStart:xD,locEnd:SD}=Qi;var wD={printComment:function(e,t){const n=e.getValue();if(AD(n))return t.originalText.slice(xD(n),SD(n)).trimEnd();if(FD(n)){if(function(e){const t="*".concat(e.value,"*").split("\n");return t.length>1&&t.every((e=>"*"===e.trim()[0]))}(n)){const e=function(e){const t=e.value.split("\n");return ED(["/*",bD(CD,t.map(((e,n)=>0===n?e.trimEnd():" "+(n<t.length-1?e.trim():e.trimStart())))),"*/"])}(n);return n.trailing&&!vD(t.originalText,xD(n),{backwards:!0})?ED([CD,e]):e}const e=SD(n),r="*-/"===t.originalText.slice(e-3,e);return"/*"+n.value+(r?"*-/":"*/")}throw new Error("Not a comment: "+JSON.stringify(n))}};const{hasNewline:TD,hasNewlineInRange:BD,getLast:ND,printString:kD,printNumber:PD,isNextLineEmpty:OD}=It,{builders:{concat:_D,join:ID,line:LD,hardline:MD,softline:jD,literalline:RD,group:VD,indent:qD,align:$D,conditionalGroup:WD,ifBreak:UD},utils:{isEmpty:JD}}=cn,{insertPragma:GD}=pp,{printHtmlBinding:zD,isVueEventBindingExpression:HD}=kp,{getFunctionParameters:XD,getCallArguments:YD,getParentExportDeclaration:KD,getTypeScriptMappedTypeModifier:QD,hasDanglingComments:ZD,hasFlowShorthandAnnotationComment:ev,hasLeadingOwnLineComment:tv,hasNewlineBetweenOrAfterDecorators:nv,hasNgSideEffect:rv,hasPrettierIgnore:ov,hasTrailingComment:iv,isExportDeclaration:uv,isFunctionNotation:av,isGetterOrSetter:sv,isLiteral:cv,isNgForOf:lv,isObjectType:pv,isObjectTypePropertyAFunction:fv,isTheOnlyJSXElementInMarkdown:dv,isTSXFile:hv,isBlockComment:gv,needsHardlineAfterDanglingComment:mv,rawText:yv,shouldPrintComma:Dv}=Dc,{locStart:vv,locEnd:Ev}=Qi,{printOptionalToken:bv,printBindExpressionCallee:Cv,printTypeScriptModifiers:Av,printDecorators:Fv,printFlowDeclaration:xv,adjustClause:Sv}=qp,{printImportDeclaration:wv,printExportDeclaration:Tv,printExportAllDeclaration:Bv,printModuleSpecifier:Nv}=af,{printFunctionParameters:kv}=Gf,{printTemplateLiteral:Pv}=gl,{printArray:Ov,printArrayItems:_v}=dd,{printObject:Iv}=Ld,{printTypeAnnotation:Lv,shouldHugType:Mv}=Kf,{printJsxElement:jv,printJsxAttribute:Rv,printJsxOpeningElement:Vv,printJsxClosingElement:qv,printJsxOpeningClosingFragment:$v,printJsxExpressionContainer:Wv,printJsxEmptyExpression:Uv,printJsxSpreadAttribute:Jv,printJsxSpreadChild:Gv}=mh,{printClass:zv,printClassMethod:Hv}=jg,{printTypeParameters:Xv}=_h,{printPropertyKey:Yv}=Jh,{printFunctionDeclaration:Kv,printArrowFunctionExpression:Qv,printMethod:Zv,printReturnAndThrowArgument:eE}=vg,{printCallExpression:tE}=ry,{printInterface:nE}=gy,{printVariableDeclarator:rE,printAssignmentExpression:oE,printAssignment:iE,printAssignmentRight:uE}=zy,{printBinaryishExpression:aE}=Iy,{printStatementSequence:sE}=cD,{printMemberExpression:cE}=Dm,{printBlock:lE}=DD,{printComment:pE}=wD;function fE(e,t,n){const r=yv(e),o=n||"DirectiveLiteral"===e.type;return kD(r,t,o)}function dE(e){const t=e.flags.split("").sort().join("");return"/".concat(e.pattern,"/").concat(t)}var hE={preprocess:Pp,print:function(e,t,n,r){const o=e.getValue();let i=!1;const u=function(e,t,n,r){const o=e.getValue(),i=t.semi?";":"";if(!o)return"";if("string"==typeof o)return o;const u=zD(e,t,n);if(u)return u;let a=[];switch(o.type){case"JsExpressionRoot":return e.call(n,"node");case"JsonRoot":return _D([e.call(n,"node"),MD]);case"File":return o.program&&o.program.interpreter&&a.push(e.call((e=>e.call(n,"interpreter")),"program")),a.push(e.call(n,"program")),_D(a);case"Program":{const r=!o.body.every((({type:e})=>"EmptyStatement"===e))||o.comments;if(o.directives){const u=o.directives.length;e.each(((e,o)=>{a.push(n(e),i,MD),(o<u-1||r)&&OD(t.originalText,e.getValue(),Ev)&&a.push(MD)}),"directives")}return a.push(e.call((e=>sE(e,t,n)),"body")),a.push(ga.printDanglingComments(e,t,!0)),r&&a.push(MD),_D(a)}case"EmptyStatement":return"";case"ExpressionStatement":if(o.directive)return _D([fE(o.expression,t,!0),i]);if("__vue_event_binding"===t.parser){const t=e.getParentNode();if("Program"===t.type&&1===t.body.length&&t.body[0]===o)return _D([e.call(n,"expression"),HD(o.expression)?";":""])}return _D([e.call(n,"expression"),dv(t,e)?"":i]);case"ParenthesizedExpression":return o.expression.comments?VD(_D(["(",qD(_D([jD,e.call(n,"expression")])),jD,")"])):_D(["(",e.call(n,"expression"),")"]);case"AssignmentExpression":return oE(e,t,n);case"VariableDeclarator":return rE(e,t,n);case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":return aE(e,t,n);case"AssignmentPattern":return _D([e.call(n,"left")," = ",e.call(n,"right")]);case"TSTypeAssertion":{const t=!("ArrayExpression"===o.expression.type||"ObjectExpression"===o.expression.type),r=VD(_D(["<",qD(_D([jD,e.call(n,"typeAnnotation")])),jD,">"])),i=_D([UD("("),qD(_D([jD,e.call(n,"expression")])),jD,UD(")")]);return t?WD([_D([r,e.call(n,"expression")]),_D([r,VD(i,{shouldBreak:!0})]),_D([r,e.call(n,"expression")])]):VD(_D([r,e.call(n,"expression")]))}case"OptionalMemberExpression":case"MemberExpression":return cE(e,t,n);case"MetaProperty":return _D([e.call(n,"meta"),".",e.call(n,"property")]);case"BindExpression":return o.object&&a.push(e.call(n,"object")),a.push(VD(qD(_D([jD,Cv(e,t,n)])))),_D(a);case"Identifier":return _D([o.name,bv(e),Lv(e,t,n)]);case"V8IntrinsicIdentifier":return _D(["%",o.name]);case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":case"ObjectTypeSpreadProperty":return _D(["...",e.call(n,"argument"),Lv(e,t,n)]);case"FunctionDeclaration":case"FunctionExpression":return a.push(Kv(e,n,t,r&&r.expandLastArg&&YD(e.getParentNode()).length>1)),o.body||a.push(i),_D(a);case"ArrowFunctionExpression":return Qv(e,t,n,r);case"YieldExpression":return a.push("yield"),o.delegate&&a.push("*"),o.argument&&a.push(" ",e.call(n,"argument")),_D(a);case"AwaitExpression":{a.push("await"),o.argument&&a.push(" ",e.call(n,"argument"));const t=e.getParentNode();return("CallExpression"===t.type||"OptionalCallExpression"===t.type)&&t.callee===o||("MemberExpression"===t.type||"OptionalMemberExpression"===t.type)&&t.object===o?VD(_D([qD(_D([jD,_D(a)])),jD])):_D(a)}case"TSExportAssignment":return _D(["export = ",e.call(n,"expression"),i]);case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"DeclareExportDeclaration":return Tv(e,t,n);case"ExportAllDeclaration":case"DeclareExportAllDeclaration":return Bv(e,t,n);case"ImportDeclaration":return wv(e,t,n);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return Nv(e,t,n);case"ImportAttribute":return _D([e.call(n,"key"),": ",e.call(n,"value")]);case"Import":return"import";case"TSModuleBlock":case"BlockStatement":case"StaticBlock":return lE(e,t,n);case"ThrowStatement":case"ReturnStatement":return _D(["ReturnStatement"===o.type?"return":"throw",eE(e,t,n)]);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return tE(e,t,n);case"ObjectTypeInternalSlot":return _D([o.static?"static ":"","[[",e.call(n,"id"),"]]",bv(e),o.method?"":": ",e.call(n,"value")]);case"ObjectExpression":case"ObjectPattern":case"ObjectTypeAnnotation":case"TSInterfaceBody":case"TSTypeLiteral":case"RecordExpression":return Iv(e,t,n);case"ObjectProperty":case"Property":return o.method||"get"===o.kind||"set"===o.kind?Zv(e,t,n):(o.shorthand?a.push(e.call(n,"value")):a.push(iE(o.key,Yv(e,t,n),":",o.value,e.call(n,"value"),t)),_D(a));case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":case"TSAbstractMethodDefinition":case"TSDeclareMethod":return Hv(e,t,n);case"ObjectMethod":return Zv(e,t,n);case"Decorator":return _D(["@",e.call(n,"expression"),e.call(n,"callee")]);case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return Ov(e,t,n);case"SequenceExpression":{const t=e.getParentNode(0);if("ExpressionStatement"===t.type||"ForStatement"===t.type){const t=[];return e.each((e=>{0===e.getName()?t.push(n(e)):t.push(",",qD(_D([LD,n(e)])))}),"expressions"),VD(_D(t))}return VD(_D([ID(_D([",",LD]),e.map(n,"expressions"))]))}case"ThisExpression":return"this";case"Super":return"super";case"NullLiteral":return"null";case"RegExpLiteral":return dE(o);case"NumericLiteral":return PD(o.extra.raw);case"DecimalLiteral":return PD(o.value)+"m";case"BigIntLiteral":return(o.bigint||o.extra.raw).toLowerCase();case"BooleanLiteral":case"StringLiteral":case"Literal":return o.regex?dE(o.regex):o.bigint?o.raw.toLowerCase():"number"==typeof o.value?PD(o.raw):"string"!=typeof o.value?""+o.value:fE(o,t);case"Directive":return e.call(n,"value");case"DirectiveLiteral":return fE(o,t);case"UnaryExpression":return a.push(o.operator),/[a-z]$/.test(o.operator)&&a.push(" "),o.argument.comments&&o.argument.comments.length>0?a.push(VD(_D(["(",qD(_D([jD,e.call(n,"argument")])),jD,")"]))):a.push(e.call(n,"argument")),_D(a);case"UpdateExpression":return a.push(e.call(n,"argument"),o.operator),o.prefix&&a.reverse(),_D(a);case"ConditionalExpression":return Cf(e,t,n,{beforeParts:()=>[e.call(n,"test")],afterParts:e=>[e?jD:""],shouldCheckJsx:!0,conditionalNodeType:"ConditionalExpression",consequentNodePropertyName:"consequent",alternateNodePropertyName:"alternate",testNodePropertyNames:["test"]});case"VariableDeclaration":{const t=e.map((e=>n(e)),"declarations"),r=e.getParentNode(),u="ForStatement"===r.type||"ForInStatement"===r.type||"ForOfStatement"===r.type,s=o.declarations.some((e=>e.init));let c;return 1!==t.length||o.declarations[0].comments?t.length>0&&(c=qD(t[0])):c=t[0],a=[o.declare?"declare ":"",o.kind,c?_D([" ",c]):"",qD(_D(t.slice(1).map((e=>_D([",",s&&!u?MD:LD,e])))))],u&&r.body!==o||a.push(i),VD(_D(a))}case"TSTypeAliasDeclaration":{o.declare&&a.push("declare ");const r=uE(o.id,o.typeAnnotation,o.typeAnnotation&&e.call(n,"typeAnnotation"),t);return a.push("type ",e.call(n,"id"),e.call(n,"typeParameters")," =",r,i),VD(_D(a))}case"WithStatement":return VD(_D(["with (",e.call(n,"object"),")",Sv(o.body,e.call(n,"body"))]));case"IfStatement":{const r=Sv(o.consequent,e.call(n,"consequent")),i=VD(_D(["if (",VD(_D([qD(_D([jD,e.call(n,"test")])),jD])),")",r]));if(a.push(i),o.alternate){const r=iv(o.consequent)&&o.consequent.comments.some((e=>e.trailing&&!gv(e)))||mv(o),i="BlockStatement"===o.consequent.type&&!r;a.push(i?" ":MD),ZD(o)&&a.push(ga.printDanglingComments(e,t,!0),r?MD:" "),a.push("else",VD(Sv(o.alternate,e.call(n,"alternate"),"IfStatement"===o.alternate.type)))}return _D(a)}case"ForStatement":{const r=Sv(o.body,e.call(n,"body")),i=ga.printDanglingComments(e,t,!0),u=i?_D([i,jD]):"";return o.init||o.test||o.update?_D([u,VD(_D(["for (",VD(_D([qD(_D([jD,e.call(n,"init"),";",LD,e.call(n,"test"),";",LD,e.call(n,"update")])),jD])),")",r]))]):_D([u,VD(_D(["for (;;)",r]))])}case"WhileStatement":return VD(_D(["while (",VD(_D([qD(_D([jD,e.call(n,"test")])),jD])),")",Sv(o.body,e.call(n,"body"))]));case"ForInStatement":return VD(_D(["for (",e.call(n,"left")," in ",e.call(n,"right"),")",Sv(o.body,e.call(n,"body"))]));case"ForOfStatement":return VD(_D(["for",o.await?" await":""," (",e.call(n,"left")," of ",e.call(n,"right"),")",Sv(o.body,e.call(n,"body"))]));case"DoWhileStatement":{const t=Sv(o.body,e.call(n,"body")),r=VD(_D(["do",t]));return a=[r],"BlockStatement"===o.body.type?a.push(" "):a.push(MD),a.push("while ("),a.push(VD(_D([qD(_D([jD,e.call(n,"test")])),jD])),")",i),_D(a)}case"DoExpression":return _D(["do ",e.call(n,"body")]);case"BreakStatement":return a.push("break"),o.label&&a.push(" ",e.call(n,"label")),a.push(i),_D(a);case"ContinueStatement":return a.push("continue"),o.label&&a.push(" ",e.call(n,"label")),a.push(i),_D(a);case"LabeledStatement":return"EmptyStatement"===o.body.type?_D([e.call(n,"label"),":;"]):_D([e.call(n,"label"),": ",e.call(n,"body")]);case"TryStatement":return _D(["try ",e.call(n,"block"),o.handler?_D([" ",e.call(n,"handler")]):"",o.finalizer?_D([" finally ",e.call(n,"finalizer")]):""]);case"CatchClause":if(o.param){const r=o.param.comments&&o.param.comments.some((e=>!gv(e)||e.leading&&TD(t.originalText,Ev(e))||e.trailing&&TD(t.originalText,vv(e),{backwards:!0}))),i=e.call(n,"param");return _D(["catch ",_D(r?["(",qD(_D([jD,i])),jD,") "]:["(",i,") "]),e.call(n,"body")])}return _D(["catch ",e.call(n,"body")]);case"SwitchStatement":return _D([VD(_D(["switch (",qD(_D([jD,e.call(n,"discriminant")])),jD,")"]))," {",o.cases.length>0?qD(_D([MD,ID(MD,e.map((e=>{const r=e.getValue();return _D([e.call(n),o.cases.indexOf(r)!==o.cases.length-1&&OD(t.originalText,r,Ev)?MD:""])}),"cases"))])):"",MD,"}"]);case"SwitchCase":{o.test?a.push("case ",e.call(n,"test"),":"):a.push("default:");const r=o.consequent.filter((e=>"EmptyStatement"!==e.type));if(r.length>0){const o=e.call((e=>sE(e,t,n)),"consequent");a.push(1===r.length&&"BlockStatement"===r[0].type?_D([" ",o]):qD(_D([MD,o])))}return _D(a)}case"DebuggerStatement":return _D(["debugger",i]);case"JSXAttribute":return Rv(e,t,n);case"JSXIdentifier":return""+o.name;case"JSXNamespacedName":return ID(":",[e.call(n,"namespace"),e.call(n,"name")]);case"JSXMemberExpression":return ID(".",[e.call(n,"object"),e.call(n,"property")]);case"TSQualifiedName":return ID(".",[e.call(n,"left"),e.call(n,"right")]);case"JSXSpreadAttribute":return Jv(e,t,n);case"JSXSpreadChild":return Gv(e,t,n);case"JSXExpressionContainer":return Wv(e,t,n);case"JSXFragment":case"JSXElement":return jv(e,t,n);case"JSXOpeningElement":return Vv(e,t,n);case"JSXClosingElement":return qv(e,t,n);case"JSXOpeningFragment":case"JSXClosingFragment":return $v(e,t);case"JSXText":throw new Error("JSXTest should be handled by JSXElement");case"JSXEmptyExpression":return Uv(e,t);case"ClassBody":return o.comments||0!==o.body.length?_D(["{",o.body.length>0?qD(_D([MD,e.call((e=>sE(e,t,n)),"body")])):ga.printDanglingComments(e,t),MD,"}"]):"{}";case"ClassProperty":case"FieldDefinition":case"TSAbstractClassProperty":case"ClassPrivateProperty":return o.decorators&&0!==o.decorators.length&&a.push(Fv(e,t,n)),o.accessibility&&a.push(o.accessibility+" "),o.declare&&a.push("declare "),o.static&&a.push("static "),("TSAbstractClassProperty"===o.type||o.abstract)&&a.push("abstract "),o.readonly&&a.push("readonly "),o.variance&&a.push(e.call(n,"variance")),a.push(Yv(e,t,n),bv(e),Lv(e,t,n)),o.value&&a.push(" =",uE(o.key,o.value,e.call(n,"value"),t)),a.push(i),VD(_D(a));case"ClassDeclaration":case"ClassExpression":return o.declare&&a.push("declare "),a.push(zv(e,t,n)),_D(a);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":return a.push(e.call(n,"expression")),o.typeParameters&&a.push(e.call(n,"typeParameters")),_D(a);case"TemplateElement":return ID(RD,o.value.raw.split(/\r?\n/g));case"TSTemplateLiteralType":case"TemplateLiteral":return Pv(e,n,t);case"TaggedTemplateExpression":return _D([e.call(n,"tag"),e.call(n,"typeParameters"),e.call(n,"quasi")]);case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":case"Type":throw new Error("unprintable type: "+JSON.stringify(o.type));case"TypeAnnotation":case"TSTypeAnnotation":return o.typeAnnotation?e.call(n,"typeAnnotation"):"";case"TSNamedTupleMember":return _D([e.call(n,"label"),o.optional?"?":"",": ",e.call(n,"elementType")]);case"TSTupleType":case"TupleTypeAnnotation":{const r="TSTupleType"===o.type?"elementTypes":"types",i=o[r].length>0&&"TSRestType"===ND(o[r]).type;return VD(_D(["[",qD(_D([jD,_v(e,t,r,n)])),UD(Dv(t,"all")&&!i?",":""),ga.printDanglingComments(e,t,!0),jD,"]"]))}case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return _D([e.call(n,"elementType"),"[]"]);case"BooleanLiteralTypeAnnotation":return""+o.value;case"DeclareClass":return xv(e,zv(e,t,n));case"TSDeclareFunction":return _D([o.declare?"declare ":"",Kv(e,n,t),i]);case"DeclareFunction":return xv(e,_D(["function ",e.call(n,"id"),o.predicate?" ":"",e.call(n,"predicate"),i]));case"DeclareModule":return xv(e,_D(["module ",e.call(n,"id")," ",e.call(n,"body")]));case"DeclareModuleExports":return xv(e,_D(["module.exports",": ",e.call(n,"typeAnnotation"),i]));case"DeclareVariable":return xv(e,_D(["var ",e.call(n,"id"),i]));case"DeclareOpaqueType":case"OpaqueType":return a.push("opaque type ",e.call(n,"id"),e.call(n,"typeParameters")),o.supertype&&a.push(": ",e.call(n,"supertype")),o.impltype&&a.push(" = ",e.call(n,"impltype")),a.push(i),"DeclareOpaqueType"===o.type?xv(e,_D(a)):_D(a);case"EnumDeclaration":return _D(["enum ",e.call(n,"id")," ",e.call(n,"body")]);case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":if("EnumSymbolBody"===o.type||o.explicitType){let e=null;switch(o.type){case"EnumBooleanBody":e="boolean";break;case"EnumNumberBody":e="number";break;case"EnumStringBody":e="string";break;case"EnumSymbolBody":e="symbol"}a.push("of ",e," ")}if(0!==o.members.length||o.hasUnknownMembers){const r=o.members.length?[MD,_v(e,t,"members",n),o.hasUnknownMembers||Dv(t)?",":""]:[];a.push(VD(_D(["{",qD(_D([...r,...o.hasUnknownMembers?[MD,"..."]:[]])),ga.printDanglingComments(e,t,!0),MD,"}"])))}else a.push(VD(_D(["{",ga.printDanglingComments(e,t),jD,"}"])));return _D(a);case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return _D([e.call(n,"id")," = ","object"==typeof o.init?e.call(n,"init"):String(o.init)]);case"EnumDefaultedMember":return e.call(n,"id");case"FunctionTypeAnnotation":case"TSFunctionType":{const r=e.getParentNode(0),i=e.getParentNode(1),u=e.getParentNode(2);let s="TSFunctionType"===o.type||!(("ObjectTypeProperty"===r.type||"ObjectTypeInternalSlot"===r.type)&&!r.variance&&!r.optional&&vv(r)===vv(o)||"ObjectTypeCallProperty"===r.type||u&&"DeclareFunction"===u.type),c=s&&("TypeAnnotation"===r.type||"TSTypeAnnotation"===r.type);const l=c&&s&&("TypeAnnotation"===r.type||"TSTypeAnnotation"===r.type)&&"ArrowFunctionExpression"===i.type;return fv(r)&&(s=!0,c=!0),l&&a.push("("),a.push(kv(e,n,t,!1,!0)),(o.returnType||o.predicate||o.typeAnnotation)&&a.push(s?" => ":": ",e.call(n,"returnType"),e.call(n,"predicate"),e.call(n,"typeAnnotation")),l&&a.push(")"),VD(_D(a))}case"TSRestType":return _D(["...",e.call(n,"typeAnnotation")]);case"TSOptionalType":return _D([e.call(n,"typeAnnotation"),"?"]);case"FunctionTypeParam":{const t=o.name?e.call(n,"name"):e.getParentNode().this===o?"this":"";return _D([t,bv(e),t?": ":"",e.call(n,"typeAnnotation")])}case"DeclareInterface":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":case"TSInterfaceDeclaration":return nE(e,t,n);case"ClassImplements":case"InterfaceExtends":return _D([e.call(n,"id"),e.call(n,"typeParameters")]);case"TSClassImplements":return _D([e.call(n,"expression"),e.call(n,"typeParameters")]);case"TSIntersectionType":case"IntersectionTypeAnnotation":{const t=e.map(n,"types"),r=[];let i=!1;for(let e=0;e<t.length;++e)0===e?r.push(t[e]):pv(o.types[e-1])&&pv(o.types[e])?r.push(_D([" & ",i?qD(t[e]):t[e]])):pv(o.types[e-1])||pv(o.types[e])?(e>1&&(i=!0),r.push(" & ",e>1?qD(t[e]):t[e])):r.push(qD(_D([" &",LD,t[e]])));return VD(_D(r))}case"TSUnionType":case"UnionTypeAnnotation":{const r=e.getParentNode(),i=!("TypeParameterInstantiation"===r.type||"TSTypeParameterInstantiation"===r.type||"GenericTypeAnnotation"===r.type||"TSTypeReference"===r.type||"TSTypeAssertion"===r.type||"TupleTypeAnnotation"===r.type||"TSTupleType"===r.type||"FunctionTypeParam"===r.type&&!r.name&&e.getParentNode(1).this!==r||("TypeAlias"===r.type||"VariableDeclarator"===r.type||"TSTypeAliasDeclaration"===r.type)&&tv(t.originalText,o)),u=Mv(o),a=e.map((e=>{let r=e.call(n);return u||(r=$D(2,r)),ga.printComments(e,(()=>r),t)}),"types");if(u)return ID(" | ",a);const s=i&&!tv(t.originalText,o),c=_D([UD(_D([s?LD:"","| "])),ID(_D([LD,"| "]),a)]);return Fp(e,t)?VD(_D([qD(c),jD])):"TupleTypeAnnotation"===r.type&&r.types.length>1||"TSTupleType"===r.type&&r.elementTypes.length>1?VD(_D([qD(_D([UD(_D(["(",jD])),c])),jD,UD(")")])):VD(i?qD(c):c)}case"NullableTypeAnnotation":return _D(["?",e.call(n,"typeAnnotation")]);case"Variance":{const{kind:e}=o;return Gu.ok("plus"===e||"minus"===e),"plus"===e?"+":"-"}case"ObjectTypeCallProperty":return o.static&&a.push("static "),a.push(e.call(n,"value")),_D(a);case"ObjectTypeIndexer":return _D([o.variance?e.call(n,"variance"):"","[",e.call(n,"id"),o.id?": ":"",e.call(n,"key"),"]: ",e.call(n,"value")]);case"ObjectTypeProperty":{let r="";return o.proto?r="proto ":o.static&&(r="static "),_D([r,sv(o)?o.kind+" ":"",o.variance?e.call(n,"variance"):"",Yv(e,t,n),bv(e),av(o)?"":": ",e.call(n,"value")])}case"QualifiedTypeIdentifier":return _D([e.call(n,"qualification"),".",e.call(n,"id")]);case"StringLiteralTypeAnnotation":return fE(o,t);case"NumberLiteralTypeAnnotation":Gu.strictEqual(typeof o.value,"number");case"BigIntLiteralTypeAnnotation":return null!=o.extra?PD(o.extra.raw):PD(o.raw);case"DeclareTypeAlias":case"TypeAlias":{("DeclareTypeAlias"===o.type||o.declare)&&a.push("declare ");const r=uE(o.id,o.right,e.call(n,"right"),t);return a.push("type ",e.call(n,"id"),e.call(n,"typeParameters")," =",r,i),VD(_D(a))}case"TypeCastExpression":return _D(["(",e.call(n,"expression"),Lv(e,t,n),")"]);case"TypeParameterDeclaration":case"TypeParameterInstantiation":{const r=Xv(e,t,n,"params");if("flow"===t.parser){const e=vv(o),n=Ev(o),i=t.originalText.lastIndexOf("/*",e),u=t.originalText.indexOf("*/",n);if(-1!==i&&-1!==u){const e=t.originalText.slice(i+2,u).trim();if(e.startsWith("::")&&!e.includes("/*")&&!e.includes("*/"))return _D(["/*:: ",r," */"])}}return r}case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return Xv(e,t,n,"params");case"TSTypeParameter":case"TypeParameter":{const r=e.getParentNode();if("TSMappedType"===r.type)return a.push("[",e.call(n,"name")),o.constraint&&a.push(" in ",e.call(n,"constraint")),r.nameType&&a.push(" as ",e.callParent((e=>e.call(n,"nameType")))),a.push("]"),_D(a);o.variance&&a.push(e.call(n,"variance")),a.push(e.call(n,"name")),o.bound&&(a.push(": "),a.push(e.call(n,"bound"))),o.constraint&&a.push(" extends ",e.call(n,"constraint")),o.default&&a.push(" = ",e.call(n,"default"));const i=e.getNode(2);return 1===XD(r).length&&hv(t)&&!o.constraint&&"ArrowFunctionExpression"===i.type&&a.push(","),_D(a)}case"TypeofTypeAnnotation":return _D(["typeof ",e.call(n,"argument")]);case"InferredPredicate":return"%checks";case"DeclaredPredicate":return _D(["%checks(",e.call(n,"value"),")"]);case"TSAbstractKeyword":return"abstract";case"AnyTypeAnnotation":case"TSAnyKeyword":return"any";case"TSAsyncKeyword":return"async";case"BooleanTypeAnnotation":case"TSBooleanKeyword":return"boolean";case"BigIntTypeAnnotation":case"TSBigIntKeyword":return"bigint";case"TSConstKeyword":return"const";case"TSDeclareKeyword":return"declare";case"TSExportKeyword":return"export";case"NullLiteralTypeAnnotation":case"TSNullKeyword":return"null";case"TSNeverKeyword":return"never";case"NumberTypeAnnotation":case"TSNumberKeyword":return"number";case"TSObjectKeyword":return"object";case"TSProtectedKeyword":return"protected";case"TSPrivateKeyword":return"private";case"TSPublicKeyword":return"public";case"TSReadonlyKeyword":return"readonly";case"SymbolTypeAnnotation":case"TSSymbolKeyword":return"symbol";case"TSStaticKeyword":return"static";case"StringTypeAnnotation":case"TSStringKeyword":return"string";case"TSUndefinedKeyword":return"undefined";case"TSUnknownKeyword":return"unknown";case"VoidTypeAnnotation":case"TSVoidKeyword":return"void";case"TSAsExpression":return _D([e.call(n,"expression")," as ",e.call(n,"typeAnnotation")]);case"TSArrayType":return _D([e.call(n,"elementType"),"[]"]);case"TSPropertySignature":return o.export&&a.push("export "),o.accessibility&&a.push(o.accessibility+" "),o.static&&a.push("static "),o.readonly&&a.push("readonly "),a.push(Yv(e,t,n),bv(e)),o.typeAnnotation&&(a.push(": "),a.push(e.call(n,"typeAnnotation"))),o.initializer&&a.push(" = ",e.call(n,"initializer")),_D(a);case"TSParameterProperty":return o.accessibility&&a.push(o.accessibility+" "),o.export&&a.push("export "),o.static&&a.push("static "),o.readonly&&a.push("readonly "),a.push(e.call(n,"parameter")),_D(a);case"GenericTypeAnnotation":case"TSTypeReference":return _D([e.call(n,"TSTypeReference"===o.type?"typeName":"id"),Xv(e,t,n,"typeParameters")]);case"TSTypeQuery":return _D(["typeof ",e.call(n,"exprName")]);case"TSIndexSignature":{const r=e.getParentNode(),u=o.parameters.length>1?UD(Dv(t)?",":""):"",a=VD(_D([qD(_D([jD,ID(_D([", ",jD]),e.map(n,"parameters"))])),u,jD]));return _D([o.export?"export ":"",o.accessibility?_D([o.accessibility," "]):"",o.static?"static ":"",o.readonly?"readonly ":"",o.declare?"declare ":"","[",o.parameters?a:"",o.typeAnnotation?"]: ":"]",o.typeAnnotation?e.call(n,"typeAnnotation"):"","ClassBody"===r.type?i:""])}case"TSTypePredicate":return _D([o.asserts?"asserts ":"",e.call(n,"parameterName"),o.typeAnnotation?_D([" is ",e.call(n,"typeAnnotation")]):""]);case"TSNonNullExpression":return _D([e.call(n,"expression"),"!"]);case"ThisTypeAnnotation":case"TSThisType":return"this";case"TSImportType":return _D([o.isTypeOf?"typeof ":"","import(",e.call(n,o.parameter?"parameter":"argument"),")",o.qualifier?_D([".",e.call(n,"qualifier")]):"",Xv(e,t,n,"typeParameters")]);case"TSLiteralType":return e.call(n,"literal");case"TSIndexedAccessType":return _D([e.call(n,"objectType"),"[",e.call(n,"indexType"),"]"]);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":if("TSCallSignatureDeclaration"!==o.type&&a.push("new "),a.push(VD(kv(e,n,t,!1,!0))),o.returnType||o.typeAnnotation){const t="TSConstructorType"===o.type;a.push(t?" => ":": ",e.call(n,"returnType"),e.call(n,"typeAnnotation"))}return _D(a);case"TSTypeOperator":return _D([o.operator," ",e.call(n,"typeAnnotation")]);case"TSMappedType":{const r=BD(t.originalText,vv(o),Ev(o));return VD(_D(["{",qD(_D([t.bracketSpacing?LD:jD,o.readonly?_D([QD(o.readonly,"readonly")," "]):"",Av(e,t,n),e.call(n,"typeParameter"),o.optional?QD(o.optional,"?"):"",o.typeAnnotation?": ":"",e.call(n,"typeAnnotation"),UD(i,"")])),ga.printDanglingComments(e,t,!0),t.bracketSpacing?LD:jD,"}"]),{shouldBreak:r})}case"TSMethodSignature":return a.push(o.accessibility?_D([o.accessibility," "]):"",o.export?"export ":"",o.static?"static ":"",o.readonly?"readonly ":"",o.computed?"[":"",e.call(n,"key"),o.computed?"]":"",bv(e),kv(e,n,t,!1,!0)),(o.returnType||o.typeAnnotation)&&a.push(": ",e.call(n,"returnType"),e.call(n,"typeAnnotation")),VD(_D(a));case"TSNamespaceExportDeclaration":return a.push("export as namespace ",e.call(n,"id")),t.semi&&a.push(";"),VD(_D(a));case"TSEnumDeclaration":return o.declare&&a.push("declare "),o.modifiers&&a.push(Av(e,t,n)),o.const&&a.push("const "),a.push("enum ",e.call(n,"id")," "),0===o.members.length?a.push(VD(_D(["{",ga.printDanglingComments(e,t),jD,"}"]))):a.push(VD(_D(["{",qD(_D([MD,_v(e,t,"members",n),Dv(t,"es5")?",":""])),ga.printDanglingComments(e,t,!0),MD,"}"]))),_D(a);case"TSEnumMember":return a.push(e.call(n,"id")),o.initializer&&a.push(" = ",e.call(n,"initializer")),_D(a);case"TSImportEqualsDeclaration":return o.isExport&&a.push("export "),a.push("import ",e.call(n,"id")," = ",e.call(n,"moduleReference")),t.semi&&a.push(";"),VD(_D(a));case"TSExternalModuleReference":return _D(["require(",e.call(n,"expression"),")"]);case"TSModuleDeclaration":{const r=e.getParentNode(),u=cv(o.id),s="TSModuleDeclaration"===r.type,c=o.body&&"TSModuleDeclaration"===o.body.type;if(s)a.push(".");else{o.declare&&a.push("declare "),a.push(Av(e,t,n));const r=t.originalText.slice(vv(o),vv(o.id));"Identifier"===o.id.type&&"global"===o.id.name&&!/namespace|module/.test(r)||a.push(u||/(^|\s)module(\s|$)/.test(r)?"module ":"namespace ")}return a.push(e.call(n,"id")),c?a.push(e.call(n,"body")):o.body?a.push(" ",VD(e.call(n,"body"))):a.push(i),_D(a)}case"PrivateName":return _D(["#",e.call(n,o.id?"id":"name")]);case"TSPrivateIdentifier":return o.escapedText;case"TSConditionalType":return Cf(e,t,n,{beforeParts:()=>[e.call(n,"checkType")," ","extends"," ",e.call(n,"extendsType")],afterParts:()=>[],shouldCheckJsx:!1,conditionalNodeType:"TSConditionalType",consequentNodePropertyName:"trueType",alternateNodePropertyName:"falseType",testNodePropertyNames:["checkType","extendsType"]});case"TSInferType":return _D(["infer"," ",e.call(n,"typeParameter")]);case"InterpreterDirective":return a.push("#!",o.value,MD),OD(t.originalText,o,Ev)&&a.push(MD),_D(a);case"NGRoot":return _D([].concat(e.call(n,"node"),o.node.comments&&0!==o.node.comments.length?_D([" //",o.node.comments[0].value.trimEnd()]):[]));case"NGChainedExpression":return VD(ID(_D([";",LD]),e.map((e=>rv(e)?n(e):_D(["(",n(e),")"])),"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return _D([o.prefix,": ",o.value.trim()]);case"NGMicrosyntax":return _D(e.map(((e,t)=>_D([0===t?"":lv(e.getValue(),t,o)?" ":_D([";",LD]),n(e)])),"body"));case"NGMicrosyntaxKey":return/^[$_a-z][\w$]*(-[$_a-z][\w$])*$/i.test(o.name)?o.name:JSON.stringify(o.name);case"NGMicrosyntaxExpression":return _D([e.call(n,"expression"),null===o.alias?"":_D([" as ",e.call(n,"alias")])]);case"NGMicrosyntaxKeyedExpression":{const t=e.getName(),r=e.getParentNode(),i=lv(o,t,r)||(1===t&&("then"===o.key.name||"else"===o.key.name)||2===t&&"else"===o.key.name&&"NGMicrosyntaxKeyedExpression"===r.body[t-1].type&&"then"===r.body[t-1].key.name)&&"NGMicrosyntaxExpression"===r.body[0].type;return _D([e.call(n,"key"),i?" ":": ",e.call(n,"expression")])}case"NGMicrosyntaxLet":return _D(["let ",e.call(n,"key"),null===o.value?"":_D([" = ",e.call(n,"value")])]);case"NGMicrosyntaxAs":return _D([e.call(n,"key")," as ",e.call(n,"alias")]);case"PipelineBareFunction":return e.call(n,"callee");case"PipelineTopicExpression":return e.call(n,"expression");case"PipelinePrimaryTopicReference":return a.push("#"),_D(a);case"ArgumentPlaceholder":return"?";case"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return _D(["?",e.call(n,"typeAnnotation")]);case"TSJSDocNonNullableType":return _D(["!",e.call(n,"typeAnnotation")]);case"TSJSDocFunctionType":return _D(["function(","): ",e.call(n,"typeAnnotation")]);default:throw new Error("unknown type: "+JSON.stringify(o.type))}}(e,t,n,r);if(!o||JD(u))return u;const a=KD(e),s=[];if("ClassMethod"===o.type||"ClassPrivateMethod"===o.type||"ClassProperty"===o.type||"FieldDefinition"===o.type||"TSAbstractClassProperty"===o.type||"ClassPrivateProperty"===o.type||"MethodDefinition"===o.type||"TSAbstractMethodDefinition"===o.type||"TSDeclareMethod"===o.type);else if(o.decorators&&o.decorators.length>0&&!(a&&vv(a,{ignoreDecorators:!0})>vv(o.decorators[0]))){const r="ClassExpression"===o.type||"ClassDeclaration"===o.type||nv(o,t)?MD:LD;e.each((e=>{let t=e.getValue();t=t.expression?t.expression:t.callee,s.push(n(e),r)}),"decorators"),a&&s.unshift(MD)}else uv(o)&&o.declaration&&o.declaration.decorators&&o.declaration.decorators.length>0&&vv(o,{ignoreDecorators:!0})>vv(o.declaration.decorators[0])?e.each((e=>{const t="Decorator"===e.getValue().type?"":"@";s.push(t,n(e),MD)}),"declaration","decorators"):i=Fp(e,t);const c=[];if(i&&c.unshift("("),c.push(u),i){const t=e.getValue();ev(t)&&(c.push(" /*"),c.push(t.trailingComments[0].value.trimStart()),c.push("*/"),t.trailingComments[0].printed=!0),c.push(")")}return s.length>0?VD(_D(s.concat(c))):_D(c)},embed:function(e,t,n,r){const o=e.getValue();if("TemplateLiteral"!==o.type||function({quasis:e}){return e.some((({value:{cooked:e}})=>null===e))}(o))return;const i=function(e){return function(e){const t=e.getValue(),n=e.getParentNode(),r=e.getParentNode(1);return r&&t.quasis&&"JSXExpressionContainer"===n.type&&"JSXElement"===r.type&&"style"===r.openingElement.name.name&&r.openingElement.attributes.some((e=>"jsx"===e.name.name))||n&&"TaggedTemplateExpression"===n.type&&"Identifier"===n.tag.type&&"css"===n.tag.name||n&&"TaggedTemplateExpression"===n.type&&"MemberExpression"===n.tag.type&&"css"===n.tag.object.name&&("global"===n.tag.property.name||"resolve"===n.tag.property.name)}(e)||function(e){const t=e.getParentNode();if(!t||"TaggedTemplateExpression"!==t.type)return!1;const{tag:n}=t;switch(n.type){case"MemberExpression":return Hl(n.object)||Xl(n);case"CallExpression":return Hl(n.callee)||"MemberExpression"===n.callee.type&&("MemberExpression"===n.callee.object.type&&(Hl(n.callee.object.object)||Xl(n.callee.object))||"CallExpression"===n.callee.object.type&&Hl(n.callee.object.callee));case"Identifier":return"css"===n.name;default:return!1}}(e)||function(e){const t=e.getParentNode(),n=e.getParentNode(1);return n&&"JSXExpressionContainer"===t.type&&"JSXAttribute"===n.type&&"JSXIdentifier"===n.name.type&&"css"===n.name.name}(e)||function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"ArrayExpression"===e.type&&"elements"===t),((e,t)=>("Property"===e.type||"ObjectProperty"===e.type)&&"Identifier"===e.key.type&&"styles"===e.key.name&&"value"===t),...zl)}(e)?"css":function(e){const t=e.getValue(),n=e.getParentNode();return Yl(t,"GraphQL")||n&&("TaggedTemplateExpression"===n.type&&("MemberExpression"===n.tag.type&&"graphql"===n.tag.object.name&&"experimental"===n.tag.property.name||"Identifier"===n.tag.type&&("gql"===n.tag.name||"graphql"===n.tag.name))||"CallExpression"===n.type&&"Identifier"===n.callee.type&&"graphql"===n.callee.name)}(e)?"graphql":function(e){return Yl(e.getValue(),"HTML")||e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"TaggedTemplateExpression"===e.type&&"Identifier"===e.tag.type&&"html"===e.tag.name&&"quasi"===t))}(e)?"html":function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>("Property"===e.type||"ObjectProperty"===e.type)&&"Identifier"===e.key.type&&"template"===e.key.name&&"value"===t),...zl)}(e)?"angular":function(e){const t=e.getValue(),n=e.getParentNode();return n&&"TaggedTemplateExpression"===n.type&&1===t.quasis.length&&"Identifier"===n.tag.type&&("md"===n.tag.name||"markdown"===n.tag.name)}(e)?"markdown":void 0}(e);return i?"markdown"===i?function(e,t,n){let r=e.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g,((e,t)=>"\\".repeat(t.length/2)+"`"));const o=function(e){const t=e.match(/^([^\S\n]*)\S/m);return null===t?"":t[1]}(r),i=""!==o;i&&(r=r.replace(new RegExp("^".concat(o),"gm"),""));const u=bl(n(r,{parser:"markdown",__inJsTemplate:!0},{stripTrailingHardline:!0}),!0);return vl(["`",i?ml(vl([yl,u])):vl([Dl,El(u)]),yl,"`"])}(e,0,n):"css"===i?function(e,t,n){const r=e.getValue(),o=r.quasis.map((e=>e.value.raw));let i=0;return function(e,t,n){if(1===t.quasis.length&&!t.quasis[0].value.raw.trim())return"``";const r=function(e,t){if(!t||!t.length)return e;let n=0;const r=Sl(e,(e=>{if(!e||!e.parts||!e.parts.length)return e;let{parts:r}=e;const o=r.indexOf("@"),i=o+1;if(o>-1&&"string"==typeof r[i]&&r[i].startsWith("prettier-placeholder")){const e=r[o],t=r[i],n=r.slice(i+1);r=r.slice(0,o).concat([e+t]).concat(n)}const u=[];return r.forEach((e=>{"string"==typeof e&&e.includes("@prettier-placeholder")?e.split(/@prettier-placeholder-(\d+)-id/).forEach(((e,r)=>{r%2!=0?(u.push(t[e]),n++):u.push(wl(e))})):u.push(e)})),Object.assign({},e,{parts:u})}));return t.length===n?r:null}(e,n);if(!r)throw new Error("Couldn't insert all the expressions");return xl(["`",Cl(xl([Al,r])),Fl,"`"])}(n(o.reduce(((e,t,n)=>0===n?t:e+"@prettier-placeholder-"+i+++"-id"+t),""),{parser:"scss"},{stripTrailingHardline:!0}),r,Tl(e,t))}(e,t,n):"graphql"===i?function(e,t,n){const r=e.getValue(),o=r.quasis.length;if(1===o&&""===r.quasis[0].value.raw.trim())return"``";const i=_l(e,t),u=[];for(let e=0;e<o;e++){const t=0===e,a=e===o-1,s=r.quasis[e].value.cooked,c=s.split("\n"),l=c.length,p=i[e],f=l>2&&""===c[0].trim()&&""===c[1].trim(),d=l>2&&""===c[l-1].trim()&&""===c[l-2].trim(),h=c.every((e=>/^\s*(?:#[^\n\r]*)?$/.test(e)));if(!a&&/#[^\n\r]*$/.test(c[l-1]))return null;let g=null;g=h?Il(c):n(s,{parser:"graphql"},{stripTrailingHardline:!0}),g?(g=Ol(g,!1),!t&&f&&u.push(""),u.push(g),!a&&d&&u.push("")):t||a||!f||u.push(""),p&&u.push(p)}return Pl(["`",Bl(Pl([kl,Nl(kl,u)])),kl,"`"])}(e,t,n):"html"===i||"angular"===i?function(e,t,n,r,{parser:o}){const i=e.getValue(),u=Ul;Ul=Ul+1>>>0;const a=e=>"PRETTIER_HTML_PLACEHOLDER_".concat(e,"_").concat(u,"_IN_JS"),s=i.quasis.map(((e,t,n)=>t===n.length-1?e.value.cooked:e.value.cooked+a(t))).join(""),c=$l(e,t);if(0===c.length&&0===s.trim().length)return"``";const l=new RegExp(a("(\\d+)"),"g");let p=0;const f=n(s,{parser:o,__onHtmlRoot(e){p=e.children.length}},{stripTrailingHardline:!0}),d=ql(f,(e=>{if("string"!=typeof e)return e;const t=[],n=e.split(l);for(let e=0;e<n.length;e++){let o=n[e];if(e%2==0){o&&(o=Wl(o),r.embeddedInHtml&&(o=o.replace(/<\/(script)\b/gi,"<\\/$1")),t.push(o));continue}const i=+o;t.push(c[i])}return Rl(t)})),h=/^\s/.test(s)?" ":"",g=/\s$/.test(s)?" ":"",m="ignore"===r.htmlWhitespaceSensitivity?jl:h&&g?Ml:null;return Vl(Rl(m?["`",Ll(Rl([m,Vl(d)])),m,"`"]:["`",h,p>1?Ll(Vl(d)):Vl(d),g,"`"]))}(e,t,n,r,{parser:i}):void 0:void 0},insertPragma:GD,massageAstNode:ep,hasPrettierIgnore:ov,willPrintOwnComments:Kc.willPrintOwnComments,canAttachComment:function(e){return e.type&&"CommentBlock"!==e.type&&"CommentLine"!==e.type&&"Line"!==e.type&&"Block"!==e.type&&"EmptyStatement"!==e.type&&"TemplateElement"!==e.type&&"Import"!==e.type},printComment:pE,isBlockComment:gv,handleComments:{ownLine:Kc.handleOwnLineComment,endOfLine:Kc.handleEndOfLineComment,remaining:Kc.handleRemainingComment},getGapRegex:Kc.getGapRegex,getCommentChildNodes:Kc.getCommentChildNodes};const{builders:{concat:gE,hardline:mE,indent:yE,join:DE}}=cn,vE=new Set(["start","end","extra","loc","comments","errors","range"]);function EE(e,t){const{type:n}=e;return"Identifier"===n?{type:"StringLiteral",value:e.name}:"UnaryExpression"===n&&"+"===e.operator?t.argument:void 0}EE.ignoredProperties=vE;var bE={preprocess:Pp,print:function(e,t,n){const r=e.getValue();switch(r.type){case"JsonRoot":return gE([e.call(n,"node"),mE]);case"ArrayExpression":return 0===r.elements.length?"[]":gE(["[",yE(gE([mE,DE(gE([",",mE]),e.map(n,"elements"))])),mE,"]"]);case"ObjectExpression":return 0===r.properties.length?"{}":gE(["{",yE(gE([mE,DE(gE([",",mE]),e.map(n,"properties"))])),mE,"}"]);case"ObjectProperty":return gE([e.call(n,"key"),": ",e.call(n,"value")]);case"UnaryExpression":return gE(["+"===r.operator?"":r.operator,e.call(n,"argument")]);case"NullLiteral":return"null";case"BooleanLiteral":return r.value?"true":"false";case"StringLiteral":case"NumericLiteral":return JSON.stringify(r.value);case"Identifier":return JSON.stringify(r.name);default:throw new Error("unknown type: "+JSON.stringify(r.type))}},massageAstNode:EE};const CE="Common";var AE={bracketSpacing:{since:"0.0.0",category:CE,type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:CE,type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:CE,type:"choice",default:[{since:"1.8.2",value:!0},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]}};const FE="JavaScript";var xE={arrowParens:{since:"1.9.0",category:FE,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSpacing:AE.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:FE,type:"boolean",default:!1,description:"Put > on the last line instead of at a new line."},semi:{since:"1.0.0",category:FE,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:AE.singleQuote,jsxSingleQuote:{since:"1.15.0",category:FE,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:FE,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:FE,type:"choice",default:[{since:"0.0.0",value:!1},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]}},SE={name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".jsb",".jscad",".jsfl",".jsm",".jss",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],languageId:183},wE={name:"JSON",type:"data",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",searchable:!1,extensions:[".json",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".arcconfig",".htmlhintrc",".tern-config",".tern-project",".watchmanconfig","composer.lock","mcmod.info"],languageId:174},TE={languages:[Cs(SE,(e=>({since:"0.0.0",parsers:["babel","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"],extensions:[...e.extensions,".wxs"]}))),Cs(SE,(()=>({name:"Flow",since:"0.0.0",parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]}))),Cs({name:"JSX",type:"programming",group:"JavaScript",extensions:[".jsx"],tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:178},(()=>({since:"0.0.0",parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"]}))),Cs({name:"TypeScript",type:"programming",color:"#2b7489",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",languageId:378},(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]}))),Cs({name:"TSX",type:"programming",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:94901924},(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]}))),Cs(wE,(()=>({name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[],filenames:["package.json","package-lock.json","composer.json"]}))),Cs(wE,(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],filenames:[...e.filenames,".prettierrc"],extensions:e.extensions.filter((e=>".jsonl"!==e))}))),Cs({name:"JSON with Comments",type:"data",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[".babelrc",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","devcontainer.json","jsconfig.json","language-configuration.json","tsconfig.json","tslint.json"],languageId:423},(e=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:[...e.filenames,".eslintrc"]}))),Cs({name:"JSON5",type:"data",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",languageId:175},(()=>({since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]})))],options:xE,printers:{estree:hE,"estree-json":bE},parsers:{get babel(){return{}.parsers.babel},get"babel-flow"(){return{}.parsers["babel-flow"]},get"babel-ts"(){return{}.parsers["babel-ts"]},get json(){return{}.parsers.json},get json5(){return{}.parsers.json5},get"json-stringify"(){return{}.parsers["json-stringify"]},get __js_expression(){return{}.parsers.__js_expression},get __vue_expression(){return{}.parsers.__vue_expression},get __vue_event_binding(){return{}.parsers.__vue_event_binding},get flow(){return{}.parsers.flow},get typescript(){return{}.parsers.typescript},get __ng_action(){return{}.parsers.__ng_action},get __ng_binding(){return{}.parsers.__ng_binding},get __ng_interpolation(){return{}.parsers.__ng_interpolation},get __ng_directive(){return{}.parsers.__ng_directive},get espree(){return{}.parsers.espree},get meriyah(){return{}.parsers.meriyah}}};const{isFrontMatterNode:BE}=It,NE=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma"]);function kE(e,t,n){if(BE(e)&&"yaml"===e.lang&&delete t.value,"css-comment"===e.type&&"css-root"===n.type&&0!==n.nodes.length){if((n.nodes[0]===e||BE(n.nodes[0])&&n.nodes[1]===e)&&(delete t.text,/^\*\s*@(format|prettier)\s*$/.test(e.text)))return null;if("css-root"===n.type&&se(n.nodes)===e)return null}if("value-root"===e.type&&delete t.text,"media-query"!==e.type&&"media-query-list"!==e.type&&"media-feature-expression"!==e.type||delete t.value,"css-rule"===e.type&&delete t.params,"selector-combinator"===e.type&&(t.value=t.value.replace(/\s+/g," ")),"media-feature"===e.type&&(t.value=t.value.replace(/ /g,"")),("value-word"===e.type&&(e.isColor&&e.isHex||["initial","inherit","unset","revert"].includes(t.value.replace().toLowerCase()))||"media-feature"===e.type||"selector-root-invalid"===e.type||"selector-pseudo"===e.type)&&(t.value=t.value.toLowerCase()),"css-decl"===e.type&&(t.prop=t.prop.toLowerCase()),"css-atrule"!==e.type&&"css-import"!==e.type||(t.name=t.name.toLowerCase()),"value-number"===e.type&&(t.unit=t.unit.toLowerCase()),"media-feature"!==e.type&&"media-keyword"!==e.type&&"media-type"!==e.type&&"media-unknown"!==e.type&&"media-url"!==e.type&&"media-value"!==e.type&&"selector-attribute"!==e.type&&"selector-string"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"value-string"!==e.type||!t.value||(t.value=t.value.replace(/'/g,'"').replace(/\\([^\dA-Fa-f])/g,"$1")),"selector-attribute"===e.type&&(t.attribute=t.attribute.trim(),t.namespace&&"string"==typeof t.namespace&&(t.namespace=t.namespace.trim(),0===t.namespace.length&&(t.namespace=!0)),t.value&&(t.value=t.value.trim().replace(/^["']|["']$/g,""),delete t.quoted)),"media-value"!==e.type&&"media-type"!==e.type&&"value-number"!==e.type&&"selector-root-invalid"!==e.type&&"selector-class"!==e.type&&"selector-combinator"!==e.type&&"selector-tag"!==e.type||!t.value||(t.value=t.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g,((e,t,n)=>{const r=Number(t);return isNaN(r)?e:r+n.toLowerCase()}))),"selector-tag"===e.type){const n=e.value.toLowerCase();["from","to"].includes(n)&&(t.value=n)}"css-atrule"===e.type&&"supports"===e.name.toLowerCase()&&delete t.value,"selector-unknown"===e.type&&delete t.value}kE.ignoredProperties=NE;var PE=kE;const{builders:{hardline:OE,concat:_E,markAsRoot:IE}}=cn,LE={"---":"yaml","+++":"toml"};var ME={parse:function(e){const t=Object.keys(LE).map(ae).join("|"),n=e.match(new RegExp("^(".concat(t,")([^\\n]*)\\n(?:([\\s\\S]*?)\\n)?\\1[^\\n\\S]*(\\n|$)")));if(null===n)return{frontMatter:null,content:e};const[r,o,i,u]=n;let a=LE[o];return"toml"!==a&&i&&i.trim()&&(a=i.trim()),{frontMatter:{type:"front-matter",lang:a,value:u,raw:r.replace(/\n$/,"")},content:r.replace(/[^\n]/g," ")+e.slice(r.length)}},print:function(e,t){if("yaml"===e.lang){const n=e.value.trim(),r=n?t(n,{parser:"yaml"},{stripTrailingHardline:!0}):"";return IE(_E(["---",OE,r,r?OE:"","---"]))}}};const{builders:{hardline:jE,concat:RE}}=cn,{print:VE}=ME;const{parse:qE}=ME;var $E={hasPragma:function(e){return pp.hasPragma(qE(e).content)},insertPragma:function(e){const{frontMatter:t,content:n}=qE(e);return(t?t.raw+"\n\n":"")+pp.insertPragma(n)}};const WE=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]);function UE(e,t){const n=[].concat(t);let r,o=-1;for(;r=e.getParentNode(++o);)if(n.includes(r.type))return o;return-1}function JE(e,t){const n=UE(e,t);return-1===n?null:e.getParentNode(n)}function GE(e){return"value-operator"===e.type&&"*"===e.value}function zE(e){return"value-operator"===e.type&&"/"===e.value}function HE(e){return"value-operator"===e.type&&"+"===e.value}function XE(e){return"value-operator"===e.type&&"-"===e.value}function YE(e){return"value-operator"===e.type&&"%"===e.value}function KE(e){return"value-comma_group"===e.type&&e.groups&&e.groups[1]&&"value-colon"===e.groups[1].type}function QE(e){return"value-paren_group"===e.type&&e.groups&&e.groups[0]&&KE(e.groups[0])}var ZE={getAncestorCounter:UE,getAncestorNode:JE,getPropOfDeclNode:function(e){const t=JE(e,"css-decl");return t&&t.prop&&t.prop.toLowerCase()},hasSCSSInterpolation:function(e){if(e&&e.length)for(let t=e.length-1;t>0;t--)if("word"===e[t].type&&"{"===e[t].value&&"word"===e[t-1].type&&e[t-1].value.endsWith("#"))return!0;return!1},hasStringOrFunction:function(e){if(e&&e.length)for(let t=0;t<e.length;t++)if("string"===e[t].type||"func"===e[t].type)return!0;return!1},maybeToLowerCase:function(e){return e.includes("$")||e.includes("@")||e.includes("#")||e.startsWith("%")||e.startsWith("--")||e.startsWith(":--")||e.includes("(")&&e.includes(")")?e:e.toLowerCase()},insideValueFunctionNode:function(e,t){const n=JE(e,"value-func");return n&&n.value&&n.value.toLowerCase()===t},insideICSSRuleNode:function(e){const t=JE(e,"css-rule");return t&&t.raws&&t.raws.selector&&(t.raws.selector.startsWith(":import")||t.raws.selector.startsWith(":export"))},insideAtRuleNode:function(e,t){const n=[].concat(t),r=JE(e,"css-atrule");return r&&n.includes(r.name.toLowerCase())},insideURLFunctionInImportAtRuleNode:function(e){const t=e.getValue(),n=JE(e,"css-atrule");return n&&"import"===n.name&&"url"===t.groups[0].value&&2===t.groups.length},isKeyframeAtRuleKeywords:function(e,t){const n=JE(e,"css-atrule");return n&&n.name&&n.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(t.toLowerCase())},isWideKeywords:function(e){return["initial","inherit","unset","revert"].includes(e.toLowerCase())},isSCSS:function(e,t){return"less"===e||"scss"===e?"scss"===e:/(\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(t)},isSCSSVariable:function(e){return!(!e||"word"!==e.type||!e.value.startsWith("$"))},isLastNode:function(e,t){const n=e.getParentNode();if(!n)return!1;const{nodes:r}=n;return r&&r.indexOf(t)===r.length-1},isLessParser:function(e){return"css"===e.parser||"less"===e.parser},isSCSSControlDirectiveNode:function(e){return"css-atrule"===e.type&&["if","else","for","each","while"].includes(e.name)},isDetachedRulesetDeclarationNode:function(e){return!!e.selector&&("string"==typeof e.selector&&/^@.+:.*$/.test(e.selector)||e.selector.value&&/^@.+:.*$/.test(e.selector.value))},isRelationalOperatorNode:function(e){return"value-word"===e.type&&["<",">","<=",">="].includes(e.value)},isEqualityOperatorNode:function(e){return"value-word"===e.type&&["==","!="].includes(e.value)},isMultiplicationNode:GE,isDivisionNode:zE,isAdditionNode:HE,isSubtractionNode:XE,isModuloNode:YE,isMathOperatorNode:function(e){return GE(e)||zE(e)||HE(e)||XE(e)||YE(e)},isEachKeywordNode:function(e){return"value-word"===e.type&&"in"===e.value},isForKeywordNode:function(e){return"value-word"===e.type&&["from","through","end"].includes(e.value)},isURLFunctionNode:function(e){return"value-func"===e.type&&"url"===e.value.toLowerCase()},isIfElseKeywordNode:function(e){return"value-word"===e.type&&["and","or","not"].includes(e.value)},hasComposesNode:function(e){return e.value&&"value-root"===e.value.type&&e.value.group&&"value-value"===e.value.group.type&&"composes"===e.prop.toLowerCase()},hasParensAroundNode:function(e){return e.value&&e.value.group&&e.value.group.group&&"value-paren_group"===e.value.group.group.type&&null!==e.value.group.group.open&&null!==e.value.group.group.close},hasEmptyRawBefore:function(e){return e.raws&&""===e.raws.before},isSCSSNestedPropertyNode:function(e){return!!e.selector&&e.selector.replace(/\/\*.*?\*\//,"").replace(/\/\/.*?\n/,"").trim().endsWith(":")},isDetachedRulesetCallNode:function(e){return e.raws&&e.raws.params&&/^\(\s*\)$/.test(e.raws.params)},isTemplatePlaceholderNode:function(e){return e.name.startsWith("prettier-placeholder")},isTemplatePropNode:function(e){return e.prop.startsWith("@prettier-placeholder")},isPostcssSimpleVarNode:function(e,t){return"$$"===e.value&&"value-func"===e.type&&t&&"value-word"===t.type&&!t.raws.before},isKeyValuePairNode:KE,isKeyValuePairInParenGroupNode:QE,isSCSSMapItemNode:function(e){const t=e.getValue();if(0===t.groups.length)return!1;const n=e.getParentNode(1);if(!(QE(t)||n&&QE(n)))return!1;const r=JE(e,"css-decl");return!!(r&&r.prop&&r.prop.startsWith("$"))||!!QE(n)||"value-func"===n.type},isInlineValueCommentNode:function(e){return"value-comment"===e.type&&e.inline},isHashNode:function(e){return"value-word"===e.type&&"#"===e.value},isLeftCurlyBraceNode:function(e){return"value-word"===e.type&&"{"===e.value},isRightCurlyBraceNode:function(e){return"value-word"===e.type&&"}"===e.value},isWordNode:function(e){return["value-word","value-atword"].includes(e.type)},isColonNode:function(e){return"value-colon"===e.type},isMediaAndSupportsKeywords:function(e){return e.value&&["not","and","or"].includes(e.value.toLowerCase())},isColorAdjusterFuncNode:function(e){return"value-func"===e.type&&WE.has(e.value.toLowerCase())},lastLineHasInlineComment:function(e){return/\/\//.test(e.split(/[\n\r]/).pop())},stringifyNode:function e(t){if(t.groups)return(t.open&&t.open.value?t.open.value:"")+t.groups.reduce(((n,r,o)=>n+e(r)+("comma_group"===t.groups[0].type&&o!==t.groups.length-1?",":"")),"")+(t.close&&t.close.value?t.close.value:"");const n=t.raws&&t.raws.before?t.raws.before:"",r=t.raws&&t.raws.quote?t.raws.quote:"";return n+r+("atword"===t.type?"@":"")+(t.value?t.value:"")+r+(t.unit?t.unit:"")+(t.group?e(t.group):"")+(t.raws&&t.raws.after?t.raws.after:"")},isAtWordPlaceholderNode:function(e){return e&&"value-atword"===e.type&&e.value.startsWith("prettier-placeholder-")}},eb=function(e,t){let n=0;for(let r=0;r<e.line-1;++r)n=t.indexOf("\n",n)+1;return n+e.column};const{getLast:tb,skipEverythingButNewLine:nb}=It;function rb(e,t){return"number"==typeof e.sourceIndex?e.sourceIndex:e.source?eb(e.source.start,t)-1:null}function ob(e,t){if("css-comment"===e.type&&e.inline)return nb(t,e.source.startOffset);const n=e.nodes&&tb(e.nodes);return n&&e.source&&!e.source.end&&(e=n),e.source&&e.source.end?eb(e.source.end,t):null}function ib(e,t,n){e.source&&(e.source.startOffset=rb(e,n)+t,e.source.endOffset=ob(e,n)+t);for(const r in e){const o=e[r];"source"!==r&&o&&"object"==typeof o&&ib(o,t,n)}}function ub(e){let t=e.source.startOffset;return"string"==typeof e.prop&&(t+=e.prop.length),"css-atrule"===e.type&&"string"==typeof e.name&&(t+=1+e.name.length+e.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==e.type&&e.raws&&"string"==typeof e.raws.between&&(t+=e.raws.between.length),t}var ab={locStart:function(e){return e.source.startOffset},locEnd:function(e){return e.source.endOffset},calculateLoc:function e(t,n){t.source&&(t.source.startOffset=rb(t,n),t.source.endOffset=ob(t,n));for(const r in t){const o=t[r];"source"!==r&&o&&"object"==typeof o&&("value-root"===o.type||"value-unknown"===o.type?ib(o,ub(t),o.text||o.value):e(o,n))}},replaceQuotesInInlineComments:function(e){let t,n="initial",r="initial",o=!1;const i=[];for(let u=0;u<e.length;u++){const a=e[u];switch(n){case"initial":if("'"===a){n="single-quotes";continue}if('"'===a){n="double-quotes";continue}if(("u"===a||"U"===a)&&"url("===e.slice(u,u+4).toLowerCase()){n="url",u+=3;continue}if("*"===a&&"/"===e[u-1]){n="comment-block";continue}if("/"===a&&"/"===e[u-1]){n="comment-inline",t=u-1;continue}continue;case"single-quotes":if("'"===a&&"\\"!==e[u-1]&&(n=r,r="initial"),"\n"===a||"\r"===a)return e;continue;case"double-quotes":if('"'===a&&"\\"!==e[u-1]&&(n=r,r="initial"),"\n"===a||"\r"===a)return e;continue;case"url":if(")"===a&&(n="initial"),"\n"===a||"\r"===a)return e;if("'"===a){n="single-quotes",r="url";continue}if('"'===a){n="double-quotes",r="url";continue}continue;case"comment-block":"/"===a&&"*"===e[u-1]&&(n="initial");continue;case"comment-inline":'"'!==a&&"'"!==a&&"*"!==a||(o=!0),"\n"!==a&&"\r"!==a||(o&&i.push([t,u]),n="initial",o=!1);continue}}for(const[t,n]of i)e=e.slice(0,t)+e.slice(t,n).replace(/["'*]/g," ")+e.slice(n);return e}};const{printNumber:sb,printString:cb,hasNewline:lb,isFrontMatterNode:pb,isNextLineEmpty:fb}=It,{builders:{concat:db,join:hb,line:gb,hardline:mb,softline:yb,group:Db,fill:vb,indent:Eb,dedent:bb,ifBreak:Cb,breakParent:Ab},utils:{removeLines:Fb}}=cn,{insertPragma:xb}=$E,{getAncestorNode:Sb,getPropOfDeclNode:wb,maybeToLowerCase:Tb,insideValueFunctionNode:Bb,insideICSSRuleNode:Nb,insideAtRuleNode:kb,insideURLFunctionInImportAtRuleNode:Pb,isKeyframeAtRuleKeywords:Ob,isWideKeywords:_b,isSCSS:Ib,isLastNode:Lb,isLessParser:Mb,isSCSSControlDirectiveNode:jb,isDetachedRulesetDeclarationNode:Rb,isRelationalOperatorNode:Vb,isEqualityOperatorNode:qb,isMultiplicationNode:$b,isDivisionNode:Wb,isAdditionNode:Ub,isSubtractionNode:Jb,isMathOperatorNode:Gb,isEachKeywordNode:zb,isForKeywordNode:Hb,isURLFunctionNode:Xb,isIfElseKeywordNode:Yb,hasComposesNode:Kb,hasParensAroundNode:Qb,hasEmptyRawBefore:Zb,isKeyValuePairNode:eC,isDetachedRulesetCallNode:tC,isTemplatePlaceholderNode:nC,isTemplatePropNode:rC,isPostcssSimpleVarNode:oC,isSCSSMapItemNode:iC,isInlineValueCommentNode:uC,isHashNode:aC,isLeftCurlyBraceNode:sC,isRightCurlyBraceNode:cC,isWordNode:lC,isColonNode:pC,isMediaAndSupportsKeywords:fC,isColorAdjusterFuncNode:dC,lastLineHasInlineComment:hC,isAtWordPlaceholderNode:gC}=ZE,{locStart:mC,locEnd:yC}=ab;function DC(e){return"es5"===e.trailingComma||"all"===e.trailingComma}function vC(e,t,n){const r=e.getValue(),o=[];return e.each(((e,i)=>{const u=r.nodes[i-1];if(u&&"css-comment"===u.type&&"prettier-ignore"===u.text.trim()){const n=e.getValue();o.push(t.originalText.slice(mC(n),yC(n)))}else o.push(e.call(n));i!==r.nodes.length-1&&("css-comment"===r.nodes[i+1].type&&!lb(t.originalText,mC(r.nodes[i+1]),{backwards:!0})&&!pb(r.nodes[i])||"css-atrule"===r.nodes[i+1].type&&"else"===r.nodes[i+1].name&&"css-comment"!==r.nodes[i].type?o.push(" "):(o.push(t.__isHTMLStyleAttribute?gb:mb),fb(t.originalText,e.getValue(),yC)&&!pb(r.nodes[i])&&o.push(mb)))}),"nodes"),db(o)}const EC=/(["'])(?:(?!\1)[^\\]|\\[\S\s])*\1/g,bC=new RegExp(EC.source+"|"+"(".concat(/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source,")?")+"(".concat(/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source,")")+"(".concat(/[A-Za-z]+/g.source,")?"),"g");function CC(e,t){return e.replace(EC,(e=>cb(e,t)))}function AC(e,t){const n=t.singleQuote?"'":'"';return e.includes('"')||e.includes("'")?e:n+e+n}function FC(e){return e.replace(bC,((e,t,n,r,o)=>!n&&r?xC(r)+Tb(o||""):e))}function xC(e){return sb(e).replace(/\.0(?=$|e)/,"")}var SC={print:function(e,t,n){const r=e.getValue();if(!r)return"";if("string"==typeof r)return r;switch(r.type){case"front-matter":return db([r.raw,mb]);case"css-root":{const o=vC(e,t,n),i=r.raws.after.trim();return db([o,i?" ".concat(i):"",o.parts.length?mb:""])}case"css-comment":{const e=r.inline||r.raws.inline,n=t.originalText.slice(mC(r),yC(r));return e?n.trimEnd():n}case"css-rule":return db([e.call(n,"selector"),r.important?" !important":"",r.nodes?db([r.selector&&"selector-unknown"===r.selector.type&&hC(r.selector.value)?gb:" ","{",r.nodes.length>0?Eb(db([mb,vC(e,t,n)])):"",mb,"}",Rb(r)?";":""]):";"]);case"css-decl":{const o=e.getParentNode(),{between:i}=r.raws,u=i.trim(),a=":"===u;let s=Kb(r)?Fb(e.call(n,"value")):e.call(n,"value");return!a&&hC(u)&&(s=Eb(db([mb,bb(s)]))),db([r.raws.before.replace(/[\s;]/g,""),Nb(e)?r.prop:Tb(r.prop),u.startsWith("//")?" ":"",u,r.extend?"":" ",Mb(t)&&r.extend&&r.selector?db(["extend(",e.call(n,"selector"),")"]):"",s,r.raws.important?r.raws.important.replace(/\s*!\s*important/i," !important"):r.important?" !important":"",r.raws.scssDefault?r.raws.scssDefault.replace(/\s*!default/i," !default"):r.scssDefault?" !default":"",r.raws.scssGlobal?r.raws.scssGlobal.replace(/\s*!global/i," !global"):r.scssGlobal?" !global":"",r.nodes?db([" {",Eb(db([yb,vC(e,t,n)])),yb,"}"]):rC(r)&&!o.raws.semicolon&&";"!==t.originalText[yC(r)-1]?"":t.__isHTMLStyleAttribute&&Lb(e,r)?Cb(";",""):";"])}case"css-atrule":{const o=e.getParentNode(),i=nC(r)&&!o.raws.semicolon&&";"!==t.originalText[yC(r)-1];if(Mb(t)){if(r.mixin)return db([e.call(n,"selector"),r.important?" !important":"",i?"":";"]);if(r.function)return db([r.name,db([e.call(n,"params")]),i?"":";"]);if(r.variable)return db(["@",r.name,": ",r.value?db([e.call(n,"value")]):"",r.raws.between.trim()?r.raws.between.trim()+" ":"",r.nodes?db(["{",Eb(db([r.nodes.length>0?yb:"",vC(e,t,n)])),yb,"}"]):"",i?"":";"])}return db(["@",tC(r)||r.name.endsWith(":")?r.name:Tb(r.name),r.params?db([tC(r)?"":nC(r)?""===r.raws.afterName?"":r.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(r.raws.afterName)?db([mb,mb]):/^\s*\n/.test(r.raws.afterName)?mb:" ":" ",e.call(n,"params")]):"",r.selector?Eb(db([" ",e.call(n,"selector")])):"",r.value?Db(db([" ",e.call(n,"value"),jb(r)?Qb(r)?" ":gb:""])):"else"===r.name?" ":"",r.nodes?db([jb(r)?"":r.selector&&!r.selector.nodes&&"string"==typeof r.selector.value&&hC(r.selector.value)||!r.selector&&"string"==typeof r.params&&hC(r.params)?gb:" ","{",Eb(db([r.nodes.length>0?yb:"",vC(e,t,n)])),yb,"}"]):i?"":";"])}case"media-query-list":{const t=[];return e.each((e=>{const r=e.getValue();"media-query"===r.type&&""===r.value||t.push(e.call(n))}),"nodes"),Db(Eb(hb(gb,t)))}case"media-query":return db([hb(" ",e.map(n,"nodes")),Lb(e,r)?"":","]);case"media-type":return FC(CC(r.value,t));case"media-feature-expression":return r.nodes?db(["(",db(e.map(n,"nodes")),")"]):r.value;case"media-feature":return Tb(CC(r.value.replace(/ +/g," "),t));case"media-colon":return db([r.value," "]);case"media-value":return FC(CC(r.value,t));case"media-keyword":return CC(r.value,t);case"media-url":return CC(r.value.replace(/^url\(\s+/gi,"url(").replace(/\s+\)$/gi,")"),t);case"media-unknown":return r.value;case"selector-root":return Db(db([kb(e,"custom-selector")?db([Sb(e,"css-atrule").customSelector,gb]):"",hb(db([",",kb(e,["extend","custom-selector","nest"])?gb:mb]),e.map(n,"nodes"))]));case"selector-selector":return Db(Eb(db(e.map(n,"nodes"))));case"selector-comment":return r.value;case"selector-string":return CC(r.value,t);case"selector-tag":{const t=e.getParentNode(),n=t&&t.nodes.indexOf(r),o=n&&t.nodes[n-1];return db([r.namespace?db([!0===r.namespace?"":r.namespace.trim(),"|"]):"","selector-nesting"===o.type?r.value:FC(Ob(e,r.value)?r.value.toLowerCase():r.value)])}case"selector-id":return db(["#",r.value]);case"selector-class":return db([".",FC(CC(r.value,t))]);case"selector-attribute":return db(["[",r.namespace?db([!0===r.namespace?"":r.namespace.trim(),"|"]):"",r.attribute.trim(),r.operator?r.operator:"",r.value?AC(CC(r.value.trim(),t),t):"",r.insensitive?" i":"","]"]);case"selector-combinator":{if("+"===r.value||">"===r.value||"~"===r.value||">>>"===r.value){const t=e.getParentNode(),n="selector-selector"===t.type&&t.nodes[0]===r?"":gb;return db([n,r.value,Lb(e,r)?"":" "])}const n=r.value.trim().startsWith("(")?gb:"",o=FC(CC(r.value.trim(),t))||gb;return db([n,o])}case"selector-universal":return db([r.namespace?db([!0===r.namespace?"":r.namespace.trim(),"|"]):"",r.value]);case"selector-pseudo":return db([Tb(r.value),r.nodes&&r.nodes.length>0?db(["(",hb(", ",e.map(n,"nodes")),")"]):""]);case"selector-nesting":return r.value;case"selector-unknown":{const n=Sb(e,"css-rule");if(n&&n.isSCSSNesterProperty)return FC(CC(Tb(r.value),t));const o=e.getParentNode();if(o.raws&&o.raws.selector){const e=mC(o),n=e+o.raws.selector.length;return t.originalText.slice(e,n).trim()}const i=e.getParentNode(1);if("value-paren_group"===o.type&&i&&"value-func"===i.type&&"selector"===i.value){const e=mC(o.open)+1,n=yC(o.close)-1,r=t.originalText.slice(e,n).trim();return hC(r)?db([Ab,r]):r}return r.value}case"value-value":case"value-root":return e.call(n,"group");case"value-comment":return t.originalText.slice(mC(r),yC(r));case"value-comma_group":{const t=e.getParentNode(),o=e.getParentNode(1),i=wb(e),u=i&&"value-value"===t.type&&("grid"===i||i.startsWith("grid-template")),a=Sb(e,"css-atrule"),s=a&&jb(a),c=e.map(n,"groups"),l=[],p=Bb(e,"url");let f=!1,d=!1;for(let n=0;n<r.groups.length;++n){l.push(c[n]);const i=r.groups[n-1],h=r.groups[n],g=r.groups[n+1],m=r.groups[n+2];if(p){(g&&Ub(g)||Ub(h))&&l.push(" ");continue}if(!g)continue;if("value-word"===h.type&&h.value.endsWith("-")&&gC(g))continue;const y="value-string"===h.type&&h.value.startsWith("#{"),D=f&&"value-string"===g.type&&g.value.endsWith("}");if(y||D){f=!f;continue}if(f)continue;if(pC(h)||pC(g))continue;if("value-atword"===h.type&&""===h.value)continue;if("~"===h.value)continue;if(h.value&&h.value.includes("\\")&&g&&"value-comment"!==g.type)continue;if(i&&i.value&&i.value.indexOf("\\")===i.value.length-1&&"value-operator"===h.type&&"/"===h.value)continue;if("\\"===h.value)continue;if(oC(h,g))continue;if(aC(h)||sC(h)||cC(g)||sC(g)&&Zb(g)||cC(h)&&Zb(g))continue;if("--"===h.value&&aC(g))continue;const v=Gb(h),E=Gb(g);if((v&&aC(g)||E&&cC(h))&&Zb(g))continue;if(Bb(e,"calc")&&(Ub(h)||Ub(g)||Jb(h)||Jb(g))&&Zb(g))continue;const b=(Ub(h)||Jb(h))&&0===n&&("value-number"===g.type||g.isHex)&&o&&dC(o)&&!Zb(g),C=m&&"value-func"===m.type||m&&lC(m)||"value-func"===h.type||lC(h),A="value-func"===g.type||lC(g)||i&&"value-func"===i.type||i&&lC(i);if($b(g)||$b(h)||Bb(e,"calc")||b||!(Wb(g)&&!C||Wb(h)&&!A||Ub(g)&&!C||Ub(h)&&!A||Jb(g)||Jb(h))||!(Zb(g)||v&&(!i||i&&Gb(i))))if(uC(h)){if("value-paren_group"===t.type){l.push(bb(mb));continue}l.push(mb)}else s&&(qb(g)||Vb(g)||Yb(g)||zb(h)||Hb(h))||a&&"namespace"===a.name.toLowerCase()?l.push(" "):u?h.source&&g.source&&h.source.start.line!==g.source.start.line?(l.push(mb),d=!0):l.push(" "):E?l.push(" "):g&&"..."===g.value||gC(h)&&gC(g)&&yC(h)===mC(g)||l.push(gb)}return d&&l.unshift(mb),s?Db(Eb(db(l))):Pb(e)?Db(vb(l)):Db(Eb(vb(l)))}case"value-paren_group":{const o=e.getParentNode();if(o&&Xb(o)&&(1===r.groups.length||r.groups.length>0&&"value-comma_group"===r.groups[0].type&&r.groups[0].groups.length>0&&"value-word"===r.groups[0].groups[0].type&&r.groups[0].groups[0].value.startsWith("data:")))return db([r.open?e.call(n,"open"):"",hb(",",e.map(n,"groups")),r.close?e.call(n,"close"):""]);if(!r.open){const t=e.map(n,"groups"),r=[];for(let e=0;e<t.length;e++)0!==e&&r.push(db([",",gb])),r.push(t[e]);return Db(Eb(vb(r)))}const i=iC(e),u=r.groups[r.groups.length-1],a=u&&"value-comment"===u.type;return Db(db([r.open?e.call(n,"open"):"",Eb(db([yb,hb(db([",",gb]),e.map((e=>{const t=e.getValue(),r=n(e);return eC(t)&&"value-comma_group"===t.type&&t.groups&&t.groups[2]&&"value-paren_group"===t.groups[2].type?(r.contents.contents.parts[1]=Db(r.contents.contents.parts[1]),Db(bb(r))):r}),"groups"))])),Cb(!a&&Ib(t.parser,t.originalText)&&i&&DC(t)?",":""),yb,r.close?e.call(n,"close"):""]),{shouldBreak:i})}case"value-func":return db([r.value,kb(e,"supports")&&fC(r)?" ":"",e.call(n,"group")]);case"value-paren":return r.value;case"value-number":return db([xC(r.value),Tb(r.unit)]);case"value-operator":return r.value;case"value-word":return r.isColor&&r.isHex||_b(r.value)?r.value.toLowerCase():r.value;case"value-colon":{const t=e.getParentNode(),n=t&&t.groups.indexOf(r),o=n&&t.groups[n-1];return db([r.value,o&&"\\"===o.value[o.value.length-1]||Bb(e,"url")?"":gb])}case"value-comma":return db([r.value," "]);case"value-string":return cb(r.raws.quote+r.value+r.raws.quote,t);case"value-atword":return db(["@",r.value]);case"value-unicode-range":case"value-unknown":return r.value;default:throw new Error("Unknown postcss type ".concat(JSON.stringify(r.type)))}},embed:function(e,t,n){const r=e.getValue();if("front-matter"===r.type){const e=VE(r,n);return e?RE([e,jE]):""}},insertPragma:xb,massageAstNode:PE},wC={singleQuote:AE.singleQuote},TC={languages:[Cs({name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css"],languageId:50},(e=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"],extensions:[...e.extensions,".wxss"]}))),Cs({name:"PostCSS",type:"markup",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",languageId:262764437},(()=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]}))),Cs({name:"Less",type:"markup",color:"#1d365d",extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",languageId:198},(()=>({since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]}))),Cs({name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],languageId:329},(()=>({since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]})))],options:wC,printers:{postcss:SC},parsers:{get css(){return{}.parsers.css},get less(){return{}.parsers.less},get scss(){return{}.parsers.scss}}};function BC(e,t){if("TextNode"===e.type){const n=e.chars.trim();if(!n)return null;t.chars=n}}BC.ignoredProperties=new Set(["loc","selfClosing"]);var NC=BC;const kC=new Set(["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"]);function PC(e){return OC(e,["TextNode"])&&!/\S/.test(e.chars)}function OC(e,t){return e&&t.some((t=>e.type===t))}function _C(e,t){const n=e.getValue(),r=e.getParentNode(0)||{},o=r.children||r.body||r.parts||[],i=o.indexOf(n);return-1!==i&&o[i+t]}function IC(e,t=1){return _C(e,-t)}function LC(e){return _C(e,1)}function MC(e){return OC(e,["MustacheCommentStatement"])&&"string"==typeof e.value&&"prettier-ignore"===e.value.trim()}var jC={getNextNode:LC,getPreviousNode:IC,hasPrettierIgnore:function(e){const t=e.getValue(),n=IC(e,2);return MC(t)||MC(n)},isNextNodeOfSomeType:function(e,t){return OC(LC(e),t)},isNodeOfSomeType:OC,isParentOfSomeType:function(e,t){return OC(e.getParentNode(0),t)},isPreviousNodeOfSomeType:function(e,t){return OC(IC(e),t)},isVoid:function(e){return function(e){return OC(e,["ElementNode"])&&"string"==typeof e.tag&&(function(e){return e.toUpperCase()===e}(e.tag[0])||e.tag.includes("."))}(e)&&e.children.every((e=>PC(e)))||kC.has(e.tag)},isWhitespaceNode:PC};const{builders:{concat:RC,group:VC,hardline:qC,ifBreak:$C,indent:WC,join:UC,line:JC,softline:GC}}=cn,{locStart:zC,locEnd:HC}={locStart:function(e){return e.loc.start.offset},locEnd:function(e){return e.loc.end.offset}},{getNextNode:XC,getPreviousNode:YC,hasPrettierIgnore:KC,isNextNodeOfSomeType:QC,isNodeOfSomeType:ZC,isParentOfSomeType:eA,isPreviousNodeOfSomeType:tA,isVoid:nA,isWhitespaceNode:rA}=jC;function oA(e,t){const n=e.getValue();return RC(["<",n.tag,iA(e,t),kA(n),aA(n)])}function iA(e,t){const n=e.getValue();return WC(RC([n.attributes.length?JC:"",UC(JC,e.map(t,"attributes")),n.modifiers.length?JC:"",UC(JC,e.map(t,"modifiers")),n.comments.length?JC:"",UC(JC,e.map(t,"comments"))]))}function uA(e,t,n){return RC(e.map(((e,r)=>0===r?RC([GC,n(e,t,n)]):n(e,t,n)),"children"))}function aA(e){return nA(e)?$C(RC([GC,"/>"]),RC([" />",GC])):$C(RC([GC,">"]),">")}function sA(e){const t=!1===e.escaped?"{{{":"{{",n=e.strip&&e.strip.open?"~":"";return RC([t,n])}function cA(e){const t=!1===e.escaped?"}}}":"}}",n=e.strip&&e.strip.close?"~":"";return RC([n,t])}function lA(e){const t=sA(e),n=e.openStrip.open?"~":"";return RC([t,n,"#"])}function pA(e){const t=cA(e),n=e.openStrip.close?"~":"";return RC([n,t])}function fA(e){const t=sA(e),n=e.closeStrip.open?"~":"";return RC([t,n,"/"])}function dA(e){const t=cA(e),n=e.closeStrip.close?"~":"";return RC([n,t])}function hA(e){const t=sA(e),n=e.inverseStrip.open?"~":"";return RC([t,n])}function gA(e){const t=cA(e),n=e.inverseStrip.close?"~":"";return RC([n,t])}function mA(e,t){const n=e.getValue();return VC(RC([lA(n),TA(e,t),kA(n.program),GC,pA(n)]))}function yA(e){return RC([qC,hA(e),"else",gA(e)])}function DA(e,t){const n=e.getParentNode(1);return RC([hA(n),"else ",TA(e,t),gA(n)])}function vA(e,t){const n=e.getValue();return RC([EA(n)?GC:qC,fA(n),e.call(t,"path"),dA(n)])}function EA(e){return ZC(e,["BlockStatement"])&&e.program.body.every((e=>rA(e)))}function bA(e){return ZC(e,["BlockStatement"])&&e.inverse}function CA(e,t){if(EA(e.getValue()))return"";const n=e.call(t,"program");return WC(RC([qC,n]))}function AA(e,t){const n=e.getValue(),r=e.call(t,"inverse"),o=RC([qC,r]);return function(e){return bA(e)&&1===e.inverse.body.length&&ZC(e.inverse.body[0],["BlockStatement"])&&"if"===e.inverse.body[0].path.parts[0]}(n)?o:bA(n)?RC([yA(n),WC(o)]):""}function FA(e){return(e="string"==typeof e?e:"").split("\n").length-1}function xA(e=0,t=0){return new Array(Math.min(e,t)).fill(qC)}function SA(e,t){const n={quote:'"',regex:/"/g},r={quote:"'",regex:/'/g},o=t.singleQuote?r:n,i=o===r?n:r;let u=!1;(e.includes(o.quote)||e.includes(i.quote))&&(u=(e.match(o.regex)||[]).length>(e.match(i.regex)||[]).length);const a=u?i:o,s=e.replace(a.regex,"\\".concat(a.quote));return RC([a.quote,s,a.quote])}function wA(e,t){const n=BA(e,t),r=NA(e,t);return r?WC(RC([n,JC,VC(r)])):n}function TA(e,t){const n=BA(e,t),r=NA(e,t);return r?WC(VC(RC([n,JC,r]))):n}function BA(e,t){return e.call(t,"path")}function NA(e,t){const n=e.getValue(),r=[];if(n.params.length){const n=e.map(t,"params");r.push(...n)}if(n.hash&&n.hash.pairs.length>0){const n=e.call(t,"hash");r.push(n)}return r.length?UC(JC,r):""}function kA(e){return e&&e.blockParams.length?RC([" as |",e.blockParams.join(" "),"|"]):""}var PA={print:function(e,t,n){const r=e.getValue();if(!r)return"";if(KC(e))return t.originalText.slice(zC(r),HC(r));switch(r.type){case"Block":case"Program":case"Template":return VC(RC(e.map(n,"body")));case"ElementNode":{const o=QC(e,["ElementNode"])?qC:"";if(nA(r))return RC([VC(oA(e,n)),o]);const i=r.children.every((e=>rA(e)));return RC([VC(oA(e,n)),VC(RC([i?"":WC(uA(e,t,n)),r.children.length?qC:"",RC(["</",r.tag,">"])])),o])}case"BlockStatement":{const t=e.getParentNode(1),o=t&&t.inverse&&1===t.inverse.body.length&&t.inverse.body[0]===r&&"if"===t.inverse.body[0].path.parts[0];return RC(o?[DA(e,n),CA(e,n),AA(e,n)]:[mA(e,n),VC(RC([CA(e,n),AA(e,n),vA(e,n)]))])}case"ElementModifierStatement":return VC(RC(["{{",TA(e,n),GC,"}}"]));case"MustacheStatement":{const t=eA(e,["AttrNode","ConcatStatement"]),o=eA(e,["ElementNode"])&&0===r.hash.pairs.length&&function(e){return 0===e.params.length}(r),i=t||o;return VC(RC([sA(r),i?WC(GC):"",TA(e,n),GC,cA(r)]))}case"SubExpression":return VC(RC(["(",wA(e,n),GC,")"]));case"AttrNode":{const o="TextNode"===r.value.type;if(o&&""===r.value.chars&&zC(r.value)===HC(r.value))return RC([r.name]);const i=e.call(n,"value"),u=o?SA(i.parts.join(),t):i;return RC([r.name,"=",u])}case"ConcatStatement":{const r=t.singleQuote?"'":'"';return RC([r,...e.map((e=>n(e)),"parts"),r])}case"Hash":return RC([UC(JC,e.map(n,"pairs"))]);case"HashPair":return RC([r.key,"=",e.call(n,"value")]);case"TextNode":{const t=2,n=!YC(e),o=!XC(e),i=!/\S/.test(r.chars),u=FA(r.chars);let a=function(e){return FA(((e="string"==typeof e?e:"").match(/^([^\S\n\r]*[\n\r])+/g)||[])[0]||"")}(r.chars),s=function(e){return FA(((e="string"==typeof e?e:"").match(/([\n\r][^\S\n\r]*)+$/g)||[])[0]||"")}(r.chars);if((n||o)&&i&&eA(e,["Block","ElementNode","Template"]))return"";if(i&&u?(a=Math.min(u,t),s=0):(QC(e,["BlockStatement","ElementNode"])&&(s=Math.max(s,1)),tA(e,["BlockStatement","ElementNode"])&&(a=Math.max(a,1))),e.stack.includes("attributes")){if(!function(e,t){return eA(e,["AttrNode"])&&e.getParentNode().name.toLowerCase()===t||eA(e,["ConcatStatement"])&&e.getParentNode(1).name.toLowerCase()===t}(e,"class"))return RC([r.chars]);let n="",o="";return eA(e,["ConcatStatement"])&&(tA(e,["MustacheStatement"])&&(n=" "),QC(e,["MustacheStatement"])&&(o=" ")),RC([...xA(a,t),r.chars.replace(/^\s+/g,n).replace(/\s+$/,o),...xA(s,t)])}let c="",l="";0===s&&QC(e,["MustacheStatement"])&&(l=" "),0===a&&tA(e,["MustacheStatement"])&&(c=" "),n&&(a=0,c=""),o&&(s=0,l="");let p=r.chars;return p.startsWith("{{")&&p.includes("}}")&&(p="\\"+p),RC([...xA(a,t),p.replace(/^\s+/g,c).replace(/\s+$/,l),...xA(s,t)])}case"MustacheCommentStatement":{const e=r.value.includes("}}")?"--":"";return RC(["{{!",e,r.value,e,"}}"])}case"PathExpression":return r.original;case"BooleanLiteral":return String(r.value);case"CommentStatement":return RC(["\x3c!--",r.value,"--\x3e"]);case"StringLiteral":return SA(r.value,t);case"NumberLiteral":return String(r.value);case"UndefinedLiteral":return"undefined";case"NullLiteral":return"null";default:throw new Error("unknown glimmer type: "+JSON.stringify(r.type))}},massageAstNode:NC},OA={languages:[Cs({name:"Handlebars",type:"markup",color:"#f7931e",aliases:["hbs","htmlbars"],extensions:[".handlebars",".hbs"],tmScope:"text.html.handlebars",aceMode:"handlebars",languageId:155},(()=>({since:null,parsers:["glimmer"],vscodeLanguageIds:["handlebars"]})))],printers:{glimmer:PA},parsers:{get glimmer(){return{}.parsers.glimmer}}};const{builders:{concat:_A,join:IA,hardline:LA,line:MA,softline:jA,group:RA,indent:VA,ifBreak:qA}}=cn,{isNextLineEmpty:$A}=It,{insertPragma:WA}={hasPragma:function(e){return/^\s*#[^\S\n]*@(format|prettier)\s*(\n|$)/.test(e)},insertPragma:function(e){return"# @format\n\n"+e}},{locStart:UA,locEnd:JA}={locStart:function(e){return"number"==typeof e.start?e.start:e.loc&&e.loc.start},locEnd:function(e){return"number"==typeof e.end?e.end:e.loc&&e.loc.end}};function GA(e,t,n){if(0===n.directives.length)return"";const r=IA(MA,e.map(t,"directives"));return"FragmentDefinition"===n.kind||"OperationDefinition"===n.kind?RA(_A([MA,r])):_A([" ",RA(VA(_A([jA,r])))])}function zA(e,t,n){const r=e.getValue().length;return e.map(((e,o)=>{const i=n(e);return $A(t.originalText,e.getValue(),JA)&&o<r-1?_A([i,LA]):i}))}function HA(e,t,n){const r=e.getNode(),o=[],{interfaces:i}=r,u=e.map((e=>n(e)),"interfaces");for(let e=0;e<i.length;e++){const n=i[e];o.push(u[e]);const r=i[e+1];if(r){const e=t.originalText.slice(n.loc.end,r.loc.start),i=e.includes("#"),u=e.replace(/#.*/g,"").trim();o.push(","===u?",":" &"),o.push(i?MA:" ")}}return o}function XA(){}XA.ignoredProperties=new Set(["loc","comments"]);var YA={print:function(e,t,n){const r=e.getValue();if(!r)return"";if("string"==typeof r)return r;switch(r.kind){case"Document":{const o=[];return e.each(((e,i)=>{o.push(_A([e.call(n)])),i!==r.definitions.length-1&&(o.push(LA),$A(t.originalText,e.getValue(),JA)&&o.push(LA))}),"definitions"),_A([_A(o),LA])}case"OperationDefinition":{const o="{"!==t.originalText[UA(r)],i=!!r.name;return _A([o?r.operation:"",o&&i?_A([" ",e.call(n,"name")]):"",r.variableDefinitions&&r.variableDefinitions.length?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.map(n,"variableDefinitions"))])),jA,")"])):"",GA(e,n,r),r.selectionSet&&(o||i)?" ":"",e.call(n,"selectionSet")])}case"FragmentDefinition":return _A(["fragment ",e.call(n,"name"),r.variableDefinitions&&r.variableDefinitions.length?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.map(n,"variableDefinitions"))])),jA,")"])):""," on ",e.call(n,"typeCondition"),GA(e,n,r)," ",e.call(n,"selectionSet")]);case"SelectionSet":return _A(["{",VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"selections"))])),LA,"}"]);case"Field":return RA(_A([r.alias?_A([e.call(n,"alias"),": "]):"",e.call(n,"name"),r.arguments.length>0?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.call((e=>zA(e,t,n)),"arguments"))])),jA,")"])):"",GA(e,n,r),r.selectionSet?" ":"",e.call(n,"selectionSet")]));case"Name":return r.value;case"StringValue":return r.block?_A(['"""',LA,IA(LA,r.value.replace(/"""/g,"\\$&").split("\n")),LA,'"""']):_A(['"',r.value.replace(/["\\]/g,"\\$&").replace(/\n/g,"\\n"),'"']);case"IntValue":case"FloatValue":case"EnumValue":return r.value;case"BooleanValue":return r.value?"true":"false";case"NullValue":return"null";case"Variable":return _A(["$",e.call(n,"name")]);case"ListValue":return RA(_A(["[",VA(_A([jA,IA(_A([qA("",", "),jA]),e.map(n,"values"))])),jA,"]"]));case"ObjectValue":return RA(_A(["{",t.bracketSpacing&&r.fields.length>0?" ":"",VA(_A([jA,IA(_A([qA("",", "),jA]),e.map(n,"fields"))])),jA,qA("",t.bracketSpacing&&r.fields.length>0?" ":""),"}"]));case"ObjectField":case"Argument":return _A([e.call(n,"name"),": ",e.call(n,"value")]);case"Directive":return _A(["@",e.call(n,"name"),r.arguments.length>0?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.call((e=>zA(e,t,n)),"arguments"))])),jA,")"])):""]);case"NamedType":return e.call(n,"name");case"VariableDefinition":return _A([e.call(n,"variable"),": ",e.call(n,"type"),r.defaultValue?_A([" = ",e.call(n,"defaultValue")]):"",GA(e,n,r)]);case"ObjectTypeExtension":case"ObjectTypeDefinition":return _A([e.call(n,"description"),r.description?LA:"","ObjectTypeExtension"===r.kind?"extend ":"","type ",e.call(n,"name"),r.interfaces.length>0?_A([" implements ",_A(HA(e,t,n))]):"",GA(e,n,r),r.fields.length>0?_A([" {",VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"fields"))])),LA,"}"]):""]);case"FieldDefinition":return _A([e.call(n,"description"),r.description?LA:"",e.call(n,"name"),r.arguments.length>0?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.call((e=>zA(e,t,n)),"arguments"))])),jA,")"])):"",": ",e.call(n,"type"),GA(e,n,r)]);case"DirectiveDefinition":return _A([e.call(n,"description"),r.description?LA:"","directive ","@",e.call(n,"name"),r.arguments.length>0?RA(_A(["(",VA(_A([jA,IA(_A([qA("",", "),jA]),e.call((e=>zA(e,t,n)),"arguments"))])),jA,")"])):"",r.repeatable?" repeatable":"",_A([" on ",IA(" | ",e.map(n,"locations"))])]);case"EnumTypeExtension":case"EnumTypeDefinition":return _A([e.call(n,"description"),r.description?LA:"","EnumTypeExtension"===r.kind?"extend ":"","enum ",e.call(n,"name"),GA(e,n,r),r.values.length>0?_A([" {",VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"values"))])),LA,"}"]):""]);case"EnumValueDefinition":return _A([e.call(n,"description"),r.description?LA:"",e.call(n,"name"),GA(e,n,r)]);case"InputValueDefinition":return _A([e.call(n,"description"),r.description?r.description.block?LA:MA:"",e.call(n,"name"),": ",e.call(n,"type"),r.defaultValue?_A([" = ",e.call(n,"defaultValue")]):"",GA(e,n,r)]);case"InputObjectTypeExtension":case"InputObjectTypeDefinition":return _A([e.call(n,"description"),r.description?LA:"","InputObjectTypeExtension"===r.kind?"extend ":"","input ",e.call(n,"name"),GA(e,n,r),r.fields.length>0?_A([" {",VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"fields"))])),LA,"}"]):""]);case"SchemaDefinition":return _A(["schema",GA(e,n,r)," {",r.operationTypes.length>0?VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"operationTypes"))])):"",LA,"}"]);case"OperationTypeDefinition":return _A([e.call(n,"operation"),": ",e.call(n,"type")]);case"InterfaceTypeExtension":case"InterfaceTypeDefinition":return _A([e.call(n,"description"),r.description?LA:"","InterfaceTypeExtension"===r.kind?"extend ":"","interface ",e.call(n,"name"),r.interfaces.length>0?_A([" implements ",_A(HA(e,t,n))]):"",GA(e,n,r),r.fields.length>0?_A([" {",VA(_A([LA,IA(LA,e.call((e=>zA(e,t,n)),"fields"))])),LA,"}"]):""]);case"FragmentSpread":return _A(["...",e.call(n,"name"),GA(e,n,r)]);case"InlineFragment":return _A(["...",r.typeCondition?_A([" on ",e.call(n,"typeCondition")]):"",GA(e,n,r)," ",e.call(n,"selectionSet")]);case"UnionTypeExtension":case"UnionTypeDefinition":return RA(_A([e.call(n,"description"),r.description?LA:"",RA(_A(["UnionTypeExtension"===r.kind?"extend ":"","union ",e.call(n,"name"),GA(e,n,r),r.types.length>0?_A([" =",qA(""," "),VA(_A([qA(_A([MA,"  "])),IA(_A([MA,"| "]),e.map(n,"types"))]))]):""]))]));case"ScalarTypeExtension":case"ScalarTypeDefinition":return _A([e.call(n,"description"),r.description?LA:"","ScalarTypeExtension"===r.kind?"extend ":"","scalar ",e.call(n,"name"),GA(e,n,r)]);case"NonNullType":return _A([e.call(n,"type"),"!"]);case"ListType":return _A(["[",e.call(n,"type"),"]"]);default:throw new Error("unknown graphql type: "+JSON.stringify(r.kind))}},massageAstNode:XA,hasPrettierIgnore:function(e){const t=e.getValue();return t&&Array.isArray(t.comments)&&t.comments.some((e=>"prettier-ignore"===e.value.trim()))},insertPragma:WA,printComment:function(e){const t=e.getValue();if("Comment"===t.kind)return"#"+t.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify(t))},canAttachComment:function(e){return e.kind&&"Comment"!==e.kind}},KA={bracketSpacing:AE.bracketSpacing},QA={languages:[Cs({name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",languageId:139},(()=>({since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]})))],options:KA,printers:{graphql:YA},parsers:{get graphql(){return{}.parsers.graphql}}},ZA={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}};const{getLast:eF}=It,{locStart:tF,locEnd:nF}=ZA,{cjkPattern:rF,kPattern:oF,punctuationPattern:iF}={cjkPattern:"(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u3000-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?",kPattern:"[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]",punctuationPattern:"[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]"},uF=["liquidNode","inlineCode","emphasis","strong","delete","wikiLink","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"],aF=uF.concat(["tableCell","paragraph","heading"]),sF=new RegExp(oF),cF=new RegExp(iF);function lF(e,t){const[,n,r,o]=t.slice(e.position.start.offset,e.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);return{numberText:n,marker:r,leadingSpaces:o}}var pF={mapAst:function(e,t){return function e(n,r,o){o=o||[];const i=Object.assign({},t(n,r,o));return i.children&&(i.children=i.children.map(((t,n)=>e(t,n,[i].concat(o))))),i}(e,null,null)},splitText:function(e,t){const n="non-cjk",r="cj-letter",o="cjk-punctuation",i=[];return("preserve"===t.proseWrap?e:e.replace(new RegExp("(".concat(rF,")\n(").concat(rF,")"),"g"),"$1$2")).split(/([\t\n ]+)/).forEach(((e,t,a)=>{t%2!=1?(0!==t&&t!==a.length-1||""!==e)&&e.split(new RegExp("(".concat(rF,")"))).forEach(((e,t,i)=>{(0!==t&&t!==i.length-1||""!==e)&&(t%2!=0?u(cF.test(e)?{type:"word",value:e,kind:o,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:e,kind:sF.test(e)?"k-letter":r,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1}):""!==e&&u({type:"word",value:e,kind:n,hasLeadingPunctuation:cF.test(e[0]),hasTrailingPunctuation:cF.test(eF(e))}))})):i.push({type:"whitespace",value:/\n/.test(e)?"\n":" "})})),i;function u(e){const t=eF(i);var u,a;t&&"word"===t.type&&(t.kind===n&&e.kind===r&&!t.hasTrailingPunctuation||t.kind===r&&e.kind===n&&!e.hasLeadingPunctuation?i.push({type:"whitespace",value:" "}):(u=n,a=o,t.kind===u&&e.kind===a||t.kind===a&&e.kind===u||[t.value,e.value].some((e=>/\u3000/.test(e)))||i.push({type:"whitespace",value:""}))),i.push(e)}},punctuationPattern:iF,getFencedCodeBlockValue:function(e,t){const{value:n}=e;return e.position.end.offset===t.length&&n.endsWith("\n")&&t.endsWith("\n")?n.slice(0,-1):n},getOrderedListItemInfo:lF,hasGitDiffFriendlyOrderedList:function(e,t){if(!e.ordered)return!1;if(e.children.length<2)return!1;const n=Number(lF(e.children[0],t.originalText).numberText),r=Number(lF(e.children[1],t.originalText).numberText);if(0===n&&e.children.length>2){const n=Number(lF(e.children[2],t.originalText).numberText);return 1===r&&1===n}return 1===r},INLINE_NODE_TYPES:uF,INLINE_NODE_WRAPPER_TYPES:aF,isAutolink:function(e){if(!e||"link"!==e.type||1!==e.children.length)return!1;const t=e.children[0];return t&&tF(e)===tF(t)&&nF(e)===nF(t)}};const{inferParserByLanguage:fF,getMaxContinuousCount:dF}=It,{builders:{hardline:hF,concat:gF,markAsRoot:mF},utils:{replaceNewlinesWithLiterallines:yF}}=cn,{print:DF}=ME,{getFencedCodeBlockValue:vF}=pF;const{parse:EF}=ME,bF=["format","prettier"];function CF(e){const t="@(".concat(bF.join("|"),")"),n=new RegExp(["\x3c!--\\s*".concat(t,"\\s*--\x3e"),"\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*".concat(t,"[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e")].join("|"),"m"),r=e.match(n);return r&&0===r.index}var AF={startWithPragma:CF,hasPragma:e=>CF(EF(e).content.trimStart()),insertPragma:e=>{const t=EF(e),n="\x3c!-- @".concat(bF[0]," --\x3e");return t.frontMatter?"".concat(t.frontMatter.raw,"\n\n").concat(n,"\n\n").concat(t.content):"".concat(n,"\n\n").concat(t.content)}};const{getOrderedListItemInfo:FF,mapAst:xF,splitText:SF}=pF,wF=/^([\u0000-\uffff]|[\ud800-\udbff][\udc00-\udfff])$/;function TF(e,t,n){return xF(e,(e=>{if(!e.children)return e;const r=e.children.reduce(((e,r)=>{const o=e[e.length-1];return o&&t(o,r)?e.splice(-1,1,n(o,r)):e.push(r),e}),[]);return Object.assign({},e,{children:r})}))}const{isFrontMatterNode:BF}=It,{startWithPragma:NF}=AF,kF=new Set(["position","raw"]);function PF(e,t,n){return"front-matter"!==e.type&&"code"!==e.type&&"yaml"!==e.type&&"import"!==e.type&&"export"!==e.type&&"jsx"!==e.type||delete t.value,"list"===e.type&&delete t.isAligned,"list"!==e.type&&"listItem"!==e.type||(delete t.spread,delete t.loose),"text"===e.type?null:("inlineCode"===e.type&&(t.value=e.value.replace(/[\t\n ]+/g," ")),"wikiLink"===e.type&&(t.value=e.value.trim().replace(/[\t\n]+/g," ")),"definition"!==e.type&&"linkReference"!==e.type||(t.label=e.label.trim().replace(/[\t\n ]+/g," ").toLowerCase()),"definition"!==e.type&&"link"!==e.type&&"image"!==e.type||!e.title||(t.title=e.title.replace(/\\(["')])/g,"$1")),n&&"root"===n.type&&n.children.length>0&&(n.children[0]===e||BF(n.children[0])&&n.children[1]===e)&&"html"===e.type&&NF(e.value)?null:void 0)}PF.ignoredProperties=kF;var OF=PF;const{getLast:_F,getMinNotPresentContinuousCount:IF,getMaxContinuousCount:LF,getStringWidth:MF}=It,{builders:{breakParent:jF,concat:RF,join:VF,line:qF,literalline:$F,markAsRoot:WF,hardline:UF,softline:JF,ifBreak:GF,fill:zF,align:HF,indent:XF,group:YF},utils:{normalizeDoc:KF},printer:{printDocToString:QF}}=cn,{replaceEndOfLineWith:ZF}=It,{insertPragma:ex}=AF,{locStart:tx,locEnd:nx}=ZA,{getFencedCodeBlockValue:rx,hasGitDiffFriendlyOrderedList:ox,splitText:ix,punctuationPattern:ux,INLINE_NODE_TYPES:ax,INLINE_NODE_WRAPPER_TYPES:sx,isAutolink:cx}=pF,lx=new Set(["importExport"]),px=["heading","tableCell","link","wikiLink"],fx=new Set(["listItem","definition","footnoteDefinition"]);function dx(e,t,n,r){const o=e.getValue(),i=null===o.checked?"":o.checked?"[x] ":"[ ] ";return RF([i,vx(e,t,n,{processor:(e,o)=>{if(0===o&&"list"!==e.getValue().type)return HF(" ".repeat(i.length),e.call(n));const u=" ".repeat((3,(a=t.tabWidth-r.length)<0?0:a>3?3:a));var a;return RF([u,HF(u,e.call(n))])}})])}function hx(e,t){return function(e,t,n){n=n||(()=>!0);let r=-1;for(const o of t.children)if(o.type===e.type&&n(o)?r++:r=-1,o===e)return r}(e,t,(t=>t.ordered===e.ordered))}function gx(e,t){const n=[].concat(t);let r,o=-1;for(;r=e.getParentNode(++o);)if(n.includes(r.type))return o;return-1}function mx(e,t){const n=gx(e,t);return-1===n?null:e.getParentNode(n)}function yx(e,t,n){if("preserve"===n.proseWrap&&"\n"===t)return UF;const r="always"===n.proseWrap&&!mx(e,px);return""!==t?r?qF:" ":r?JF:""}function Dx(e,t,n){const r=[];let o=null;const{children:i}=e.getValue();return i.forEach(((e,t)=>{switch(bx(e)){case"start":null===o&&(o={index:t,offset:e.position.end.offset});break;case"end":null!==o&&(r.push({start:o,end:{index:t,offset:e.position.start.offset}}),o=null)}})),vx(e,t,n,{processor:(e,o)=>{if(0!==r.length){const e=r[0];if(o===e.start.index)return RF([i[e.start.index].value,t.originalText.slice(e.start.offset,e.end.offset),i[e.end.index].value]);if(e.start.index<o&&o<e.end.index)return!1;if(o===e.end.index)return r.shift(),!1}return e.call(n)}})}function vx(e,t,n,r){const o=(r=r||{}).postprocessor||RF,i=r.processor||(e=>e.call(n)),u=e.getValue(),a=[];let s;return e.each(((e,n)=>{const r=e.getValue(),o=i(e,n);if(!1!==o){const e={parts:a,prevNode:s,parentNode:u,options:t};(function(e,t){const n=0===t.parts.length,r=ax.includes(e.type),o="html"===e.type&&sx.includes(t.parentNode.type);return n||r||o})(r,e)||(a.push(UF),s&&lx.has(s.type)||(function(e,t){const n=(t.prevNode&&t.prevNode.type)===e.type&&fx.has(e.type),r="listItem"===t.parentNode.type&&!t.parentNode.loose,o=t.prevNode&&"listItem"===t.prevNode.type&&t.prevNode.loose,i="next"===bx(t.prevNode),u="html"===e.type&&t.prevNode&&"html"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line,a="html"===e.type&&"listItem"===t.parentNode.type&&t.prevNode&&"paragraph"===t.prevNode.type&&t.prevNode.position.end.line+1===e.position.start.line;return o||!(n||r||i||u||a)}(r,e)||Cx(r,e))&&a.push(UF),Cx(r,e)&&a.push(UF)),a.push(o),s=r}}),"children"),o(a)}function Ex(e){let t=e;for(;t.children&&0!==t.children.length;)t=t.children[t.children.length-1];return t}function bx(e){if("html"!==e.type)return!1;const t=e.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);return null!==t&&(t[1]?t[1]:"next")}function Cx(e,t){const n=t.prevNode&&"list"===t.prevNode.type,r="code"===e.type&&e.isIndented;return n&&r}function Ax(e,t){const n=[" "].concat(t||[]);return new RegExp(n.map((e=>"\\".concat(e))).join("|")).test(e)?"<".concat(e,">"):e}function Fx(e,t,n){if(null==n&&(n=!0),!e)return"";if(n)return" "+Fx(e,t,!1);if((e=e.replace(/\\(["')])/g,"$1")).includes('"')&&e.includes("'")&&!e.includes(")"))return"(".concat(e,")");const r=e.split("'").length-1,o=e.split('"').length-1,i=r>o?'"':o>r||t.singleQuote?"'":'"';return e=(e=e.replace(/\\/,"\\\\")).replace(new RegExp("(".concat(i,")"),"g"),"\\$1"),"".concat(i).concat(e).concat(i)}var xx={preprocess:function(e,t){return function(e){return TF(e,((e,t)=>"importExport"===e.type&&"importExport"===t.type),((e,t)=>({type:"importExport",value:e.value+"\n\n"+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e){return xF(e,(e=>"import"!==e.type&&"export"!==e.type?e:Object.assign({},e,{type:"importExport"})))}(e=function(e,t){return xF(e,((e,n,[r])=>{if("text"!==e.type)return e;let{value:o}=e;return"paragraph"===r.type&&(0===n&&(o=o.trimStart()),n===r.children.length-1&&(o=o.trimEnd())),{type:"sentence",position:e.position,children:SF(o,t)}}))}(e=function(e,t){return xF(e,((e,t,n)=>{if("list"===e.type&&0!==e.children.length){for(let t=0;t<n.length;t++){const r=n[t];if("list"===r.type&&!r.isAligned)return e.isAligned=!1,e}e.isAligned=r(e)}return e}));function n(e){return 0===e.children.length?-1:e.children[0].position.start.column-1}function r(e){if(!e.ordered)return!0;const[r,o]=e.children;if(FF(r,t.originalText).leadingSpaces.length>1)return!0;const i=n(r);return-1!==i&&(1===e.children.length?i%t.tabWidth==0:i===n(o)&&(i%t.tabWidth==0||FF(o,t.originalText).leadingSpaces.length>1))}}(e=function(e,t){return xF(e,((e,n,r)=>{if("code"===e.type){const n=/^\n?( {4,}|\t)/.test(t.originalText.slice(e.position.start.offset,e.position.end.offset));if(e.isIndented=n,n)for(let e=0;e<r.length;e++){const t=r[e];if(t.hasIndentedCodeblock)break;"list"===t.type&&(t.hasIndentedCodeblock=!0)}}return e}))}(e=function(e){return xF(e,(e=>"inlineCode"!==e.type?e:Object.assign({},e,{value:e.value.replace(/\s+/g," ")})))}(e=function(e){return TF(e,((e,t)=>"text"===e.type&&"text"===t.type),((e,t)=>({type:"text",value:e.value+t.value,position:{start:e.position.start,end:t.position.end}})))}(e=function(e,t){return xF(e,(e=>"text"===e.type&&"*"!==e.value&&"_"!==e.value&&wF.test(e.value)&&e.position.end.offset-e.position.start.offset!==e.value.length?Object.assign({},e,{value:t.originalText.slice(e.position.start.offset,e.position.end.offset)}):e))}(e,t))),t),t),t)))},print:function(e,t,n){const r=e.getValue();if(function(e){const t=mx(e,["linkReference","imageReference"]);return t&&("linkReference"!==t.type||"full"!==t.referenceType)}(e))return RF(ix(t.originalText.slice(r.position.start.offset,r.position.end.offset),t).map((n=>"word"===n.type?n.value:""===n.value?"":yx(e,n.value,t))));switch(r.type){case"front-matter":return t.originalText.slice(r.position.start.offset,r.position.end.offset);case"root":return 0===r.children.length?"":RF([KF(Dx(e,t,n)),lx.has(Ex(r).type)?"":UF]);case"paragraph":return vx(e,t,n,{postprocessor:zF});case"sentence":return vx(e,t,n);case"word":{let t=r.value.replace(/\*/g,"\\$&").replace(new RegExp(["(^|".concat(ux,")(_+)"),"(_+)(".concat(ux,"|$)")].join("|"),"g"),((e,t,n,r,o)=>(n?"".concat(t).concat(n):"".concat(r).concat(o)).replace(/_/g,"\\_")));const n=(e,t,n)=>"sentence"===e.type&&0===n,o=(e,t,n)=>cx(e.children[n-1]);return t!==r.value&&(e.match(void 0,n,o)||e.match(void 0,n,((e,t,n)=>"emphasis"===e.type&&0===n),o))&&(t=t.replace(/^(\\?[*_])+/,(e=>e.replace(/\\/g,"")))),t}case"whitespace":{const n=e.getParentNode(),o=n.children.indexOf(r),i=n.children[o+1],u=i&&/^>|^([*+-]|#{1,6}|\d+[).])$/.test(i.value)?"never":t.proseWrap;return yx(e,r.value,{proseWrap:u})}case"emphasis":{let o;if(cx(r.children[0]))o=t.originalText[r.position.start.offset];else{const t=e.getParentNode(),n=t.children.indexOf(r),i=t.children[n-1],u=t.children[n+1];o=i&&"sentence"===i.type&&i.children.length>0&&"word"===_F(i.children).type&&!_F(i.children).hasTrailingPunctuation||u&&"sentence"===u.type&&u.children.length>0&&"word"===u.children[0].type&&!u.children[0].hasLeadingPunctuation||mx(e,"emphasis")?"*":"_"}return RF([o,vx(e,t,n),o])}case"strong":return RF(["**",vx(e,t,n),"**"]);case"delete":return RF(["~~",vx(e,t,n),"~~"]);case"inlineCode":{const e=IF(r.value,"`"),t="`".repeat(e||1),n=e&&!/^\s/.test(r.value)?" ":"";return RF([t,n,r.value,n,t])}case"wikiLink":{let e="";return e="preserve"===t.proseWrap?r.value:r.value.replace(/[\t\n]+/g," "),RF(["[[",e,"]]"])}case"link":switch(t.originalText[r.position.start.offset]){case"<":{const e="mailto:",n=r.url.startsWith(e)&&t.originalText.slice(r.position.start.offset+1,r.position.start.offset+1+e.length)!==e?r.url.slice(e.length):r.url;return RF(["<",n,">"])}case"[":return RF(["[",vx(e,t,n),"](",Ax(r.url,")"),Fx(r.title,t),")"]);default:return t.originalText.slice(r.position.start.offset,r.position.end.offset)}case"image":return RF(["![",r.alt||"","](",Ax(r.url,")"),Fx(r.title,t),")"]);case"blockquote":return RF(["> ",HF("> ",vx(e,t,n))]);case"heading":return RF(["#".repeat(r.depth)+" ",vx(e,t,n)]);case"code":{if(r.isIndented){const e=" ".repeat(4);return HF(e,RF([e,RF(ZF(r.value,UF))]))}const e=t.__inJsTemplate?"~":"`",n=e.repeat(Math.max(3,LF(r.value,e)+1));return RF([n,r.lang||"",r.meta?" "+r.meta:"",UF,RF(ZF(rx(r,t.originalText),UF)),UF,n])}case"html":{const t=e.getParentNode(),n="root"===t.type&&_F(t.children)===r?r.value.trimEnd():r.value,o=/^<!--[\S\s]*-->$/.test(n);return RF(ZF(n,o?UF:WF($F)))}case"list":{const o=hx(r,e.getParentNode()),i=ox(r,t);return vx(e,t,n,{processor:(e,u)=>{const a=function(){const e=r.ordered?(0===u?r.start:i?1:r.start+u)+(o%2==0?". ":") "):o%2==0?"- ":"* ";return r.isAligned||r.hasIndentedCodeblock?function(e,t){const n=function(){const n=e.length%t.tabWidth;return 0===n?0:t.tabWidth-n}();return e+" ".repeat(n>=4?0:n)}(e,t):e}(),s=e.getValue();return 2===s.children.length&&"html"===s.children[1].type&&s.children[0].position.start.column!==s.children[1].position.start.column?RF([a,dx(e,t,n,a)]):RF([a,HF(" ".repeat(a.length),dx(e,t,n,a))])}})}case"thematicBreak":{const t=gx(e,"list");return-1===t?"---":hx(e.getParentNode(t),e.getParentNode(t+1))%2==0?"***":"---"}case"linkReference":return RF(["[",vx(e,t,n),"]","full"===r.referenceType?RF(["[",r.identifier,"]"]):"collapsed"===r.referenceType?"[]":""]);case"imageReference":switch(r.referenceType){case"full":return RF(["![",r.alt||"","][",r.identifier,"]"]);default:return RF(["![",r.alt,"]","collapsed"===r.referenceType?"[]":""])}case"definition":{const e="always"===t.proseWrap?qF:" ";return YF(RF([RF(["[",r.identifier,"]:"]),XF(RF([e,Ax(r.url),null===r.title?"":RF([e,Fx(r.title,t,!1)])]))]))}case"footnote":return RF(["[^",vx(e,t,n),"]"]);case"footnoteReference":return RF(["[^",r.identifier,"]"]);case"footnoteDefinition":{const o=e.getParentNode().children[e.getName()+1],i=1===r.children.length&&"paragraph"===r.children[0].type&&("never"===t.proseWrap||"preserve"===t.proseWrap&&r.children[0].position.start.line===r.children[0].position.end.line);return RF(["[^",r.identifier,"]: ",i?vx(e,t,n):YF(RF([HF(" ".repeat(4),vx(e,t,n,{processor:(e,t)=>0===t?YF(RF([JF,e.call(n)])):e.call(n)})),o&&"footnoteDefinition"===o.type?JF:""]))])}case"table":return function(e,t,n){const r=UF.parts[0],o=e.getValue(),i=[],u=e.map((e=>e.map(((e,r)=>{const o=QF(e.call(n),t).formatted,u=MF(o);return i[r]=Math.max(i[r]||3,u),{text:o,width:u}}),"children")),"children"),a=c(!1);if("never"!==t.proseWrap)return RF([jF,a]);const s=c(!0);return RF([jF,YF(GF(s,a))]);function c(e){const t=[p(u[0],e),l(e)];return u.length>1&&t.push(VF(r,u.slice(1).map((t=>p(t,e))))),VF(r,t)}function l(e){const t=i.map(((t,n)=>{const r=o.align[n],i="center"===r||"left"===r?":":"-",u="center"===r||"right"===r?":":"-",a=e?"-":"-".repeat(t-2);return"".concat(i).concat(a).concat(u)}));return"| ".concat(t.join(" | ")," |")}function p(e,t){const n=e.map((({text:e,width:n},r)=>{if(t)return e;const u=i[r]-n,a=o.align[r];let s=0;"right"===a?s=u:"center"===a&&(s=Math.floor(u/2));const c=u-s;return"".concat(" ".repeat(s)).concat(e).concat(" ".repeat(c))}));return"| ".concat(n.join(" | ")," |")}}(e,t,n);case"tableCell":return vx(e,t,n);case"break":return/\s/.test(t.originalText[r.position.start.offset])?RF(["  ",WF($F)]):RF(["\\",UF]);case"liquidNode":return RF(ZF(r.value,UF));case"importExport":return RF([r.value,UF]);case"jsx":return r.value;case"math":return RF(["$$",UF,r.value?RF([RF(ZF(r.value,UF)),UF]):"","$$"]);case"inlineMath":return t.originalText.slice(tx(r),nx(r));case"tableRow":case"listItem":default:throw new Error("Unknown markdown type ".concat(JSON.stringify(r.type)))}},embed:function(e,t,n,r){const o=e.getValue();if("code"===o.type&&null!==o.lang){const e=fF(o.lang,r);if(e){const t=r.__inJsTemplate?"~":"`",i=t.repeat(Math.max(3,dF(o.value,t)+1)),u=n(vF(o,r.originalText),{parser:e},{stripTrailingHardline:!0});return mF(gF([i,o.lang,o.meta?" "+o.meta:"",hF,yF(u),hF,i]))}}switch(o.type){case"front-matter":return DF(o,n);case"importExport":return gF([n(o.value,{parser:"babel"},{stripTrailingHardline:!0}),hF]);case"jsx":return n("<$>".concat(o.value,"</$>"),{parser:"__js_expression",rootMarker:"mdx"},{stripTrailingHardline:!0})}return null},massageAstNode:OF,hasPrettierIgnore:function(e){const t=+e.getName();return 0!==t&&"next"===bx(e.getParentNode().children[t-1])},insertPragma:ex},Sx={proseWrap:AE.proseWrap,singleQuote:AE.singleQuote},wx={name:"Markdown",type:"prose",color:"#083fa1",aliases:["pandoc"],aceMode:"markdown",codemirrorMode:"gfm",codemirrorMimeType:"text/x-gfm",wrap:!0,extensions:[".md",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".workbook"],filenames:["contents.lr"],tmScope:"source.gfm",languageId:222},Tx={languages:[Cs(wx,(e=>({since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:e.filenames.concat(["README"]),extensions:e.extensions.filter((e=>".mdx"!==e))}))),Cs(wx,(()=>({name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]})))],options:Sx,printers:{mdast:xx},parsers:{get remark(){return{}.parsers.remark},get markdown(){return{}.parsers.remark},get mdx(){return{}.parsers.mdx}}};const{isFrontMatterNode:Bx}=It,Nx=new Set(["sourceSpan","startSourceSpan","endSourceSpan","nameSpan","valueSpan"]);function kx(e,t){return"text"===e.type||"comment"===e.type||Bx(e)||"yaml"===e.type||"toml"===e.type?null:("attribute"===e.type&&delete t.value,void("docType"===e.type&&delete t.value))}kx.ignoredProperties=Nx;var Px=kx;const{inferParserByLanguage:Ox,isFrontMatterNode:_x}=It,{CSS_DISPLAY_TAGS:Ix,CSS_DISPLAY_DEFAULT:Lx,CSS_WHITE_SPACE_TAGS:Mx,CSS_WHITE_SPACE_DEFAULT:jx}={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"},Rx=Ux(["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"]),Vx=function(e,t){const n=Object.create(null);for(const r of Object.keys(e))n[r]=t(e[r],r);return n}({"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"],abbr:["title"],applet:["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"],area:["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],base:["href","target"],basefont:["color","face","size"],bdo:["dir"],blockquote:["cite"],body:["alink","background","bgcolor","link","text","vlink"],br:["clear"],button:["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"],canvas:["height","width"],caption:["align"],col:["align","char","charoff","span","valign","width"],colgroup:["align","char","charoff","span","valign","width"],data:["value"],del:["cite","datetime"],details:["open"],dfn:["title"],dialog:["open"],dir:["compact"],div:["align"],dl:["compact"],embed:["height","src","type","width"],fieldset:["disabled","form","name"],font:["color","face","size"],form:["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"],frame:["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"],frameset:["cols","rows"],h1:["align"],h2:["align"],h3:["align"],h4:["align"],h5:["align"],h6:["align"],head:["profile"],hr:["align","noshade","size","width"],html:["manifest","version"],iframe:["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","loading","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"],img:["align","alt","border","crossorigin","decoding","height","hspace","ismap","loading","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"],input:["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"],ins:["cite","datetime"],isindex:["prompt"],label:["accesskey","for","form"],legend:["accesskey","align"],li:["type","value"],link:["as","charset","color","crossorigin","disabled","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"],map:["name"],menu:["compact"],meta:["charset","content","http-equiv","name","scheme"],meter:["high","low","max","min","optimum","value"],object:["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"],ol:["compact","reversed","start","type"],optgroup:["disabled","label"],option:["disabled","label","selected","value"],output:["for","form","name"],p:["align"],param:["name","type","value","valuetype"],pre:["width"],progress:["max","value"],q:["cite"],script:["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"],select:["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"],slot:["name"],source:["media","sizes","src","srcset","type"],style:["media","nonce","title","type"],table:["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"],tbody:["align","char","charoff","valign"],td:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],textarea:["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"],tfoot:["align","char","charoff","valign"],th:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],thead:["align","char","charoff","valign"],time:["datetime"],tr:["align","bgcolor","char","charoff","valign"],track:["default","kind","label","src","srclang"],ul:["compact","type"],video:["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"]},Ux),qx=new Set(["\t","\n","\f","\r"," "]),$x=e=>e.replace(/[\t\n\f\r ]+$/,""),Wx=e=>e.match(/^[\t\n\f\r ]*/)[0];function Ux(e){const t=Object.create(null);for(const n of e)t[n]=!0;return t}function Jx(e,t){return!("ieConditionalComment"!==e.type||!e.lastChild||e.lastChild.isSelfClosing||e.lastChild.endSourceSpan)||"ieConditionalComment"===e.type&&!e.complete||!(!rS(e)||!e.children.some((e=>"text"!==e.type&&"interpolation"!==e.type)))||!(!cS(e,t)||zx(e)||"interpolation"===e.type)}function Gx(e){return"attribute"!==e.type&&!!e.parent&&"number"==typeof e.index&&0!==e.index&&function(e){return"comment"===e.type&&"prettier-ignore"===e.value.trim()}(e.parent.children[e.index-1])}function zx(e){return"element"===e.type&&("script"===e.fullName||"style"===e.fullName||"svg:style"===e.fullName||oS(e)&&("script"===e.name||"style"===e.name))}function Hx(e){return iS(e).startsWith("pre")}function Xx(e){return"element"===e.type&&0!==e.children.length&&(["html","head","ul","ol","select"].includes(e.name)||e.cssDisplay.startsWith("table")&&"table-cell"!==e.cssDisplay)}function Yx(e){return eS(e)||"element"===e.type&&"br"===e.fullName||Kx(e)}function Kx(e){return Qx(e)&&Zx(e)}function Qx(e){return e.hasLeadingSpaces&&(e.prev?e.prev.sourceSpan.end.line<e.sourceSpan.start.line:"root"===e.parent.type||e.parent.startSourceSpan.end.line<e.sourceSpan.start.line)}function Zx(e){return e.hasTrailingSpaces&&(e.next?e.next.sourceSpan.start.line>e.sourceSpan.end.line:"root"===e.parent.type||e.parent.endSourceSpan&&e.parent.endSourceSpan.start.line>e.sourceSpan.end.line)}function eS(e){switch(e.type){case"ieConditionalComment":case"comment":case"directive":return!0;case"element":return["script","select"].includes(e.name)}return!1}function tS(e){const{type:t,lang:n}=e.attrMap;return"module"===t||"text/javascript"===t||"text/babel"===t||"application/javascript"===t||"jsx"===n?"babel":"application/x-typescript"===t||"ts"===n||"tsx"===n?"typescript":"text/markdown"===t?"markdown":"text/html"===t?"html":t&&(t.endsWith("json")||t.endsWith("importmap"))?"json":"text/x-handlebars-template"===t?"glimmer":void 0}function nS(e){return"block"===e||"list-item"===e||e.startsWith("table")}function rS(e){return iS(e).startsWith("pre")}function oS(e){return"element"===e.type&&!e.hasExplicitNamespace&&!["html","svg"].includes(e.namespace)}function iS(e){return"element"===e.type&&(!e.namespace||oS(e))&&Mx[e.name]||jx}const uS=new Set(["template","style","script"]);function aS(e,t){return sS(e,t)&&!uS.has(e.fullName)}function sS(e,t){return"vue"===t.parser&&"element"===e.type&&"root"===e.parent.type&&"html"!==e.fullName.toLowerCase()}function cS(e,t){return sS(e,t)&&(aS(e,t)||e.attrMap.lang&&"html"!==e.attrMap.lang)}var lS={HTML_ELEMENT_ATTRIBUTES:Vx,HTML_TAGS:Rx,htmlTrim:e=>(e=>e.replace(/^[\t\n\f\r ]+/,""))($x(e)),htmlTrimPreserveIndentation:e=>(e=>e.replace(/^[\t\f\r ]*?\n/g,""))($x(e)),splitByHtmlWhitespace:e=>e.split(/[\t\n\f\r ]+/),hasHtmlWhitespace:e=>/[\t\n\f\r ]/.test(e),getLeadingAndTrailingHtmlWhitespace:e=>{const[,t,n,r]=e.match(/^([\t\n\f\r ]*)([\S\s]*?)([\t\n\f\r ]*)$/);return{leadingWhitespace:t,trailingWhitespace:r,text:n}},canHaveInterpolation:function(e){return e.children&&!zx(e)},countChars:function(e,t){let n=0;for(let r=0;r<e.length;r++)e[r]===t&&n++;return n},countParents:function(e,t){let n=0;for(let r=e.stack.length-1;r>=0;r--){const o=e.stack[r];o&&"object"==typeof o&&!Array.isArray(o)&&t(o)&&n++}return n},dedentString:function(e,t=function(e){let t=1/0;for(const n of e.split("\n")){if(0===n.length)continue;if(!qx.has(n[0]))return 0;const e=Wx(n).length;n.length!==e&&e<t&&(t=e)}return t===1/0?0:t}(e)){return 0===t?e:e.split("\n").map((e=>e.slice(t))).join("\n")},forceBreakChildren:Xx,forceBreakContent:function(e){return Xx(e)||"element"===e.type&&0!==e.children.length&&(["body","script","style"].includes(e.name)||e.children.some((e=>function(e){return e.children&&e.children.some((e=>"text"!==e.type))}(e))))||e.firstChild&&e.firstChild===e.lastChild&&"text"!==e.firstChild.type&&Qx(e.firstChild)&&(!e.lastChild.isTrailingSpaceSensitive||Zx(e.lastChild))},forceNextEmptyLine:function(e){return _x(e)||e.next&&e.sourceSpan.end&&e.sourceSpan.end.line+1<e.next.sourceSpan.start.line},getLastDescendant:function e(t){return t.lastChild?e(t.lastChild):t},getNodeCssStyleDisplay:function(e,t){if(e.prev&&"comment"===e.prev.type){const t=e.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(t)return t[1]}let n=!1;if("element"===e.type&&"svg"===e.namespace){if(!function(e,t){let n=e;for(;n;){if(t(n))return!0;n=n.parent}return!1}(e,(e=>"svg:foreignObject"===e.fullName)))return"svg"===e.name?"inline-block":"block";n=!0}switch(t.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return"vue"===t.parser&&e.parent&&"root"===e.parent.type?"block":"element"===e.type&&(!e.namespace||n||oS(e))&&Ix[e.name]||Lx}},getNodeCssStyleWhiteSpace:iS,getPrettierIgnoreAttributeCommentData:function(e){const t=e.trim().match(/^prettier-ignore-attribute(?:\s+([^]+))?$/);return!!t&&(!t[1]||t[1].split(/\s+/))},hasPrettierIgnore:Gx,inferScriptParser:function(e,t){return"script"!==e.name||e.attrMap.src?"style"===e.name?function(e){const{lang:t}=e.attrMap;return t&&"postcss"!==t&&"css"!==t?"scss"===t?"scss":"less"===t?"less":void 0:"css"}(e):t&&cS(e,t)?tS(e)||!("src"in e.attrMap)&&Ox(e.attrMap.lang,t):void 0:e.attrMap.lang||e.attrMap.type?tS(e):"babel"},isVueCustomBlock:aS,isVueNonHtmlBlock:cS,isVueSlotAttribute:function(e){const t=e.fullName;return"#"===t.charAt(0)||"slot-scope"===t||"v-slot"===t||t.startsWith("v-slot:")},isVueSfcBindingsAttribute:function(e,t){const n=e.parent;if(!sS(n,t))return!1;const r=n.fullName,o=e.fullName;return"script"===r&&"setup"===o||"style"===r&&"vars"===o},isDanglingSpaceSensitiveNode:function(e){return!(nS(t=e.cssDisplay)||"inline-block"===t||zx(e));var t},isIndentationSensitiveNode:Hx,isLeadingSpaceSensitiveNode:function(e,t){const n=function(){return!(_x(e)||("text"!==e.type&&"interpolation"!==e.type||!e.prev||"text"!==e.prev.type&&"interpolation"!==e.prev.type)&&(!e.parent||"none"===e.parent.cssDisplay||!rS(e.parent)&&(!e.prev&&("root"===e.parent.type||rS(e)&&e.parent||zx(e.parent)||aS(e.parent,t)||(n=e.parent.cssDisplay,nS(n)||"inline-block"===n))||e.prev&&!function(e){return!nS(e)}(e.prev.cssDisplay))));var n}();return n&&!e.prev&&e.parent&&e.parent.tagDefinition&&e.parent.tagDefinition.ignoreFirstLf?"interpolation"===e.type:n},isPreLikeNode:rS,isScriptLikeTag:zx,isTextLikeNode:function(e){return"text"===e.type||"comment"===e.type},isTrailingSpaceSensitiveNode:function(e,t){return!(_x(e)||("text"!==e.type&&"interpolation"!==e.type||!e.next||"text"!==e.next.type&&"interpolation"!==e.next.type)&&(!e.parent||"none"===e.parent.cssDisplay||!rS(e.parent)&&(!e.next&&("root"===e.parent.type||rS(e)&&e.parent||zx(e.parent)||aS(e.parent,t)||(n=e.parent.cssDisplay,nS(n)||"inline-block"===n))||e.next&&!function(e){return!nS(e)}(e.next.cssDisplay))));var n},isWhitespaceSensitiveNode:function(e){return zx(e)||"interpolation"===e.type||Hx(e)},isUnknownNamespace:oS,preferHardlineAsLeadingSpaces:function(e){return eS(e)||e.prev&&Yx(e.prev)||Kx(e)},preferHardlineAsTrailingSpaces:Yx,shouldNotPrintClosingTag:function(e,t){return!e.isSelfClosing&&!e.endSourceSpan&&(Gx(e)||Jx(e.parent,t))},shouldPreserveContent:Jx,unescapeQuoteEntities:function(e){return e.replace(/&apos;/g,"'").replace(/&quot;/g,'"')}},pS=Me((function(e,t){function n(e){return t.$0<=e&&e<=t.$9}Object.defineProperty(t,"__esModule",{value:!0}),t.$EOF=0,t.$BSPACE=8,t.$TAB=9,t.$LF=10,t.$VTAB=11,t.$FF=12,t.$CR=13,t.$SPACE=32,t.$BANG=33,t.$DQ=34,t.$HASH=35,t.$$=36,t.$PERCENT=37,t.$AMPERSAND=38,t.$SQ=39,t.$LPAREN=40,t.$RPAREN=41,t.$STAR=42,t.$PLUS=43,t.$COMMA=44,t.$MINUS=45,t.$PERIOD=46,t.$SLASH=47,t.$COLON=58,t.$SEMICOLON=59,t.$LT=60,t.$EQ=61,t.$GT=62,t.$QUESTION=63,t.$0=48,t.$7=55,t.$9=57,t.$A=65,t.$E=69,t.$F=70,t.$X=88,t.$Z=90,t.$LBRACKET=91,t.$BACKSLASH=92,t.$RBRACKET=93,t.$CARET=94,t.$_=95,t.$a=97,t.$b=98,t.$e=101,t.$f=102,t.$n=110,t.$r=114,t.$t=116,t.$u=117,t.$v=118,t.$x=120,t.$z=122,t.$LBRACE=123,t.$BAR=124,t.$RBRACE=125,t.$NBSP=160,t.$PIPE=124,t.$TILDA=126,t.$AT=64,t.$BT=96,t.isWhitespace=function(e){return e>=t.$TAB&&e<=t.$SPACE||e==t.$NBSP},t.isDigit=n,t.isAsciiLetter=function(e){return e>=t.$a&&e<=t.$z||e>=t.$A&&e<=t.$Z},t.isAsciiHexDigit=function(e){return e>=t.$a&&e<=t.$f||e>=t.$A&&e<=t.$F||n(e)},t.isNewLine=function(e){return e===t.$LF||e===t.$CR},t.isOctalDigit=function(e){return t.$0<=e&&e<=t.$7}})),fS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n){this.filePath=e,this.name=t,this.members=n}assertNoMembers(){if(this.members.length)throw new Error("Illegal state: symbol without members expected, but got ".concat(JSON.stringify(this),"."))}}t.StaticSymbol=n,t.StaticSymbolCache=class{constructor(){this.cache=new Map}get(e,t,r){const o=(r=r||[]).length?".".concat(r.join(".")):"",i='"'.concat(e,'".').concat(t).concat(o);let u=this.cache.get(i);return u||(u=new n(e,t,r),this.cache.set(i,u)),u}}})),dS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=/-+([a-z0-9])/g;function r(e,t,n){const r=e.indexOf(t);return-1==r?n:[e.slice(0,r).trim(),e.slice(r+1).trim()]}function o(e,t,n){return Array.isArray(e)?t.visitArray(e,n):"object"==typeof(r=e)&&null!==r&&Object.getPrototypeOf(r)===a?t.visitStringMap(e,n):null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e?t.visitPrimitive(e,n):t.visitOther(e,n);var r}t.dashCaseToCamelCase=function(e){return e.replace(n,((...e)=>e[1].toUpperCase()))},t.splitAtColon=function(e,t){return r(e,":",t)},t.splitAtPeriod=function(e,t){return r(e,".",t)},t.visitValue=o,t.isDefined=function(e){return null!=e},t.noUndefined=function(e){return void 0===e?null:e},t.ValueTransformer=class{visitArray(e,t){return e.map((e=>o(e,this,t)))}visitStringMap(e,t){const n={};return Object.keys(e).forEach((r=>{n[r]=o(e[r],this,t)})),n}visitPrimitive(e,t){return e}visitOther(e,t){return e}},t.SyncAsync={assertSync:e=>{if(s(e))throw new Error("Illegal state: value cannot be a promise");return e},then:(e,t)=>s(e)?e.then(t):t(e),all:e=>e.some(s)?Promise.all(e):e},t.error=function(e){throw new Error("Internal Error: ".concat(e))},t.syntaxError=function(e,t){const n=Error(e);return n[i]=!0,t&&(n[u]=t),n};const i="ngSyntaxError",u="ngParseErrors";t.isSyntaxError=function(e){return e[i]},t.getParseErrors=function(e){return e[u]||[]},t.escapeRegExp=function(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};const a=Object.getPrototypeOf({});function s(e){return!!e&&"function"==typeof e.then}t.utf8Encode=function(e){let t="";for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r>=55296&&r<=56319&&e.length>n+1){const t=e.charCodeAt(n+1);t>=56320&&t<=57343&&(n++,r=(r-55296<<10)+t-56320+65536)}r<=127?t+=String.fromCharCode(r):r<=2047?t+=String.fromCharCode(r>>6&31|192,63&r|128):r<=65535?t+=String.fromCharCode(r>>12|224,r>>6&63|128,63&r|128):r<=2097151&&(t+=String.fromCharCode(r>>18&7|240,r>>12&63|128,r>>6&63|128,63&r|128))}return t},t.stringify=function e(t){if("string"==typeof t)return t;if(t instanceof Array)return"["+t.map(e).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return"".concat(t.overriddenName);if(t.name)return"".concat(t.name);if(!t.toString)return"object";const n=t.toString();if(null==n)return""+n;const r=n.indexOf("\n");return-1===r?n:n.substring(0,r)},t.resolveForwardRef=function(e){return"function"==typeof e&&e.hasOwnProperty("__forward_ref__")?e():e},t.isPromise=s,t.Version=class{constructor(e){this.full=e;const t=e.split(".");this.major=t[0],this.minor=t[1],this.patch=t.slice(2).join(".")}};const c="undefined"!=typeof window&&window,l="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,p=void 0!==Le&&Le||c||l;t.global=p})),hS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});const n=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function r(e){return e.replace(/\W/g,"_")}t.sanitizeIdentifier=r;let o=0;function i(e){if(!e||!e.reference)return null;const t=e.reference;if(t instanceof fS.StaticSymbol)return t.name;if(t.__anonymousType)return t.__anonymousType;let n=dS.stringify(t);return n.indexOf("(")>=0?(n="anonymous_".concat(o++),t.__anonymousType=n):n=r(n),n}var u;t.identifierName=i,t.identifierModuleUrl=function(e){const t=e.reference;return t instanceof fS.StaticSymbol?t.filePath:"./".concat(dS.stringify(t))},t.viewClassName=function(e,t){return"View_".concat(i({reference:e}),"_").concat(t)},t.rendererTypeName=function(e){return"RenderType_".concat(i({reference:e}))},t.hostViewClassName=function(e){return"HostView_".concat(i({reference:e}))},t.componentFactoryName=function(e){return"".concat(i({reference:e}),"NgFactory")},function(e){e[e.Pipe=0]="Pipe",e[e.Directive=1]="Directive",e[e.NgModule=2]="NgModule",e[e.Injectable=3]="Injectable"}(u=t.CompileSummaryKind||(t.CompileSummaryKind={})),t.tokenName=function(e){return null!=e.value?r(e.value):i(e.identifier)},t.tokenReference=function(e){return null!=e.identifier?e.identifier.reference:e.value},t.CompileStylesheetMetadata=class{constructor({moduleUrl:e,styles:t,styleUrls:n}={}){this.moduleUrl=e||null,this.styles=s(t),this.styleUrls=s(n)}},t.CompileTemplateMetadata=class{constructor({encapsulation:e,template:t,templateUrl:n,htmlAst:r,styles:o,styleUrls:i,externalStylesheets:u,animations:a,ngContentSelectors:l,interpolation:p,isInline:f,preserveWhitespaces:d}){if(this.encapsulation=e,this.template=t,this.templateUrl=n,this.htmlAst=r,this.styles=s(o),this.styleUrls=s(i),this.externalStylesheets=s(u),this.animations=a?c(a):[],this.ngContentSelectors=l||[],p&&2!=p.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=p,this.isInline=f,this.preserveWhitespaces=d}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};class a{static create({isHost:e,type:t,isComponent:r,selector:o,exportAs:i,changeDetection:u,inputs:s,outputs:c,host:l,providers:p,viewProviders:f,queries:d,guards:h,viewQueries:g,entryComponents:m,template:y,componentViewType:D,rendererType:v,componentFactory:E}){const b={},C={},A={};null!=l&&Object.keys(l).forEach((e=>{const t=l[e],r=e.match(n);null===r?A[e]=t:null!=r[1]?C[r[1]]=t:null!=r[2]&&(b[r[2]]=t)}));const F={};null!=s&&s.forEach((e=>{const t=dS.splitAtColon(e,[e,e]);F[t[0]]=t[1]}));const x={};return null!=c&&c.forEach((e=>{const t=dS.splitAtColon(e,[e,e]);x[t[0]]=t[1]})),new a({isHost:e,type:t,isComponent:!!r,selector:o,exportAs:i,changeDetection:u,inputs:F,outputs:x,hostListeners:b,hostProperties:C,hostAttributes:A,providers:p,viewProviders:f,queries:d,guards:h,viewQueries:g,entryComponents:m,template:y,componentViewType:D,rendererType:v,componentFactory:E})}constructor({isHost:e,type:t,isComponent:n,selector:r,exportAs:o,changeDetection:i,inputs:u,outputs:a,hostListeners:c,hostProperties:l,hostAttributes:p,providers:f,viewProviders:d,queries:h,guards:g,viewQueries:m,entryComponents:y,template:D,componentViewType:v,rendererType:E,componentFactory:b}){this.isHost=!!e,this.type=t,this.isComponent=n,this.selector=r,this.exportAs=o,this.changeDetection=i,this.inputs=u,this.outputs=a,this.hostListeners=c,this.hostProperties=l,this.hostAttributes=p,this.providers=s(f),this.viewProviders=s(d),this.queries=s(h),this.guards=g,this.viewQueries=s(m),this.entryComponents=s(y),this.template=D,this.componentViewType=v,this.rendererType=E,this.componentFactory=b}toSummary(){return{summaryKind:u.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}}function s(e){return e||[]}function c(e){return e.reduce(((e,t)=>{const n=Array.isArray(t)?c(t):t;return e.concat(n)}),[])}function l(e){return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}t.CompileDirectiveMetadata=a,t.CompilePipeMetadata=class{constructor({type:e,name:t,pure:n}){this.type=e,this.name=t,this.pure=!!n}toSummary(){return{summaryKind:u.Pipe,type:this.type,name:this.name,pure:this.pure}}},t.CompileShallowModuleMetadata=class{},t.CompileNgModuleMetadata=class{constructor({type:e,providers:t,declaredDirectives:n,exportedDirectives:r,declaredPipes:o,exportedPipes:i,entryComponents:u,bootstrapComponents:a,importedModules:c,exportedModules:l,schemas:p,transitiveModule:f,id:d}){this.type=e||null,this.declaredDirectives=s(n),this.exportedDirectives=s(r),this.declaredPipes=s(o),this.exportedPipes=s(i),this.providers=s(t),this.entryComponents=s(u),this.bootstrapComponents=s(a),this.importedModules=s(c),this.exportedModules=s(l),this.schemas=s(p),this.id=d||null,this.transitiveModule=f||null}toSummary(){const e=this.transitiveModule;return{summaryKind:u.NgModule,type:this.type,entryComponents:e.entryComponents,providers:e.providers,modules:e.modules,exportedDirectives:e.exportedDirectives,exportedPipes:e.exportedPipes}}},t.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(e,t){this.providers.push({provider:e,module:t})}addDirective(e){this.directivesSet.has(e.reference)||(this.directivesSet.add(e.reference),this.directives.push(e))}addExportedDirective(e){this.exportedDirectivesSet.has(e.reference)||(this.exportedDirectivesSet.add(e.reference),this.exportedDirectives.push(e))}addPipe(e){this.pipesSet.has(e.reference)||(this.pipesSet.add(e.reference),this.pipes.push(e))}addExportedPipe(e){this.exportedPipesSet.has(e.reference)||(this.exportedPipesSet.add(e.reference),this.exportedPipes.push(e))}addModule(e){this.modulesSet.has(e.reference)||(this.modulesSet.add(e.reference),this.modules.push(e))}addEntryComponent(e){this.entryComponentsSet.has(e.componentType)||(this.entryComponentsSet.add(e.componentType),this.entryComponents.push(e))}},t.ProviderMeta=class{constructor(e,{useClass:t,useValue:n,useExisting:r,useFactory:o,deps:i,multi:u}){this.token=e,this.useClass=t||null,this.useValue=n,this.useExisting=r,this.useFactory=o||null,this.dependencies=i||null,this.multi=!!u}},t.flatten=c,t.templateSourceUrl=function(e,t,n){let r;return r=n.isInline?t.type.reference instanceof fS.StaticSymbol?"".concat(t.type.reference.filePath,".").concat(t.type.reference.name,".html"):"".concat(i(e),"/").concat(i(t.type),".html"):n.templateUrl,t.type.reference instanceof fS.StaticSymbol?r:l(r)},t.sharedStylesheetJitUrl=function(e,t){const n=e.moduleUrl.split(/\/\\/g),r=n[n.length-1];return l("css/".concat(t).concat(r,".ngstyle.js"))},t.ngModuleJitUrl=function(e){return l("".concat(i(e.type),"/module.ngfactory.js"))},t.templateJitUrl=function(e,t){return l("".concat(i(e),"/").concat(i(t.type),".ngfactory.js"))}})),gS=Me((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t,n,r){this.file=e,this.offset=t,this.line=n,this.col=r}toString(){return null!=this.offset?"".concat(this.file.url,"@").concat(this.line,":").concat(this.col):this.file.url}moveBy(e){const t=this.file.content,r=t.length;let o=this.offset,i=this.line,u=this.col;for(;o>0&&e<0;)if(o--,e++,t.charCodeAt(o)==pS.$LF){i--;const e=t.substr(0,o-1).lastIndexOf(String.fromCharCode(pS.$LF));u=e>0?o-e:o}else u--;for(;o<r&&e>0;){const n=t.charCodeAt(o);o++,e--,n==pS.$LF?(i++,u=0):u++}return new n(this.file,o,i,u)}getContext(e,t){const n=this.file.content;let r=this.offset;if(null!=r){r>n.length-1&&(r=n.length-1);let o=r,i=0,u=0;for(;i<e&&r>0&&(r--,i++,"\n"!=n[r]||++u!=t););for(i=0,u=0;i<e&&o<n.length-1&&(o++,i++,"\n"!=n[o]||++u!=t););return{before:n.substring(r,this.offset),after:n.substring(this.offset,o+1)}}return null}}t.ParseLocation=n;class r{constructor(e,t){this.content=e,this.url=t}}t.ParseSourceFile=r;class o{constructor(e,t,n=null){this.start=e,this.end=t,this.details=n}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}}var i;t.ParseSourceSpan=o,t.EMPTY_PARSE_LOCATION=new n(new r("",""),0,0,0),t.EMPTY_SOURCE_SPAN=new o(t.EMPTY_PARSE_LOCATION,t.EMPTY_PARSE_LOCATION),function(e){e[e.WARNING=0]="WARNING",e[e.ERROR=1]="ERROR"}(i=t.ParseErrorLevel||(t.ParseErrorLevel={})),t.ParseError=class{constructor(e,t,n=i.ERROR){this.span=e,this.msg=t,this.level=n}contextualMessage(){const e=this.span.start.getContext(100,3);return e?"".concat(this.msg,' ("').concat(e.before,"[").concat(i[this.level]," ->]").concat(e.after,'")'):this.msg}toString(){const e=this.span.details?", ".concat(this.span.details):"";return"".concat(this.contextualMessage(),": ").concat(this.span.start).concat(e)}},t.typeSourceSpan=function(e,t){const i=hS.identifierModuleUrl(t),u=null!=i?"in ".concat(e," ").concat(hS.identifierName(t)," in ").concat(i):"in ".concat(e," ").concat(hS.identifierName(t)),a=new r("",u);return new o(new n(a,-1,-1,-1),new n(a,-1,-1,-1))},t.r3JitTypeSourceSpan=function(e,t,i){const u="in ".concat(e," ").concat(t," in ").concat(i),a=new r("",u);return new o(new n(a,-1,-1,-1),new n(a,-1,-1,-1))}}));const{ParseSourceSpan:mS}=gS,{htmlTrim:yS,getLeadingAndTrailingHtmlWhitespace:DS,hasHtmlWhitespace:vS,canHaveInterpolation:ES,getNodeCssStyleDisplay:bS,isDanglingSpaceSensitiveNode:CS,isIndentationSensitiveNode:AS,isLeadingSpaceSensitiveNode:FS,isTrailingSpaceSensitiveNode:xS,isWhitespaceSensitiveNode:SS}=lS,wS=[function(e){return e.map((e=>{if("element"===e.type&&e.tagDefinition.ignoreFirstLf&&0!==e.children.length&&"text"===e.children[0].type&&"\n"===e.children[0].value[0]){const[t,...n]=e.children;return e.clone({children:1===t.value.length?n:[t.clone({value:t.value.slice(1)}),...n]})}return e}))},function(e){const t=e=>"element"===e.type&&e.prev&&"ieConditionalStartComment"===e.prev.type&&e.prev.sourceSpan.end.offset===e.startSourceSpan.start.offset&&e.firstChild&&"ieConditionalEndComment"===e.firstChild.type&&e.firstChild.sourceSpan.start.offset===e.startSourceSpan.end.offset;return e.map((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const o=e.children[r];if(!n[r+1])if(n[r]){const e=o.prev,n=o.firstChild,r=new mS(e.sourceSpan.start,n.sourceSpan.end),i=new mS(r.start,o.sourceSpan.end);t.push(o.clone({condition:e.condition,sourceSpan:i,startSourceSpan:r,children:o.children.slice(1)}))}else t.push(o)}return e.clone({children:t})}}return e}))},function(e){return function(e,t,n){return e.map((e=>{if(e.children){const r=e.children.map(t);if(r.some(Boolean)){const t=[];for(let o=0;o<e.children.length;o++){const i=e.children[o];if("text"!==i.type&&!r[o]){t.push(i);continue}const u="text"===i.type?i:i.clone({type:"text",value:n(i)});if(0===t.length||"text"!==t[t.length-1].type){t.push(u);continue}const a=t.pop();t.push(a.clone({value:a.value+u.value,sourceSpan:new mS(a.sourceSpan.start,u.sourceSpan.end)}))}return e.clone({children:t})}}return e}))}(e,(e=>"cdata"===e.type),(e=>"<![CDATA[".concat(e.value,"]]>")))},function(e,t){if("html"===t.parser)return e;const n=/{{([\S\s]+?)}}/g;return e.map((e=>{if(!ES(e))return e;const t=[];for(const r of e.children){if("text"!==r.type){t.push(r);continue}let e=r.sourceSpan.start,o=null;const i=r.value.split(n);for(let n=0;n<i.length;n++,e=o){const r=i[n];n%2!=0?(o=e.moveBy(r.length+4),t.push({type:"interpolation",sourceSpan:new mS(e,o),children:0===r.length?[]:[{type:"text",value:r,sourceSpan:new mS(e.moveBy(2),o.moveBy(-2))}]})):(o=e.moveBy(r.length),0!==r.length&&t.push({type:"text",value:r,sourceSpan:new mS(e,o)}))}}return e.clone({children:t})}))},function(e){const t="whitespace";return e.map((e=>{if(!e.children)return e;if(0===e.children.length||1===e.children.length&&"text"===e.children[0].type&&0===yS(e.children[0].value).length)return e.clone({children:[],hasDanglingSpaces:0!==e.children.length});const n=SS(e),r=AS(e);return e.clone({isWhitespaceSensitive:n,isIndentationSensitive:r,children:e.children.reduce(((e,r)=>{if("text"!==r.type||n)return e.concat(r);const o=[],{leadingWhitespace:i,text:u,trailingWhitespace:a}=DS(r.value);return i&&o.push({type:t}),u&&o.push({type:"text",value:u,sourceSpan:new mS(r.sourceSpan.start.moveBy(i.length),r.sourceSpan.end.moveBy(-a.length))}),a&&o.push({type:t}),e.concat(o)}),[]).reduce(((e,n,r,o)=>{if(n.type===t)return e;const i=0!==r&&o[r-1].type===t,u=r!==o.length-1&&o[r+1].type===t;return e.concat(Object.assign({},n,{hasLeadingSpaces:i,hasTrailingSpaces:u}))}),[])})}))},function(e,t){return e.map((e=>Object.assign(e,{cssDisplay:bS(e,t)})))},function(e){return e.map((e=>Object.assign(e,{isSelfClosing:!e.children||"element"===e.type&&(e.tagDefinition.isVoid||e.startSourceSpan===e.endSourceSpan)})))},function(e,t){return e.map((e=>"element"!==e.type?e:Object.assign(e,{hasHtmComponentClosingTag:e.endSourceSpan&&/^<\s*\/\s*\/\s*>$/.test(t.originalText.slice(e.endSourceSpan.start.offset,e.endSourceSpan.end.offset))})))},function(e,t){return e.map((e=>e.children?0===e.children.length?e.clone({isDanglingSpaceSensitive:CS(e)}):e.clone({children:e.children.map((e=>Object.assign({},e,{isLeadingSpaceSensitive:FS(e,t),isTrailingSpaceSensitive:xS(e,t)}))).map(((e,t,n)=>Object.assign({},e,{isLeadingSpaceSensitive:(0===t||n[t-1].isTrailingSpaceSensitive)&&e.isLeadingSpaceSensitive,isTrailingSpaceSensitive:(t===n.length-1||n[t+1].isLeadingSpaceSensitive)&&e.isTrailingSpaceSensitive})))}):e))},function(e){const t=e=>"element"===e.type&&0===e.attrs.length&&1===e.children.length&&"text"===e.firstChild.type&&!vS(e.children[0].value)&&!e.firstChild.hasLeadingSpaces&&!e.firstChild.hasTrailingSpaces&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces&&e.prev&&"text"===e.prev.type&&e.next&&"text"===e.next.type;return e.map((e=>{if(e.children){const n=e.children.map(t);if(n.some(Boolean)){const t=[];for(let r=0;r<e.children.length;r++){const o=e.children[r];if(n[r]){const n=t.pop(),i=e.children[++r],{isTrailingSpaceSensitive:u,hasTrailingSpaces:a}=i;t.push(n.clone({value:n.value+"<".concat(o.rawName,">")+o.firstChild.value+"</".concat(o.rawName,">")+i.value,sourceSpan:new mS(n.sourceSpan.start,i.sourceSpan.end),isTrailingSpaceSensitive:u,hasTrailingSpaces:a}))}else t.push(o)}return e.clone({children:t})}}return e}))}];const{builders:{concat:TS,group:BS}}=cn;var NS={isVueEventBindingExpression:function(e){const t=e.trim();return/^([\w$]+|\([^)]*?\))\s*=>|^function\s*\(/.test(t)||/^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(t)},printVueFor:function(e,t){const{left:n,operator:r,right:o}=function(e){const t=/,([^,\]}]*)(?:,([^,\]}]*))?$/,n=e.match(/([^]*?)\s+(in|of)\s+([^]*)/);if(!n)return;const r={};r.for=n[3].trim();const o=n[1].trim().replace(/^\(|\)$/g,""),i=o.match(t);return i?(r.alias=o.replace(t,""),r.iterator1=i[1].trim(),i[2]&&(r.iterator2=i[2].trim())):r.alias=o,{left:"".concat([r.alias,r.iterator1,r.iterator2].filter(Boolean).join(",")),operator:n[2],right:r.for}}(e);return TS([BS(t("function _(".concat(n,") {}"),{parser:"babel",__isVueForBindingLeft:!0}))," ",r," ",t(o,{parser:"__js_expression"},{stripTrailingHardline:!0})])},printVueBindings:function(e,t){return t("function _(".concat(e,") {}"),{parser:"babel",__isVueBindings:!0},{stripTrailingHardline:!0})}},kS=Me((function(e){!function(t,n){e.exports?e.exports=n():t.parseSrcset=n()}(Le,(function(){return function(e,t){var n=t&&t.logger||console;function r(e){return" "===e||"\t"===e||"\n"===e||"\f"===e||"\r"===e}function o(t){var n,r=t.exec(e.substring(y));if(r)return n=r[0],y+=n.length,n}for(var i,u,a,s,c,l=e.length,p=/^[ \t\n\r\u000c]+/,f=/^[, \t\n\r\u000c]+/,d=/^[^ \t\n\r\u000c]+/,h=/[,]+$/,g=/^\d+$/,m=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,y=0,D=[];;){if(o(f),y>=l)return D;i=o(d),u=[],","===i.slice(-1)?(i=i.replace(h,""),E()):v()}function v(){for(o(p),a="",s="in descriptor";;){if(c=e.charAt(y),"in descriptor"===s)if(r(c))a&&(u.push(a),a="",s="after descriptor");else{if(","===c)return y+=1,a&&u.push(a),void E();if("("===c)a+=c,s="in parens";else{if(""===c)return a&&u.push(a),void E();a+=c}}else if("in parens"===s)if(")"===c)a+=c,s="in descriptor";else{if(""===c)return u.push(a),void E();a+=c}else if("after descriptor"===s)if(r(c));else{if(""===c)return void E();s="in descriptor",y-=1}y+=1}}function E(){var t,r,o,a,s,c,l,p,f,d=!1,h={};for(a=0;a<u.length;a++)c=(s=u[a])[s.length-1],l=s.substring(0,s.length-1),p=parseInt(l,10),f=parseFloat(l),g.test(l)&&"w"===c?((t||r)&&(d=!0),0===p?d=!0:t=p):m.test(l)&&"x"===c?((t||r||o)&&(d=!0),f<0?d=!0:r=f):g.test(l)&&"h"===c?((o||r)&&(d=!0),0===p?d=!0:o=p):d=!0;d?n&&n.error&&n.error("Invalid srcset descriptor found in '"+e+"' at '"+s+"'."):(h.url=i,t&&(h.w=t),r&&(h.d=r),o&&(h.h=o),D.push(h))}}}))}));const{builders:{concat:PS,ifBreak:OS,join:_S,line:IS}}=cn;var LS={printImgSrcset:function(e){const t=kS(e,{logger:{error(e){throw new Error(e)}}}),n=t.some((({w:e})=>e)),r=t.some((({h:e})=>e));if(n+r+t.some((({d:e})=>e))>1)throw new Error("Mixed descriptor in srcset is not supported");const o=n?"w":r?"h":"d",i=n?"w":r?"h":"x",u=e=>Math.max(...e),a=t.map((e=>e.url)),s=u(a.map((e=>e.length))),c=t.map((e=>e[o])).map((e=>e?e.toString():"")),l=c.map((e=>{const t=e.indexOf(".");return-1===t?e.length:t})),p=u(l);return _S(PS([",",IS]),a.map(((e,t)=>{const n=[e],r=c[t];if(r){const o=s-e.length+1,u=p-l[t],a=" ".repeat(o+u);n.push(OS(a," "),r+i)}return PS(n)})))},printClassNames:function(e){return e.trim().split(/\s+/).join(" ")}};const{builders:MS,utils:{mapDoc:jS,normalizeParts:RS}}=cn,{replaceEndOfLineWith:VS}=It,{print:qS}=ME,{breakParent:$S,dedentToRoot:WS,fill:US,group:JS,hardline:GS,ifBreak:zS,indent:HS,join:XS,line:YS,literalline:KS,softline:QS}=MS,{htmlTrimPreserveIndentation:ZS,splitByHtmlWhitespace:ew,countChars:tw,countParents:nw,dedentString:rw,forceBreakChildren:ow,forceBreakContent:iw,forceNextEmptyLine:uw,getLastDescendant:aw,getPrettierIgnoreAttributeCommentData:sw,hasPrettierIgnore:cw,inferScriptParser:lw,isVueCustomBlock:pw,isVueNonHtmlBlock:fw,isVueSlotAttribute:dw,isVueSfcBindingsAttribute:hw,isScriptLikeTag:gw,isTextLikeNode:mw,preferHardlineAsLeadingSpaces:yw,shouldNotPrintClosingTag:Dw,shouldPreserveContent:vw,unescapeQuoteEntities:Ew,isPreLikeNode:bw}=lS,{insertPragma:Cw}={hasPragma:function(e){return/^\s*<!--\s*@(format|prettier)\s*-->/.test(e)},insertPragma:function(e){return"\x3c!-- @format --\x3e\n\n"+e.replace(/^\s*\n/,"")}},{locStart:Aw,locEnd:Fw}={locStart:function(e){return e.sourceSpan.start.offset},locEnd:function(e){return e.sourceSpan.end.offset}},{printVueFor:xw,printVueBindings:Sw,isVueEventBindingExpression:ww}=NS,{printImgSrcset:Tw,printClassNames:Bw}=LS;function Nw(e){const t=RS(e);return 0===t.length?"":1===t.length?t[0]:MS.concat(t)}function kw(e,t,n){const r=e.getValue();if(ow(r))return Nw([$S,Nw(e.map((e=>{const t=e.getValue(),n=t.prev?u(t.prev,t):"";return Nw([n?Nw([n,uw(t.prev)?GS:""]):"",i(e)])}),"children"))]);const o=r.children.map((()=>Symbol("")));return Nw(e.map(((e,t)=>{const n=e.getValue();if(mw(n)){if(n.prev&&mw(n.prev)){const t=u(n.prev,n);if(t)return uw(n.prev)?Nw([GS,GS,i(e)]):Nw([t,i(e)])}return i(e)}const r=[],a=[],s=[],c=[],l=n.prev?u(n.prev,n):"",p=n.next?u(n,n.next):"";return l&&(uw(n.prev)?r.push(GS,GS):l===GS?r.push(GS):mw(n.prev)?a.push(l):a.push(zS("",QS,{groupId:o[t-1]}))),p&&(uw(n)?mw(n.next)&&c.push(GS,GS):p===GS?mw(n.next)&&c.push(GS):s.push(p)),Nw([].concat(r,JS(Nw([Nw(a),JS(Nw([i(e),Nw(s)]),{id:o[t]})])),c))}),"children"));function i(e){const r=e.getValue();return cw(r)?Nw([].concat(Jw(r,t),VS(t.originalText.slice(Aw(r)+(r.prev&&Vw(r.prev)?Hw(r).length:0),Fw(r)-(r.next&&$w(r.next)?Kw(r,t).length:0)),KS),zw(r,t))):n(e)}function u(e,t){return mw(e)&&mw(t)?e.isTrailingSpaceSensitive?e.hasTrailingSpaces?yw(t)?GS:YS:"":yw(t)?GS:QS:Vw(e)&&(cw(t)||t.firstChild||t.isSelfClosing||"element"===t.type&&0!==t.attrs.length)||"element"===e.type&&e.isSelfClosing&&$w(t)?"":!t.isLeadingSpaceSensitive||yw(t)||$w(t)&&e.lastChild&&Uw(e.lastChild)&&e.lastChild.lastChild&&Uw(e.lastChild.lastChild)?GS:t.hasLeadingSpaces?YS:QS}}function Pw(e,t){let n=e.startSourceSpan.end.offset;e.firstChild&&qw(e.firstChild)&&(n-=Xw(e).length);let r=e.endSourceSpan.start.offset;return e.lastChild&&Uw(e.lastChild)?r+=Yw(e,t).length:Ww(e)&&(r-=Kw(e.lastChild,t).length),t.originalText.slice(n,r)}function Ow(e,t,n){const r=e.getValue();if(!r.attrs||0===r.attrs.length)return r.isSelfClosing?" ":"";const o=r.prev&&"comment"===r.prev.type&&sw(r.prev.value),i="boolean"==typeof o?()=>o:Array.isArray(o)?e=>o.includes(e.rawName):()=>!1,u=e.map((e=>{const r=e.getValue();return i(r)?Nw(VS(t.originalText.slice(Aw(r),Fw(r)),KS)):n(e)}),"attrs"),a="element"===r.type&&"script"===r.fullName&&1===r.attrs.length&&"src"===r.attrs[0].fullName&&0===r.children.length,s=[HS(Nw([a?" ":YS,XS(YS,u)]))];return r.firstChild&&qw(r.firstChild)||r.isSelfClosing&&Ww(r.parent)||a?s.push(r.isSelfClosing?" ":""):s.push(r.isSelfClosing?YS:QS),Nw(s)}function _w(e,t,n){const r=e.getValue();return Nw([Iw(r,t),Ow(e,t,n),r.isSelfClosing?"":Lw(r)])}function Iw(e,t){return e.prev&&Vw(e.prev)?"":Nw([Jw(e,t),Hw(e)])}function Lw(e){return e.firstChild&&qw(e.firstChild)?"":Xw(e)}function Mw(e,t){return Nw([e.isSelfClosing?"":jw(e,t),Rw(e,t)])}function jw(e,t){return e.lastChild&&Uw(e.lastChild)?"":Nw([Gw(e,t),Yw(e,t)])}function Rw(e,t){return(e.next?$w(e.next):Ww(e.parent))?"":Nw([Kw(e,t),zw(e,t)])}function Vw(e){return e.next&&!mw(e.next)&&mw(e)&&e.isTrailingSpaceSensitive&&!e.hasTrailingSpaces}function qw(e){return!e.prev&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function $w(e){return e.prev&&"docType"!==e.prev.type&&!mw(e.prev)&&e.isLeadingSpaceSensitive&&!e.hasLeadingSpaces}function Ww(e){return e.lastChild&&e.lastChild.isTrailingSpaceSensitive&&!e.lastChild.hasTrailingSpaces&&!mw(aw(e.lastChild))&&!bw(e)}function Uw(e){return!e.next&&!e.hasTrailingSpaces&&e.isTrailingSpaceSensitive&&mw(aw(e))}function Jw(e,t){return qw(e)?Xw(e.parent):$w(e)?Kw(e.prev,t):""}function Gw(e,t){return Ww(e)?Kw(e.lastChild,t):""}function zw(e,t){return Uw(e)?Yw(e.parent,t):Vw(e)?Hw(e.next):""}function Hw(e){switch(e.type){case"ieConditionalComment":case"ieConditionalStartComment":return"\x3c!--[if ".concat(e.condition);case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(e.condition)return"\x3c!--[if ".concat(e.condition,"]>\x3c!--\x3e<").concat(e.rawName);default:return"<".concat(e.rawName)}}function Xw(e){switch(Gu(!e.isSelfClosing),e.type){case"ieConditionalComment":return"]>";case"element":if(e.condition)return">\x3c!--<![endif]--\x3e";default:return">"}}function Yw(e,t){if(Gu(!e.isSelfClosing),Dw(e,t))return"";switch(e.type){case"ieConditionalComment":return"<!";case"element":if(e.hasHtmComponentClosingTag)return"<//";default:return"</".concat(e.rawName)}}function Kw(e,t){if(Dw(e,t))return"";switch(e.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(e.isSelfClosing)return"/>";default:return">"}}function Qw(e,t=e.value){return e.parent.isWhitespaceSensitive?e.parent.isIndentationSensitive?VS(t,KS):VS(rw(ZS(t)),GS):XS(YS,ew(t)).parts}var Zw={preprocess:function(e,t){for(const n of wS)e=n(e,t);return e},print:function(e,t,n){const r=e.getValue();switch(r.type){case"front-matter":return Nw(VS(r.raw,KS));case"root":return t.__onHtmlRoot&&t.__onHtmlRoot(r),MS.concat([JS(kw(e,t,n)),GS]);case"element":case"ieConditionalComment":{if(vw(r,t))return Nw([].concat(Jw(r,t),JS(_w(e,t,n)),VS(Pw(r,t),KS),Mw(r,t),zw(r,t)));const i=1===r.children.length&&"interpolation"===r.firstChild.type&&r.firstChild.isLeadingSpaceSensitive&&!r.firstChild.hasLeadingSpaces&&r.lastChild.isTrailingSpaceSensitive&&!r.lastChild.hasTrailingSpaces,u=Symbol("element-attr-group-id");return Nw([JS(Nw([JS(_w(e,t,n),{id:u}),0===r.children.length?r.hasDanglingSpaces&&r.isDanglingSpaceSensitive?YS:"":Nw([iw(r)?$S:"",(o=Nw([i?zS(QS,"",{groupId:u}):r.firstChild.hasLeadingSpaces&&r.firstChild.isLeadingSpaceSensitive?YS:"text"===r.firstChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive?WS(QS):QS,kw(e,t,n)]),i?zS(HS(o),o,{groupId:u}):!gw(r)&&!pw(r,t)||"root"!==r.parent.type||"vue"!==t.parser||t.vueIndentScriptAndStyle?HS(o):o),(r.next?$w(r.next):Ww(r.parent))?r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?" ":"":i?zS(QS,"",{groupId:u}):r.lastChild.hasTrailingSpaces&&r.lastChild.isTrailingSpaceSensitive?YS:("comment"===r.lastChild.type||"text"===r.lastChild.type&&r.isWhitespaceSensitive&&r.isIndentationSensitive)&&new RegExp("\\n[\\t ]{".concat(t.tabWidth*nw(e,(e=>e.parent&&"root"!==e.parent.type)),"}$")).test(r.lastChild.value)?"":QS])])),Mw(r,t)])}case"ieConditionalStartComment":case"ieConditionalEndComment":return Nw([Iw(r),Rw(r)]);case"interpolation":return Nw([Iw(r,t),Nw(e.map(n,"children")),Rw(r,t)]);case"text":if("interpolation"===r.parent.type){const e=/\n[^\S\n]*?$/,t=e.test(r.value),n=t?r.value.replace(e,""):r.value;return Nw([Nw(VS(n,KS)),t?GS:""])}return US(RS([].concat(Jw(r,t),Qw(r),zw(r,t))));case"docType":return Nw([JS(Nw([Iw(r,t)," ",r.value.replace(/^html\b/i,"html").replace(/\s+/g," ")])),Rw(r,t)]);case"comment":return Nw([Jw(r,t),Nw(VS(t.originalText.slice(Aw(r),Fw(r)),KS)),zw(r,t)]);case"attribute":{if(null===r.value)return r.rawName;const e=Ew(r.value),t=tw(e,"'")<tw(e,'"')?"'":'"';return Nw([r.rawName,Nw(["=",t,Nw(VS('"'===t?e.replace(/"/g,"&quot;"):e.replace(/'/g,"&apos;"),KS)),t])])}default:throw new Error("Unexpected node type ".concat(r.type))}var o},insertPragma:Cw,massageAstNode:Px,embed:function(e,t,n,r){const o=e.getValue();switch(o.type){case"element":if(gw(o)||"interpolation"===o.type)return;if(!o.isSelfClosing&&fw(o,r)){const i=lw(o,r);if(!i)return;const u=Pw(o,r);let a=/^\s*$/.test(u),s="";return a||(s=n(ZS(u),{parser:i},{stripTrailingHardline:!0}),a=""===s),Nw([Jw(o,r),JS(_w(e,r,t)),a?"":GS,s,a?"":GS,Mw(o,r),zw(o,r)])}break;case"text":if(gw(o.parent)){const e=lw(o.parent);if(e){const t="markdown"===e?rw(o.value.replace(/^[^\S\n]*?\n/,"")):o.value,i={parser:e};if("html"===r.parser&&"babel"===e){let e="script";const{attrMap:t}=o.parent;t&&("module"===t.type||"text/babel"===t.type&&"module"===t["data-type"])&&(e="module"),i.__babelSourceType=e}return MS.concat([Nw([$S,Jw(o,r),n(t,i,{stripTrailingHardline:!0}),zw(o,r)])])}}else if("interpolation"===o.parent.type)return Nw([HS(Nw([YS,n(o.value,Object.assign({__isInHtmlInterpolation:!0},"angular"===r.parser?{parser:"__ng_interpolation",trailingComma:"none"}:"vue"===r.parser?{parser:"__vue_expression"}:{parser:"__js_expression"}),{stripTrailingHardline:!0})])),o.parent.next&&$w(o.parent.next)?" ":YS]);break;case"attribute":{if(!o.value)break;if(/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(r.originalText.slice(o.valueSpan.start.offset,o.valueSpan.end.offset)))return Nw([o.rawName,"=",o.value]);if("lwc"===r.parser&&/^{[\S\s]*}$/.test(r.originalText.slice(o.valueSpan.start.offset,o.valueSpan.end.offset)))return Nw([o.rawName,"=",o.value]);const e=function(e,t,n){const r=t=>new RegExp(t.join("|")).test(e.fullName),o=()=>Ew(e.value);let i=!1;const u=(e,t)=>{const n="NGRoot"===e.type?"NGMicrosyntax"===e.node.type&&1===e.node.body.length&&"NGMicrosyntaxExpression"===e.node.body[0].type?e.node.body[0].expression:e.node:"JsExpressionRoot"===e.type?e.node:e;!n||"ObjectExpression"!==n.type&&"ArrayExpression"!==n.type&&("__vue_expression"!==t.parser||"TemplateLiteral"!==n.type&&"StringLiteral"!==n.type)||(i=!0)},a=(e,t=!0)=>JS(Nw([HS(Nw([QS,e])),t?QS:""])),s=e=>i?(e=>JS(e))(e):a(e),c=(e,n)=>t(e,Object.assign({__onHtmlBindingRoot:u},n));if("srcset"===e.fullName&&("img"===e.parent.fullName||"source"===e.parent.fullName))return a(Tw(o()));if("class"===e.fullName&&!n.parentParser){const e=o();if(!e.includes("{{"))return Bw(e)}if("style"===e.fullName&&!n.parentParser){const e=o();if(!e.includes("{{"))return a(c(e,{parser:"css",__isHTMLStyleAttribute:!0}))}if("vue"===n.parser){if("v-for"===e.fullName)return xw(o(),c);if(dw(e)||hw(e,n))return Sw(o(),c);const t=["^:","^v-bind:"],i=["^v-"];if(r(["^@","^v-on:"])){const e=o();return s(c(e,{parser:ww(e)?"__js_expression":"__vue_event_binding"}))}if(r(t))return s(c(o(),{parser:"__vue_expression"}));if(r(i))return s(c(o(),{parser:"__js_expression"}))}if("angular"===n.parser){const t=(e,t)=>c(e,Object.assign({},t,{trailingComma:"none"})),n=["^\\*"],i=["^\\[.+\\]$","^bind(on)?-","^ng-(if|show|hide|class|style)$"],u=["^i18n(-.+)?$"];if(r(["^\\(.+\\)$","^on-"]))return s(t(o(),{parser:"__ng_action"}));if(r(i))return s(t(o(),{parser:"__ng_binding"}));if(r(u)){const t=o().trim();return a(US(Qw(e,t)),!t.includes("@@"))}if(r(n))return s(t(o(),{parser:"__ng_directive"}));const l=/{{([\S\s]+?)}}/g,p=o();if(l.test(p)){const e=[];return p.split(l).forEach(((n,r)=>{if(r%2==0)e.push(Nw(VS(n,KS)));else try{e.push(JS(Nw(["{{",HS(Nw([YS,t(n,{parser:"__ng_interpolation",__isInHtmlInterpolation:!0})])),YS,"}}"])))}catch(t){e.push("{{",Nw(VS(n,KS)),"}}")}})),JS(Nw(e))}}return null}(o,((e,t)=>n(e,Object.assign({__isInHtmlAttribute:!0},t),{stripTrailingHardline:!0})),r);if(e)return Nw([o.rawName,'="',JS(jS(e,(e=>"string"==typeof e?e.replace(/"/g,"&quot;"):e))),'"']);break}case"front-matter":return qS(o,n)}}};const eT="HTML";var tT={htmlWhitespaceSensitivity:{since:"1.15.0",category:eT,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},vueIndentScriptAndStyle:{since:"1.19.0",category:eT,type:"boolean",default:!1,description:"Indent script and style tags in Vue files."}},nT={name:"HTML",type:"markup",tmScope:"text.html.basic",aceMode:"html",codemirrorMode:"htmlmixed",codemirrorMimeType:"text/html",color:"#e34c26",aliases:["xhtml"],extensions:[".html",".htm",".html.hl",".inc",".st",".xht",".xhtml"],languageId:146},rT={languages:[Cs(nT,(()=>({name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]}))),Cs(nT,(e=>({since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:e.extensions.concat([".mjml"])}))),Cs(nT,(()=>({name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]}))),Cs({name:"Vue",type:"markup",color:"#2c3e50",extensions:[".vue"],tmScope:"text.html.vue",aceMode:"html",languageId:391},(()=>({since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]})))],printers:{html:Zw},options:tT,parsers:{get html(){return{}.parsers.html},get vue(){return{}.parsers.vue},get angular(){return{}.parsers.angular},get lwc(){return{}.parsers.lwc}}};const{getLast:oT}=It;function iT(e,t){return e&&"string"==typeof e.type&&(!t||t.includes(e.type))}function uT(e){return"prettier-ignore"===e.value.trim()}function aT(e){return e&&e.leadingComments&&0!==e.leadingComments.length}function sT(e){return e&&e.middleComments&&0!==e.middleComments.length}function cT(e){return e&&e.indicatorComment}function lT(e){return e&&e.trailingComment}function pT(e){return e&&e.endComments&&0!==e.endComments.length}function fT(e){const t=[];let n;for(const r of e.split(/( +)/g))" "!==r?" "===n?t.push(r):t.push((t.pop()||"")+r):void 0===n&&t.unshift(""),n=r;return" "===n&&t.push((t.pop()||"")+" "),""===t[0]&&(t.shift(),t.unshift(" "+(t.shift()||""))),t}var dT={getLast:oT,getAncestorCount:function(e,t){let n=0;const r=e.stack.length-1;for(let o=0;o<r;o++){const r=e.stack[o];iT(r)&&t(r)&&n++}return n},isNode:iT,isEmptyNode:function(e){return!(e.children&&0!==e.children.length||function(e){return aT(e)||sT(e)||cT(e)||lT(e)||pT(e)}(e))},mapNode:function e(t,n,r){return n("children"in t?Object.assign({},t,{children:t.children.map((r=>e(r,n,t)))}):t,r)},defineShortcut:function(e,t,n){Object.defineProperty(e,t,{get:n,enumerable:!1})},isNextLineEmpty:function(e,t){let n=0;const r=t.length;for(let o=e.position.end.offset-1;o<r;o++){const e=t[o];if("\n"===e&&n++,1===n&&/\S/.test(e))return!1;if(2===n)return!0}return!1},isLastDescendantNode:function(e){switch(e.getValue().type){case"tag":case"anchor":case"comment":return!1}const t=e.stack.length;for(let n=1;n<t;n++){const t=e.stack[n],r=e.stack[n-1];if(Array.isArray(r)&&"number"==typeof t&&t!==r.length-1)return!1}return!0},getBlockValueLineContents:function(e,{parentIndent:t,isLastDescendant:n,options:r}){const o=e.position.start.line===e.position.end.line?"":r.originalText.slice(e.position.start.offset,e.position.end.offset).match(/^[^\n]*?\n([\S\s]*)$/)[1],i=null===e.indent?(u=o.match(/^( *)\S/m))?u[1].length:1/0:e.indent-1+t;var u;const a=o.split("\n").map((e=>e.slice(i)));return"preserve"===r.proseWrap||"blockLiteral"===e.type?s(a.map((e=>0===e.length?[]:[e]))):s(a.map((e=>0===e.length?[]:fT(e))).reduce(((e,t,n)=>0===n||0===a[n-1].length||0===t.length||/^\s/.test(t[0])||/^\s|\s$/.test(oT(e))?e.concat([t]):e.concat([e.pop().concat(t)])),[]).map((e=>e.reduce(((e,t)=>0!==e.length&&/\s$/.test(oT(e))?e.concat(e.pop()+" "+t):e.concat(t)),[]))).map((e=>"never"===r.proseWrap?[e.join(" ")]:e)));function s(t){if("keep"===e.chomping)return 0===oT(t).length?t.slice(0,-1):t;let r=0;for(let e=t.length-1;e>=0&&0===t[e].length;e--)r++;return 0===r?t:r>=2&&!n?t.slice(0,-(r-1)):t.slice(0,-r)}},getFlowScalarLineContents:function(e,t,n){const r=t.split("\n").map(((e,t,n)=>0===t&&t===n.length-1?e:0!==t&&t!==n.length-1?e.trim():0===t?e.trimEnd():e.trimStart()));return"preserve"===n.proseWrap?r.map((e=>0===e.length?[]:[e])):r.map((e=>0===e.length?[]:fT(e))).reduce(((t,n,o)=>0===o||0===r[o-1].length||0===n.length||"quoteDouble"===e&&oT(oT(t)).endsWith("\\")?t.concat([n]):t.concat([t.pop().concat(n)])),[]).map((e=>"never"===n.proseWrap?[e.join(" ")]:e))},getLastDescendantNode:function e(t){return"children"in t&&0!==t.children.length?e(oT(t.children)):t},hasPrettierIgnore:function(e){const t=e.getValue();if("documentBody"===t.type){const t=e.getParentNode();return pT(t.head)&&uT(oT(t.head.endComments))}return aT(t)&&uT(oT(t.leadingComments))},hasLeadingComments:aT,hasMiddleComments:sT,hasIndicatorComment:cT,hasTrailingComment:lT,hasEndComments:pT};const hT=cn.builders,{conditionalGroup:gT,breakParent:mT,concat:yT,dedent:DT,dedentToRoot:vT,fill:ET,group:bT,hardline:CT,ifBreak:AT,join:FT,line:xT,lineSuffix:ST,literalline:wT,markAsRoot:TT,softline:BT}=hT,{replaceEndOfLineWith:NT,isPreviousLineEmpty:kT}=It,{insertPragma:PT,isPragma:OT}={isPragma:function(e){return/^\s*@(prettier|format)\s*$/.test(e)},hasPragma:function(e){return/^\s*#[^\S\n]*@(prettier|format)\s*?(\n|$)/.test(e)},insertPragma:function(e){return"# @format\n\n".concat(e)}},{locStart:_T}={locStart:function(e){return e.position.start.offset},locEnd:function(e){return e.position.end.offset}},{getAncestorCount:IT,getBlockValueLineContents:LT,getFlowScalarLineContents:MT,getLast:jT,getLastDescendantNode:RT,hasLeadingComments:VT,hasMiddleComments:qT,hasIndicatorComment:$T,hasTrailingComment:WT,hasEndComments:UT,hasPrettierIgnore:JT,isLastDescendantNode:GT,isNextLineEmpty:zT,isNode:HT,isEmptyNode:XT,defineShortcut:YT,mapNode:KT}=dT;function QT(e){switch(e.type){case"document":YT(e,"head",(()=>e.children[0])),YT(e,"body",(()=>e.children[1]));break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":YT(e,"content",(()=>e.children[0]));break;case"mappingItem":case"flowMappingItem":YT(e,"key",(()=>e.children[0])),YT(e,"value",(()=>e.children[1]))}return e}function ZT(e,t,n,r,o){switch(e.type){case"root":return yT([FT(CT,n.map(((t,r)=>{const i=e.children[r],u=e.children[r+1];return yT([o(t),rB(i,u)?yT([CT,"...",WT(i)?yT([" ",n.call(o,"trailingComment")]):""]):!u||WT(u.head)?"":yT([CT,"---"])])}),"children")),0===e.children.length||(u=RT(e),HT(u,["blockLiteral","blockFolded"])&&"keep"===u.chomping)?"":CT]);case"document":{const i=t.children[n.getName()+1];return FT(CT,["head"===oB(e,i,t,r)?FT(CT,[0===e.head.children.length&&0===e.head.endComments.length?"":n.call(o,"head"),yT(["---",WT(e.head)?yT([" ",n.call(o,"head","trailingComment")]):""])].filter(Boolean)):"",nB(e)?n.call(o,"body"):""].filter(Boolean))}case"documentHead":return FT(CT,[].concat(n.map(o,"children"),n.map(o,"endComments")));case"documentBody":{const t=FT(CT,n.map(o,"children")).parts,r=FT(CT,n.map(o,"endComments")).parts,i=0===t.length||0===r.length?"":(e=>HT(e,["blockFolded","blockLiteral"])?"keep"===e.chomping?"":yT([CT,CT]):CT)(RT(e));return yT([].concat(t,i,r))}case"directive":return yT(["%",FT(" ",[e.name].concat(e.parameters))]);case"comment":return yT(["#",e.value]);case"alias":return yT(["*",e.value]);case"tag":return r.originalText.slice(e.position.start.offset,e.position.end.offset);case"anchor":return yT(["&",e.value]);case"plain":return lB(e.type,r.originalText.slice(e.position.start.offset,e.position.end.offset),r);case"quoteDouble":case"quoteSingle":{const t="'",n='"',o=r.originalText.slice(e.position.start.offset+1,e.position.end.offset-1);if("quoteSingle"===e.type&&o.includes("\\")||"quoteDouble"===e.type&&/\\[^"]/.test(o)){const i="quoteDouble"===e.type?n:t;return yT([i,lB(e.type,o,r),i])}if(o.includes(n))return yT([t,lB(e.type,"quoteDouble"===e.type?o.replace(/\\"/g,n).replace(/'/g,t.repeat(2)):o,r),t]);if(o.includes(t))return yT([n,lB(e.type,"quoteSingle"===e.type?o.replace(/''/g,t):o,r),n]);const i=r.singleQuote?t:n;return yT([i,lB(e.type,o,r),i])}case"blockFolded":case"blockLiteral":{const t=IT(n,(e=>HT(e,["sequence","mapping"]))),i=GT(n);return yT(["blockFolded"===e.type?">":"|",null===e.indent?"":e.indent.toString(),"clip"===e.chomping?"":"keep"===e.chomping?"+":"-",$T(e)?yT([" ",n.call(o,"indicatorComment")]):"",(null===e.indent?DT:vT)(eB(null===e.indent?r.tabWidth:e.indent-1+t,yT(LT(e,{parentIndent:t,isLastDescendant:i,options:r}).reduce(((t,n,r,o)=>t.concat(0===r?CT:"",ET(FT(xT,n).parts),r!==o.length-1?0===n.length?CT:TT(wT):"keep"===e.chomping&&i?0===n.length?vT(CT):vT(wT):"")),[]))))])}case"sequence":return FT(CT,n.map(o,"children"));case"sequenceItem":return yT(["- ",eB(2,e.content?n.call(o,"content"):"")]);case"mappingKey":case"mappingValue":return e.content?n.call(o,"content"):"";case"mapping":return FT(CT,n.map(o,"children"));case"mappingItem":case"flowMappingItem":{const i=XT(e.key),u=XT(e.value);if(i&&u)return yT([": "]);const s=n.call(o,"key"),c=n.call(o,"value");if(u)return"flowMappingItem"===e.type&&"flowMapping"===t.type?s:"mappingItem"!==e.type||!iB(e.key.content,r)||WT(e.key.content)||t.tag&&"tag:yaml.org,2002:set"===t.tag.value?yT(["? ",eB(2,s)]):yT([s,uB(e)?" ":"",":"]);if(i)return yT([": ",eB(2,c)]);const l=Symbol("mappingKey");return VT(e.value)||!tB(e.key.content)?yT(["? ",eB(2,s),CT,FT("",n.map(o,"value","leadingComments").map((e=>yT([e,CT])))),": ",eB(2,c)]):!function(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":return e.position.start.line===e.position.end.line;case"alias":return!0;default:return!1}}(e.key.content)||VT(e.key.content)||qT(e.key.content)||WT(e.key.content)||UT(e.key)||VT(e.value.content)||qT(e.value.content)||UT(e.value)||!iB(e.value.content,r)?gT([yT([bT(yT([AT("? "),bT(eB(2,s),{id:l})])),AT(yT([CT,": ",eB(2,c)]),a(yT([uB(e)?" ":"",":",VT(e.value.content)||UT(e.value)&&e.value.content&&!HT(e.value.content,["mapping","sequence"])||"mapping"===t.type&&WT(e.key.content)&&tB(e.value.content)||HT(e.value.content,["mapping","sequence"])&&null===e.value.content.tag&&null===e.value.content.anchor?CT:e.value.content?xT:"",c])),{groupId:l})])]):yT([s,uB(e)?" ":"",": ",c])}case"flowMapping":case"flowSequence":{const t="flowMapping"===e.type?"{":"[",u="flowMapping"===e.type?"}":"]",s="flowMapping"===e.type&&0!==e.children.length&&r.bracketSpacing?xT:BT,c=0!==e.children.length&&"flowMappingItem"===(i=jT(e.children)).type&&XT(i.key)&&XT(i.value),l="none"===r.trailingComma?"":AT(",","");return yT([t,a(yT([s,yT(n.map(((t,n)=>yT([o(t),n===e.children.length-1?"":yT([",",xT,e.children[n].position.start.line!==e.children[n+1].position.start.line?cB(t,r.originalText):""])])),"children")),l,UT(e)?yT([CT,FT(CT,n.map(o,"endComments"))]):""])),c?"":s,u])}case"flowSequenceItem":return n.call(o,"content");default:throw new Error("Unexpected node type ".concat(e.type))}var i,u;function a(e){return hT.align(" ".repeat(r.tabWidth),e)}}function eB(e,t){return"number"==typeof e&&e>0?hT.align(" ".repeat(e),t):hT.align(e,t)}function tB(e){if(!e)return!0;switch(e.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return!0;default:return!1}}function nB(e){return 0!==e.body.children.length||UT(e.body)}function rB(e,t){return WT(e)||t&&(0!==t.head.children.length||UT(t.head))}function oB(e,t,n,r){return n.children[0]===e&&/---(\s|$)/.test(r.originalText.slice(_T(e),_T(e)+4))||0!==e.head.children.length||UT(e.head)||WT(e.head)?"head":!rB(e,t)&&!!t&&"root"}function iB(e,t){if(!e)return!0;switch(e.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return!0;default:return!1}if("preserve"===t.proseWrap)return e.position.start.line===e.position.end.line;if(/\\$/m.test(t.originalText.slice(e.position.start.offset,e.position.end.offset)))return!1;switch(t.proseWrap){case"never":return!e.value.includes("\n");case"always":return!/[\n ]/.test(e.value);default:return!1}}function uB(e){return e.key.content&&"alias"===e.key.content.type}function aB(e){return UT(e)&&!HT(e,["documentHead","documentBody","flowMapping","flowSequence"])}const sB=new WeakMap;function cB(e,t){const n=e.getValue(),r=e.stack[0];let o;return sB.has(r)?o=sB.get(r):(o=new Set,sB.set(r,o)),o.has(n.position.end.line)||(o.add(n.position.end.line),!zT(n,t)||aB(e.getParentNode()))?"":BT}function lB(e,t,n){const r=MT(e,t,n);return FT(CT,r.map((e=>ET(FT(xT,e).parts))))}var pB={preprocess:function(e){return KT(e,QT)},print:function(e,t,n){const r=e.getValue(),o=e.getParentNode(),i=r.tag?e.call(n,"tag"):"",u=r.anchor?e.call(n,"anchor"):"",a=HT(r,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!GT(e)?cB(e,t.originalText):"";return yT(["mappingValue"!==r.type&&VT(r)?yT([FT(CT,e.map(n,"leadingComments")),CT]):"",i,i&&u?" ":"",u,i||u?HT(r,["sequence","mapping"])&&!qT(r)?CT:" ":"",qT(r)?yT([1===r.middleComments.length?"":CT,FT(CT,e.map(n,"middleComments")),CT]):"",JT(e)?yT(NT(t.originalText.slice(r.position.start.offset,r.position.end.offset).trimEnd(),wT)):bT(ZT(r,o,e,t,n)),WT(r)&&!HT(r,["document","documentHead"])?ST(yT(["mappingValue"!==r.type||r.content?" ":"","mappingKey"===o.type&&"mapping"===e.getParentNode(2).type&&tB(r)?"":mT,e.call(n,"trailingComment")])):"",aB(r)?eB("sequenceItem"===r.type?2:0,yT([CT,FT(CT,e.map((e=>yT([kT(t.originalText,e.getValue(),_T)?CT:"",n(e)])),"endComments"))])):"",a])},massageAstNode:function(e,t){if(HT(t))switch(delete t.position,t.type){case"comment":if(OT(t.value))return null;break;case"quoteDouble":case"quoteSingle":t.type="quote"}},insertPragma:PT},fB={bracketSpacing:AE.bracketSpacing,singleQuote:AE.singleQuote,proseWrap:AE.proseWrap},dB=[TE,TC,OA,QA,Tx,rT,{languages:[Cs({name:"YAML",type:"data",color:"#cb171e",tmScope:"source.yaml",aliases:["yml"],extensions:[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"],filenames:[".clang-format",".clang-tidy",".gemrc","glide.lock","yarn.lock"],aceMode:"yaml",codemirrorMode:"yaml",codemirrorMimeType:"text/x-yaml",languageId:407},(e=>({since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml","ansible","home-assistant"],filenames:e.filenames.filter((e=>"yarn.lock"!==e))})))],printers:{yaml:pB},options:fB,parsers:{get yaml(){return{}.parsers.yaml}}}];const{version:hB}=r,{getSupportInfo:gB}=mt,mB=dB.map((t=>e(t,["parsers"])));function yB(e,t=1){return(...n)=>{const r=n[t]||{},o=r.plugins||[];return n[t]=Object.assign({},r,{plugins:[...mB,...Array.isArray(o)?o:Object.values(o)]}),e(...n)}}const DB=yB(Ka.formatWithCursor);return{formatWithCursor:DB,format:(e,t)=>DB(e,t).formatted,check(e,t){const{formatted:n}=DB(e,t);return n===e},doc:cn,getSupportInfo:yB(gB,0),version:hB,util:bs,__debug:{parse:yB(Ka.parse),formatAST:yB(Ka.formatAST),formatDoc:yB(Ka.formatDoc),printToDoc:yB(Ka.printToDoc),printDocToString:yB(Ka.printDocToString)}}}()},5666:function(e){var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",u=o.asyncIterator||"@@asyncIterator",a=o.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var o=t&&t.prototype instanceof m?t:m,i=Object.create(o.prototype),u=new T(r||[]);return i._invoke=function(e,t,n){var r=p;return function(o,i){if(r===d)throw new Error("Generator is already running");if(r===h){if("throw"===o)throw i;return N()}for(n.method=o,n.arg=i;;){var u=n.delegate;if(u){var a=x(u,n);if(a){if(a===g)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===p)throw r=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var s=l(e,t,n);if("normal"===s.type){if(r=n.done?h:f,s.arg===g)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r=h,n.method="throw",n.arg=s.arg)}}}(e,n,u),i}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var p="suspendedStart",f="suspendedYield",d="executing",h="completed",g={};function m(){}function y(){}function D(){}var v={};v[i]=function(){return this};var E=Object.getPrototypeOf,b=E&&E(E(B([])));b&&b!==n&&r.call(b,i)&&(v=b);var C=D.prototype=m.prototype=Object.create(v);function A(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function F(e,t){function n(o,i,u,a){var s=l(e[o],e,i);if("throw"!==s.type){var c=s.arg,p=c.value;return p&&"object"==typeof p&&r.call(p,"__await")?t.resolve(p.__await).then((function(e){n("next",e,u,a)}),(function(e){n("throw",e,u,a)})):t.resolve(p).then((function(e){c.value=e,u(c)}),(function(e){return n("throw",e,u,a)}))}a(s.arg)}var o;this._invoke=function(e,r){function i(){return new t((function(t,o){n(e,r,t,o)}))}return o=o?o.then(i,i):i()}}function x(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,x(e,n),"throw"===n.method))return g;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var o=l(r,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,g;var i=o.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function S(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function w(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function B(e){if(e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,u=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return u.next=u}}return{next:N}}function N(){return{value:t,done:!0}}return y.prototype=C.constructor=D,D.constructor=y,y.displayName=s(D,a,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,D):(e.__proto__=D,s(e,a,"GeneratorFunction")),e.prototype=Object.create(C),e},e.awrap=function(e){return{__await:e}},A(F.prototype),F.prototype[u]=function(){return this},e.AsyncIterator=F,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var u=new F(c(t,n,r,o),i);return e.isGeneratorFunction(n)?u:u.next().then((function(e){return e.done?e.value:u.next()}))},A(C),s(C,a,"Generator"),C[i]=function(){return this},C.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=B,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(w),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return a.type="throw",a.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var u=this.tryEntries[i],a=u.completion;if("root"===u.tryLoc)return o("end");if(u.tryLoc<=this.prev){var s=r.call(u,"catchLoc"),c=r.call(u,"finallyLoc");if(s&&c){if(this.prev<u.catchLoc)return o(u.catchLoc,!0);if(this.prev<u.finallyLoc)return o(u.finallyLoc)}else if(s){if(this.prev<u.catchLoc)return o(u.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<u.finallyLoc)return o(u.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var u=i?i.completion:{};return u.type=e,u.arg=t,i?(this.method="next",this.next=i.finallyLoc,g):this.complete(u)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),w(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;w(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:B(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),function(){"use strict";n(1983);var e,t=(e=n(115))&&e.__esModule?e:{default:e};t.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),t.default._babelPolyfill=!0}(),function(){"use strict";const e={only_letters:"Cannot contain numbers",invalid_email:"Invalid mail",empty:"Required to fill"};function t(e){switch(e){case"enable":document.querySelector("body").style.overflow="hidden";break;case"disable":document.querySelector("body").style.overflow="auto"}}n(3945);const{request:r}={request:async function(e,t="GET",n=null,r={}){try{n&&(n=JSON.stringify(n),r["Content-Type"]="application/json; charset=UTF-8");const o=await fetch(e,{method:t,body:n,headers:r}),i=await o.json();if(!o.ok)throw new Error(i.message||"Что-то пошло нет так");return i}catch(e){throw e}}};function o({urlRequest:e,formType:t,formId:n,btnId:r}){this.fields={},this.errors=[],this.formType=t,this.formId=n,this.urlRequest=e,this.buttonIdToOpenForm=r||null}o.prototype.handlerFields=function({target:e}){const t=e,n=t.name,r=t.value;this.fields[n]=r},o.prototype.handlerValidateFields=function(){for(const e in this.fields)if(this.fields[e])switch(""===this.fields[e]&&this.handlerErrorLog({inputErrorName:e,inputErrorType:"empty"}),e){case"user_name":if(/\d|\(|\)/.test(this.fields[e])){this.handlerErrorLog({inputErrorName:e,inputErrorType:"only_letters"});break}this.handlerClearErrorLog({inputErrorName:e});break;case"email":if(/\S+@\S+\.\S+/.test(this.fields[e])){this.handlerClearErrorLog({inputErrorName:e});break}this.handlerErrorLog({inputErrorName:e,inputErrorType:"invalid_email"})}else this.handlerErrorLog({inputErrorName:e,inputErrorType:"empty"})},o.prototype.displayValidationErrors=function(){this.errors.forEach((({error:t,fieldName:n})=>{let r=document.querySelector(`${this.formId} .contact-form__group-field .contact-form__input[name=${n}] + .contact-form__validation-issue`);r.innerText=e[t],r.classList.toggle("contact-form__validation-issue_hide"),setTimeout((()=>{r.classList.toggle("contact-form__validation-issue_hide")}),3e3)}))},o.prototype.handlerErrorLog=function({inputErrorName:e,inputErrorType:t}){const n={fieldName:e,error:t},r=this.errors.findIndex((({fieldName:t})=>t===e));r>=0?this.errors[r]=n:this.errors.push(n)},o.prototype.handlerClearErrorLog=function({inputErrorName:e}){const t=this.errors.findIndex((({fieldName:t})=>t===e));t>=0&&this.errors.length>0&&(this.errors=this.errors.filter(((e,n)=>n!==t)))},o.prototype.handlerSubmit=async function(e){let t="";if(e.preventDefault(),this.handlerValidateFields(),0===this.errors.length&&0!==Object.keys(this.fields).length)try{const e=this.fields;await r(this.urlRequest,"POST",{sendingData:e}),this.displayResultMessage("success")}catch(e){t=e.message,this.displayResultMessage("error",t)}else this.displayValidationErrors()},o.prototype.handlerOpenForm=function(){let e=null;"popup"===this.formType?(e=document.querySelector(".wrapper-popup-form"),e.classList.contains("wrapper-popup-form_hide")&&e.classList.remove("wrapper-popup-form_hide"),t("enable")):(e=document.querySelector(".contact-form"),e.classList.toggle("contact-form_hide"))},o.prototype.handlerCloseForm=function({target:e}){!e.parentNode.classList.contains("wrapper-popup-form_hide")&&e.parentNode.classList.add("wrapper-popup-form_hide"),t("disable")},o.prototype.displayResultMessage=function(e,t=""){let n=null;n="popup"===this.formType?document.querySelector(".wrapper-popup-form .form-result-message"):document.querySelector(".form-result-message"),"success"===e?(n.classList.toggle("form-result-message_hide"),setTimeout((()=>{n.classList.toggle("form-result-message_hide")}),3e3)):(n.innerText=`${t} try again`,n.classList.toggle("form-result-message_hide"),setTimeout((()=>{n.classList.toggle("form-result-message_hide")}),3e3))},o.prototype.addHandlers=function(){document.querySelector(`${this.formId}`)&&(document.querySelectorAll(`${this.formId} .contact-form__input`).forEach((e=>{e.addEventListener("input",(e=>this.handlerFields(e)))})),document.querySelector(`${this.formId} button[data-submit="true"]`).addEventListener("click",(e=>this.handlerSubmit(e))),"popup"===this.formType&&(document.querySelector(`.btn[data-openForm="${this.buttonIdToOpenForm}"]`).addEventListener("click",this.handlerOpenForm.bind(this)),document.querySelector(".wrapper-popup-form .wrapper-popup-form__close").addEventListener("click",(e=>this.handlerCloseForm(e)))))};const i=new o({urlRequest:"https://jsonplaceholder.typicode.com/posts",formId:"#popup-form-1",formType:"popup",btnId:"1"}),u=new o({urlRequest:"https://jsonplaceholder.typicode.com/posts",formId:"#popup-form-2",formType:"default"}),a=new o({urlRequest:"https://jsonplaceholder.typicode.com/posts",formId:"#popup-form-3",formType:"popup",btnId:"3"});document.addEventListener("DOMContentLoaded",(()=>{i.addHandlers(),u.addHandlers(),a.addHandlers()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,